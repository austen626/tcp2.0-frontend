{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp2.0-frontend/src/components/commons/button.js\";\nimport React from 'react';\n\nconst handleClick = (e, callback) => {\n  if (callback) {\n    e.preventDefault();\n    callback(e);\n  }\n};\n\nconst Button = props => {\n  const {\n    label,\n    role,\n    className = null,\n    ariaLabel,\n    type,\n    buttonRef,\n    dataname,\n    dataid,\n    tabIndex,\n    isDisabled,\n    title = '',\n    optionalParams\n  } = props;\n  const buttonTitle = ariaLabel || title;\n  return props.children ? /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    role: role,\n    type: type,\n    ref: buttonRef,\n    tabIndex: tabIndex,\n    \"data-name\": dataname,\n    \"data-id\": dataid,\n    className: className,\n    \"aria-lable\": buttonTitle,\n    onClick: () => {\n      handleClick(e, props.onClick);\n    },\n    title: buttonTitle,\n    disabled: isDisabled\n  }, optionalParams, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), props.children) : /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    role: role,\n    type: type,\n    \"aria-lable\": buttonTitle,\n    ref: buttonRef,\n    tabIndex: tabIndex,\n    \"data-name\": dataname,\n    \"data-id\": dataid,\n    className: className,\n    onClick: () => {\n      handleClick(e, props.onClick);\n    },\n    title: buttonTitle,\n    disabled: isDisabled\n  }, optionalParams, {\n    dangerouslySetInnerHTML: {\n      __html: label\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Button;","map":{"version":3,"sources":["/home/freedom/Music/tcp2.0-frontend/src/components/commons/button.js"],"names":["React","handleClick","e","callback","preventDefault","Button","props","label","role","className","ariaLabel","type","buttonRef","dataname","dataid","tabIndex","isDisabled","title","optionalParams","buttonTitle","children","onClick","__html"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAG,CAACC,CAAD,EAAIC,QAAJ,KAAiB;AAEjC,MAAIA,QAAJ,EAAe;AACXD,IAAAA,CAAC,CAACE,cAAF;AACAD,IAAAA,QAAQ,CAACD,CAAD,CAAR;AACH;AACJ,CAND;;AAUA,MAAMG,MAAM,GAAKC,KAAF,IAAa;AAExB,QAAM;AACFC,IAAAA,KADE;AAEFC,IAAAA,IAFE;AAGFC,IAAAA,SAAS,GAAG,IAHV;AAIFC,IAAAA,SAJE;AAKFC,IAAAA,IALE;AAMFC,IAAAA,SANE;AAOFC,IAAAA,QAPE;AAQFC,IAAAA,MARE;AASFC,IAAAA,QATE;AAUFC,IAAAA,UAVE;AAWFC,IAAAA,KAAK,GAAG,EAXN;AAYFC,IAAAA;AAZE,MAaFZ,KAbJ;AAeA,QAAMa,WAAW,GAAGT,SAAS,IAAIO,KAAjC;AAEA,SAEIX,KAAK,CAACc,QAAN,gBACI;AACI,IAAA,IAAI,EAAIZ,IADZ;AAEI,IAAA,IAAI,EAAKG,IAFb;AAGI,IAAA,GAAG,EAAKC,SAHZ;AAII,IAAA,QAAQ,EAAKG,QAJjB;AAKI,iBAAcF,QALlB;AAMI,eAAYC,MANhB;AAOI,IAAA,SAAS,EAAKL,SAPlB;AAQI,kBAAeU,WARnB;AASI,IAAA,OAAO,EAAI,MAAM;AACblB,MAAAA,WAAW,CAAEC,CAAF,EAAKI,KAAK,CAACe,OAAX,CAAX;AACH,KAXL;AAYI,IAAA,KAAK,EAAKF,WAZd;AAaI,IAAA,QAAQ,EAAKH;AAbjB,KAcSE,cAdT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAgBMZ,KAAK,CAACc,QAhBZ,CADJ,gBAoBI;AACI,IAAA,IAAI,EAAIZ,IADZ;AAEI,IAAA,IAAI,EAAKG,IAFb;AAGI,kBAAeQ,WAHnB;AAII,IAAA,GAAG,EAAKP,SAJZ;AAKI,IAAA,QAAQ,EAAKG,QALjB;AAMI,iBAAcF,QANlB;AAOI,eAAYC,MAPhB;AAQI,IAAA,SAAS,EAAKL,SARlB;AASI,IAAA,OAAO,EAAI,MAAM;AACbR,MAAAA,WAAW,CAAEC,CAAF,EAAKI,KAAK,CAACe,OAAX,CAAX;AACH,KAXL;AAYI,IAAA,KAAK,EAAKF,WAZd;AAaI,IAAA,QAAQ,EAAKH;AAbjB,KAcSE,cAdT;AAeI,IAAA,uBAAuB,EAAI;AAAEI,MAAAA,MAAM,EAAEf;AAAV,KAf/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAtBR;AAwCH,CA3DD;;AA6DA,eAAeF,MAAf","sourcesContent":["import React from 'react';\n\nconst handleClick = (e, callback) => {\n\n    if( callback ) {\n        e.preventDefault();\n        callback(e);\n    }\n};\n\n\n\nconst Button = ( props ) => {\n\n    const {\n        label,\n        role,\n        className = null,\n        ariaLabel,\n        type,\n        buttonRef,\n        dataname,\n        dataid,\n        tabIndex,\n        isDisabled,\n        title = '',\n        optionalParams\n    } = props;\n\n    const buttonTitle = ariaLabel || title;\n\n    return (\n\n        props.children ?\n            <button\n                role ={ role }\n                type = { type }\n                ref = { buttonRef }\n                tabIndex = { tabIndex }\n                data-name = { dataname }\n                data-id = { dataid }\n                className = { className }\n                aria-lable = { buttonTitle }\n                onClick = {() => {\n                    handleClick( e, props.onClick );\n                }}  \n                title = { buttonTitle }\n                disabled = { isDisabled }\n                { ...optionalParams }\n            >\n                { props.children }\n            </button>\n            :\n            <button\n                role ={ role }\n                type = { type }\n                aria-lable = { buttonTitle }\n                ref = { buttonRef }\n                tabIndex = { tabIndex }\n                data-name = { dataname }\n                data-id = { dataid }\n                className = { className }\n                onClick = {() => {\n                    handleClick( e, props.onClick );\n                }}  \n                title = { buttonTitle }\n                disabled = { isDisabled }\n                { ...optionalParams }\n                dangerouslySetInnerHTML = {{ __html: label }}\n            />\n    );\n};\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}