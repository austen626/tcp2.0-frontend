{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp-frontend/src/screens/User/Profile/profileForm.js\";\nimport React, { useEffect } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { Button } from 'react-bootstrap';\nimport { renderField } from 'utils/formUtils';\nimport { userForm as validate } from 'utils/validate';\nimport Header from 'components/Sales/Header';\nimport Footer from 'components/Sales/Footer';\nimport Loader from 'shared/Loader';\nimport { IconHome, IconProfileActive, IconArrowLeft } from 'assets/images';\n\nconst ProfileForm = props => {\n  const {\n    handleSubmit,\n    user,\n    initialize,\n    getUserDetails\n  } = props;\n  useEffect(() => {\n    getUserDetails(initialize);\n  }, []);\n\n  const handleFormSubmit = data => {\n    const {\n      updateUserRequest\n    } = props;\n    updateUserRequest({\n      'email': data.email,\n      'first_name': data.firstName,\n      'last_name': data.lastName\n    });\n  };\n\n  const handleArrowBack = () => {\n    props.history.push('/');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sales\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, user && (user.isUserDataLoading || user.isFormSubmitLoading) && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 81\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    isHome: true,\n    history: props.history,\n    avatar: props.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: IconHome,\n    alt: \"home\",\n    className: \"icon-home\",\n    onClick: () => props.history.replace('/'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(formData => {\n      handleFormSubmit(formData);\n    }),\n    className: \"wrapper reset-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"profile-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-absolute top-left back-cursor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: IconArrowLeft,\n    onClick: handleArrowBack,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"profile\",\n    src: IconProfileActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }), \"Profile\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"firstName\",\n    label: \"First Name\",\n    type: \"text\",\n    component: renderField,\n    maxLength: \"150\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    type: \"text\",\n    component: renderField,\n    maxLength: \"150\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"email\",\n    label: \"Email\",\n    type: \"text\",\n    component: renderField,\n    maxLength: \"150\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"phone\",\n    label: \"Mobile Number\",\n    type: \"text\",\n    disabled: true,\n    component: renderField,\n    maxLength: \"150\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"button change-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"UPDATE\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"change-password\",\n    onClick: () => props.history.replace('change-password'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"CHANGE PASSWORD\"))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default reduxForm({\n  form: 'userForm',\n  validate\n})(ProfileForm);","map":{"version":3,"sources":["/home/freedom/Music/tcp-frontend/src/screens/User/Profile/profileForm.js"],"names":["React","useEffect","reduxForm","Field","Button","renderField","userForm","validate","Header","Footer","Loader","IconHome","IconProfileActive","IconArrowLeft","ProfileForm","props","handleSubmit","user","initialize","getUserDetails","handleFormSubmit","data","updateUserRequest","email","firstName","lastName","handleArrowBack","history","push","isUserDataLoading","isFormSubmitLoading","avatar","replace","formData","form"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { Button } from 'react-bootstrap';\nimport { renderField } from 'utils/formUtils';\nimport { userForm as validate } from 'utils/validate';\nimport Header from 'components/Sales/Header';\nimport Footer from 'components/Sales/Footer';\nimport Loader from 'shared/Loader';\n\nimport { IconHome, IconProfileActive, IconArrowLeft } from 'assets/images';\n\nconst ProfileForm = (props) => {\n    const { handleSubmit, user, initialize, getUserDetails } = props;\n    useEffect(() => {      \n        getUserDetails(initialize);\n    }, []);\n    \n    const handleFormSubmit = (data) => {\n        const { updateUserRequest } = props;\n        updateUserRequest({ \n            'email': data.email,\n            'first_name': data.firstName,\n            'last_name': data.lastName\n        })\n    }\n    const handleArrowBack = () => {\n        props.history.push('/');\n    }\n    return (\n        <div className=\"sales\">\n            {\n                user && (user.isUserDataLoading || user.isFormSubmitLoading) && <Loader />\n            }\n            <Header isHome={true} history={props.history} avatar={props.avatar}>\n                <img src={IconHome} alt=\"home\" className=\"icon-home\" onClick={() => props.history.replace('/') } />\n            </Header>\n            <form onSubmit={ handleSubmit((formData) => {\n                    handleFormSubmit(formData)\n                    }) } className=\"wrapper reset-page\">  \n                <div id=\"profile-page\">\n                    <div className=\"header2\">\n                        <div className=\"position-absolute top-left back-cursor\">\n                            <img src={IconArrowLeft} onClick={handleArrowBack} alt=\"\" />\n                        </div>     \n                        <img alt=\"profile\" src={IconProfileActive} />\n                        Profile\n                    </div>\n                    <div className=\"container\">\n                    <Field\n                        name=\"firstName\"\n                        label=\"First Name\"\n                        type=\"text\"\n                        component={ renderField }\n                        maxLength=\"150\"\n                    />\n                    <Field\n                        name=\"lastName\"\n                        label=\"Last Name\"\n                        type=\"text\"\n                        component={ renderField }\n                        maxLength=\"150\"\n                    />\n                    <Field\n                        name=\"email\"\n                        label=\"Email\"\n                        type=\"text\"\n                        component={ renderField }\n                        maxLength=\"150\"\n                    />\n                    <Field\n                        name=\"phone\"\n                        label=\"Mobile Number\"\n                        type=\"text\"\n                        disabled\n                        component={ renderField }\n                        maxLength=\"150\"\n                    />\n                    <Button type=\"submit\" className=\"button change-password\">UPDATE</Button>\n                    <Button className=\"change-password\" onClick={ () => props.history.replace('change-password') }>CHANGE PASSWORD</Button>\n                    \n                        {/* <Form.Group className=\"avatar-group\">                            \n                            <img alt=\"avatar\" src={IconProfileEmptyUser} />\n                        </Form.Group> */}\n                        {/* <Form.Group>\n                            <Form.Label>Full Name</Form.Label>\n                            <Form.Control\n                                required\n                                value={fullname}\n                                onChange={e => this.setState({fullname: e.target.value}) }\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Mobile Number</Form.Label>\n                            <Form.Control\n                                required\n                                value={mobile}\n                                onChange={e => this.setState({mobile: e.target.value}) }\n                            />\n                        </Form.Group> */}\n                        {/* <Form.Group>\n                            <Button className=\"change-password\" onClick={ () => props.history.replace('change-password') }>CHANGE PASSWORD</Button>\n                        </Form.Group> */}\n                    </div>\n                </div>\n                <Footer />\n            </form>\n        </div>\n    )\n}\n\nexport default reduxForm({\n    form: 'userForm',\n    validate\n})(ProfileForm);"]},"metadata":{},"sourceType":"module"}