{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp-frontend/src/screens/Auth/Login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Row, Col } from 'react-bootstrap';\nimport { login } from '../../redux/actions/auth';\nimport AuthContainer from '../../components/AuthContainer';\nimport { AuthCheckbox } from '../../components/Checkbox';\n\nclass LoginScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      invalidEmail: false,\n      invalidPassword: false,\n      error: '',\n      remember: false,\n      passwordEye: true\n    };\n\n    this.onRemeber = () => {\n      this.setState({\n        remember: !this.state.remember\n      });\n    };\n\n    this.onEye = () => {\n      this.setState({\n        passwordEye: !this.state.passwordEye\n      });\n    };\n\n    this.onLogin = async () => {\n      this.setState({\n        error: '',\n        invalidEmail: false,\n        invalidPassword: false\n      });\n      const {\n        email,\n        password\n      } = this.state;\n\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email) === false) {\n        this.setState({\n          invalidEmail: true\n        });\n        return;\n      }\n\n      if (password === '') {\n        this.setState({\n          invalidPassword: true\n        });\n        return;\n      }\n\n      const result = await this.props.login({\n        email: email,\n        password: password\n      });\n\n      if (result.ok) {\n        this.props.history.push({\n          pathname: '/2fa',\n          state: result.data\n        });\n      } else {\n        this.setState({\n          error: result.error\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AuthContainer, {\n      title: \"LOGIN\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper login-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title title-email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"input input-email\",\n      value: this.state.email,\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      isInvalid: this.state.invalidEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title title-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"input input-password\",\n      type: this.state.passwordEye ? \"password\" : \"text\",\n      value: this.state.password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      isInvalid: this.state.invalidPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.passwordEye ? require('../../assets/images/eye_show.svg') : require('../../assets/images/eye_hide.svg'),\n      alt: \"logo\",\n      onClick: this.onEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    })), this.state.error && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, this.state.error)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onLogin,\n      className: \"button-action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, \"LOGIN\")), /*#__PURE__*/React.createElement(Row, {\n      className: \"actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      className: \"remember-me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AuthCheckbox, {\n      label: \"Remember me\",\n      checked: this.state.remember,\n      onClick: () => this.setState({\n        remember: !this.state.remember\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      className: \"forgot-password\",\n      onClick: () => this.props.history.replace('forgot'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, \"Forgot password?\"), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      className: \"register\",\n      onClick: () => this.props.history.replace('register'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, \"Register\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {\n  login\n})(LoginScreen);","map":{"version":3,"sources":["/home/freedom/Music/tcp-frontend/src/screens/Auth/Login.js"],"names":["React","Component","connect","Button","Form","Row","Col","login","AuthContainer","AuthCheckbox","LoginScreen","state","email","password","invalidEmail","invalidPassword","error","remember","passwordEye","onRemeber","setState","onEye","onLogin","test","result","props","ok","history","push","pathname","data","render","e","target","value","require","replace","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Row, Col } from 'react-bootstrap';\n\nimport { login } from '../../redux/actions/auth';\n\nimport AuthContainer from '../../components/AuthContainer';\nimport { AuthCheckbox } from '../../components/Checkbox';\n\nclass LoginScreen extends Component {\n    state = {\n        email: '',\n        password: '',\n        invalidEmail: false,\n        invalidPassword: false,\n        error: '',\n\n        remember: false,\n        passwordEye: true\n    };\n\n    onRemeber = () => {\n        this.setState({ remember: !this.state.remember });\n    }\n\n    onEye = () => {\n        this.setState({ passwordEye: !this.state.passwordEye });\n    }\n\n    onLogin = async () => {\n        this.setState({ error: '', invalidEmail: false, invalidPassword: false });\n        const { email, password } = this.state;\n        if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email) === false) {\n            this.setState({ invalidEmail: true });\n            return;\n        }\n\n        if (password === '') {\n            this.setState({ invalidPassword: true });\n            return;\n        }\n\n        const result = await this.props.login({\n            email: email,\n            password: password\n        });\n\n        if (result.ok) {\n            this.props.history.push({\n                pathname: '/2fa',\n                state: result.data\n            })\n        } else {\n            this.setState({ error: result.error });\n        }\n    }\n\n    render() {\n        return (\n            <AuthContainer title=\"LOGIN\">\n                <div className=\"wrapper login-page\">\n                    <div className=\"inputs\">\n                        <div className=\"title title-email\">Email</div>\n                        <Form.Control\n                            className=\"input input-email\"\n                            value={this.state.email}\n                            onChange={e => this.setState({ email: e.target.value }) }\n                            isInvalid={this.state.invalidEmail}\n                        />\n                        <div className=\"title title-password\">\n                            Password\n                        </div>\n                        <div className=\"password\">\n                            <Form.Control\n                                className=\"input input-password\"\n                                type={this.state.passwordEye ? \"password\" : \"text\"}\n                                value={this.state.password}\n                                onChange={e => this.setState({ password: e.target.value }) }\n                                isInvalid={this.state.invalidPassword}\n                            />\n                            <img\n                                src={this.state.passwordEye ? require('../../assets/images/eye_show.svg') : require('../../assets/images/eye_hide.svg')}\n                                alt=\"logo\"\n                                onClick={this.onEye}\n                            />\n                        </div>\n                        { this.state.error && (\n                            <div className=\"error\">\n                                {this.state.error}\n                            </div>\n                        )}\n                    </div>\n                    <div>\n                        <Button onClick={this.onLogin} className=\"button-action\">LOGIN</Button>\n                    </div>\n\n                    <Row className=\"actions\">\n                        <Col xs={6} className=\"remember-me\">\n                            <AuthCheckbox\n                                label=\"Remember me\"\n                                checked={this.state.remember}\n                                onClick={() => this.setState({ remember: !this.state.remember })}\n                            />\n                        </Col>\n                        {/* <Col className=\"forgot-password\">\n                            Forgot pasword?\n                        </Col> */}\n                        <Col xs={6} className=\"forgot-password\" onClick={() => this.props.history.replace('forgot')}>\n                            Forgot password?\n                        </Col>\n                        <Col xs={12} className=\"register\" onClick={() => this.props.history.replace('register')}>\n                            Register\n                        </Col>\n                    </Row>\n                </div>\n            </AuthContainer>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        login\n    }\n)(LoginScreen);"]},"metadata":{},"sourceType":"module"}