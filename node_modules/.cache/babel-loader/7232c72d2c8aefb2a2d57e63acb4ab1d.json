{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp-frontend/src/screens/Sales/Prequalify.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Row, Col, Modal } from 'react-bootstrap';\nimport InputMask from 'react-input-mask';\nimport Header from '../../components/Sales/Header';\nimport Footer from '../../components/Sales/Footer';\nimport Checkbox from '../../components/Checkbox';\nimport { states_info } from '../../assets/options';\nimport { IconHome } from '../../assets/images';\nimport { changeCustomer, clearCustomer, sendPrequalify } from '../../redux/actions/customer';\n\nclass PrequalifyScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      validated: false,\n      sentModal: false\n    };\n\n    this.changeState = data => {\n      this.props.changeCustomer(data);\n    };\n\n    this.onBack = () => {\n      this.props.clearCustomer();\n      this.props.history.replace('/sales');\n    };\n\n    this.onSend = () => {\n      const {\n        name,\n        street,\n        city,\n        state,\n        phone,\n        zip,\n        co_name,\n        co_street,\n        co_city,\n        co_state,\n        co_phone,\n        co_zip,\n        co_enabled\n      } = this.props.customer.contact;\n      let body = {\n        name,\n        street,\n        city,\n        state,\n        zip,\n        phone,\n        co_name,\n        co_street,\n        co_city,\n        co_state,\n        co_phone,\n        co_zip,\n        co_enabled\n      };\n      this.props.sendPrequalify(body);\n      this.setState({\n        sentModal: true\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        validated: true\n      });\n      const form = event.currentTarget;\n\n      if (form.checkValidity() === false) {\n        event.stopPropagation();\n      } else {\n        this.onSend();\n      }\n    };\n\n    this.handleModalClose = () => {\n      this.setState({\n        sentModal: false\n      });\n    };\n  }\n\n  render() {\n    const validated = this.state.validated;\n    const {\n      name,\n      street,\n      city,\n      state,\n      phone,\n      zip,\n      co_name,\n      same_address,\n      co_street,\n      co_city,\n      co_state,\n      co_phone,\n      co_zip,\n      co_enabled\n    } = this.props.customer.contact;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sales\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.sentModal,\n      onHide: this.handleModalClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, \"Forms have been sent successfully.\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleModalClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \"Close\"))), /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: IconHome,\n      alt: \"home\",\n      className: \"icon-home\",\n      onClick: this.onBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 9,\n        backgroundColor: '#b2d8f7'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }, \"Prequalify\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"form-label-required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }, \"required\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: name,\n      onChange: e => this.changeState({\n        name: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"group-address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }, \"Address\")), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }\n    }, \"Street\"), /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"form-label-required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 33\n      }\n    }, \"required\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: street,\n      onChange: e => this.changeState({\n        street: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 33\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"form-label-required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, \"required\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: city,\n      onChange: e => this.changeState({\n        city: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"form-label-required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }\n    }, \"required\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      required: true,\n      value: state,\n      onChange: e => this.changeState({\n        state: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }, state === \"\" && /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 41\n      }\n    }, \"Choose...\"), states_info.map(info => /*#__PURE__*/React.createElement(\"option\", {\n      key: info.abbreviation,\n      value: info.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 41\n      }\n    }, info.name)))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 33\n      }\n    }, \"ZIP Number\"), /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"form-label-required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    }, \"required\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      required: true,\n      value: zip,\n      onChange: e => this.changeState({\n        zip: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 33\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"form-label-required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    }, \"required\"), /*#__PURE__*/React.createElement(InputMask, {\n      required: true,\n      className: \"form-control\",\n      pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\",\n      mask: \"999-999-9999\",\n      maskChar: \"\",\n      value: phone,\n      onChange: e => this.changeState({\n        phone: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: co_enabled,\n      onChange: () => {\n        if (co_enabled) {\n          this.changeState({\n            co_enabled: !co_enabled,\n            same_address: false,\n            co_street: '',\n            co_city: '',\n            co_state: '',\n            co_zip: ''\n          });\n        } else {\n          this.changeState({\n            co_enabled: !co_enabled\n          });\n        }\n      },\n      label: \"Add co-applicant\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 33\n      }\n    })), co_enabled && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 30,\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 41\n      }\n    }, \"Co-applicant Name\"), /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"form-label-required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 41\n      }\n    }, \"required\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: co_name,\n      onChange: e => this.changeState({\n        co_name: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"group-address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 41\n      }\n    }, \"Address\")), /*#__PURE__*/React.createElement(Form.Group, {\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: same_address,\n      onChange: () => {\n        if (!same_address) {\n          this.changeState({\n            same_address: !same_address,\n            co_street: street,\n            co_city: city,\n            co_state: state,\n            co_zip: zip\n          });\n        } else {\n          this.changeState({\n            same_address: !same_address\n          });\n        }\n      },\n      label: \"same address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 41\n      }\n    }, \"Street\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: co_street,\n      onChange: e => this.changeState({\n        co_street: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 41\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: co_city,\n      onChange: e => this.changeState({\n        co_city: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 41\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: co_state,\n      onChange: e => this.changeState({\n        co_state: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 41\n      }\n    }, \"ZIP Number\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: co_zip,\n      onChange: e => this.changeState({\n        co_zip: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 41\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: co_phone,\n      onChange: e => this.changeState({\n        co_phone: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 41\n      }\n    }))))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 25\n      }\n    }, \"SEND\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  customer: state.customer\n});\n\nexport default connect(mapStateToProps, {\n  changeCustomer,\n  clearCustomer,\n  sendPrequalify\n})(PrequalifyScreen);","map":{"version":3,"sources":["/home/freedom/Music/tcp-frontend/src/screens/Sales/Prequalify.js"],"names":["React","Component","connect","Button","Form","Row","Col","Modal","InputMask","Header","Footer","Checkbox","states_info","IconHome","changeCustomer","clearCustomer","sendPrequalify","PrequalifyScreen","state","validated","sentModal","changeState","data","props","onBack","history","replace","onSend","name","street","city","phone","zip","co_name","co_street","co_city","co_state","co_phone","co_zip","co_enabled","customer","contact","body","setState","handleSubmit","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","handleModalClose","render","same_address","height","backgroundColor","e","target","value","map","info","abbreviation","marginTop","marginBottom","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Row, Col, Modal } from 'react-bootstrap';\n\nimport InputMask from 'react-input-mask';\n\nimport Header from '../../components/Sales/Header';\nimport Footer from '../../components/Sales/Footer';\n\nimport Checkbox from '../../components/Checkbox';\n\nimport { states_info } from '../../assets/options';\nimport { IconHome } from '../../assets/images';\n\nimport { changeCustomer, clearCustomer, sendPrequalify } from '../../redux/actions/customer';\n\nclass PrequalifyScreen extends Component {\n\n    state = {\n        validated: false,\n        sentModal: false\n    }\n\n    changeState = (data) => {\n        this.props.changeCustomer(data);\n    }\n\n    onBack = () => {\n        this.props.clearCustomer();\n        this.props.history.replace('/sales');\n    }\n\n    onSend = () => {\n        const {\n            name, street, city, state, phone, zip,            \n            co_name, co_street, co_city, co_state, co_phone, co_zip, co_enabled\n        } = this.props.customer.contact;\n        let body = {\n            name,\n            street,\n            city,\n            state,\n            zip,\n            phone,\n            co_name,\n            co_street,\n            co_city,\n            co_state,\n            co_phone,\n            co_zip,\n            co_enabled\n        }\n        this.props.sendPrequalify(body);\n        this.setState({ sentModal: true });\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        this.setState({ validated: true });\n\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.stopPropagation();\n        } else {\n            this.onSend();\n        }\n    }\n\n    handleModalClose = () => {\n        this.setState({ sentModal: false });\n    }\n\n    render() {\n        const validated = this.state.validated;\n        const {\n            name, street, city, state, phone, zip,\n            co_name, same_address, co_street, co_city, co_state, co_phone, co_zip,\n            co_enabled\n        } = this.props.customer.contact;\n        return (\n            <div className=\"sales\">\n                <Modal show={this.state.sentModal} onHide={this.handleModalClose}>\n                    <Modal.Header closeButton></Modal.Header>\n                    <Modal.Body>Forms have been sent successfully.</Modal.Body>\n                    <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={this.handleModalClose}>\n                        Close\n                    </Button>\n                    </Modal.Footer>\n                </Modal>\n                <Form noValidate validated={validated} onSubmit={this.handleSubmit}>\n                    <Header history={this.props.history}>\n                        <img src={IconHome} alt=\"home\" className=\"icon-home\" onClick={this.onBack} />\n                    </Header>\n                    <div className=\"main\">\n                        <div className=\"header2\">\n                            <div style={{ height: 9, backgroundColor: '#b2d8f7' }}></div>\n                            <Button className=\"active\">\n                                <span>Prequalify</span>\n                            </Button>\n                        </div>\n                        <div className=\"container\" >\n\n                            <Form.Group>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Label className=\"form-label-required\">required</Form.Label>\n                                <Form.Control\n                                    required\n                                    value={name}\n                                    onChange={e => this.changeState({name: e.target.value}) }\n                                />\n                            </Form.Group>\n                            <Form.Group className=\"group-address\">\n                                <Form.Label>Address</Form.Label>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Street</Form.Label>\n                                <Form.Label className=\"form-label-required\">required</Form.Label>\n                                <Form.Control\n                                    required\n                                    value={street}\n                                    onChange={e => this.changeState({street: e.target.value}) }\n                                />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>City</Form.Label>\n                                <Form.Label className=\"form-label-required\">required</Form.Label>\n                                <Form.Control\n                                    required\n                                    value={city}\n                                    onChange={e => this.changeState({city: e.target.value}) }\n                                />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>State</Form.Label>\n                                <Form.Label className=\"form-label-required\">required</Form.Label>\n                                <Form.Control\n                                    as=\"select\"\n                                    required\n                                    value={state}\n                                    onChange={e => this.changeState({state: e.target.value}) }\n                                >\n                                    { state === \"\" && (\n                                        <option value=\"\">Choose...</option>\n                                    )}\n                                    { states_info.map(info => (\n                                        <option key={info.abbreviation} value={info.name}>{info.name}</option>\n                                    )) }\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>ZIP Number</Form.Label>\n                                <Form.Label className=\"form-label-required\">required</Form.Label>\n                                <Form.Control\n                                    type=\"number\"\n                                    required\n                                    value={zip}\n                                    onChange={e => this.changeState({zip: e.target.value}) }\n                                />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Phone</Form.Label>\n                                <Form.Label className=\"form-label-required\">required</Form.Label>\n                                <InputMask\n                                    required\n                                    className=\"form-control\"\n                                    pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n                                    mask=\"999-999-9999\"\n                                    maskChar=\"\"\n                                    value={phone}\n                                    onChange={e => this.changeState({ phone: e.target.value })}\n                                />\n                            </Form.Group>\n                            <Form.Group>\n                                <Checkbox\n                                    checked={co_enabled}\n                                    onChange={() => {\n                                        if (co_enabled) {\n                                            this.changeState({\n                                                co_enabled: !co_enabled,\n                                                same_address: false,\n                                                co_street: '',\n                                                co_city: '',\n                                                co_state: '',\n                                                co_zip: ''\n                                            });\n                                        } else {\n                                            this.changeState({co_enabled: !co_enabled});\n                                        }\n                                    }}\n                                    label=\"Add co-applicant\"\n                                />\n                            </Form.Group>\n                            { co_enabled && (\n                                <div style={{ marginTop: 30, marginBottom: 20 }}>\n                                    <Form.Group>\n                                        <Form.Label>Co-applicant Name</Form.Label>\n                                        <Form.Label className=\"form-label-required\">required</Form.Label>\n                                        <Form.Control\n                                            required\n                                            value={co_name}\n                                            onChange={e => this.changeState({co_name: e.target.value}) }\n                                        />\n                                    </Form.Group>\n                                    <Form.Group className=\"group-address\">\n                                        <Form.Label>Address</Form.Label>\n                                    </Form.Group>\n\n                                    <Form.Group style={{ marginTop: 10 }}>\n                                        <Checkbox\n                                            checked={same_address}\n                                            onChange={() => {\n                                                if (!same_address) {\n                                                    this.changeState({\n                                                        same_address: !same_address,\n                                                        co_street: street,\n                                                        co_city: city,\n                                                        co_state: state,\n                                                        co_zip: zip\n                                                    });\n                                                } else {\n                                                    this.changeState({same_address: !same_address});\n                                                }\n                                            }}\n                                            label=\"same address\"\n                                        />\n                                    </Form.Group> \n                                    \n                                    <Form.Group>\n                                        <Form.Label>Street</Form.Label>\n                                        <Form.Control\n                                            required\n                                            value={co_street}\n                                            onChange={e => this.changeState({co_street: e.target.value}) }\n                                        />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>City</Form.Label>\n                                        <Form.Control\n                                            required\n                                            value={co_city}\n                                            onChange={e => this.changeState({co_city: e.target.value}) }\n                                        />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>State</Form.Label>\n                                        <Form.Control\n                                            required\n                                            value={co_state}\n                                            onChange={e => this.changeState({co_state: e.target.value}) }\n                                        />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>ZIP Number</Form.Label>\n                                        <Form.Control\n                                            required\n                                            value={co_zip}\n                                            onChange={e => this.changeState({co_zip: e.target.value}) }\n                                        />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Phone</Form.Label>\n                                        <Form.Control\n                                            required\n                                            value={co_phone}\n                                            onChange={e => this.changeState({co_phone: e.target.value}) }\n                                        />\n                                    </Form.Group>                                \n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    <Footer>\n                        <Button type=\"submit\" className=\"button\">SEND</Button>\n                    </Footer>\n                </Form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    customer: state.customer\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        changeCustomer,\n        clearCustomer,\n        sendPrequalify\n    }\n)(PrequalifyScreen);\n"]},"metadata":{},"sourceType":"module"}