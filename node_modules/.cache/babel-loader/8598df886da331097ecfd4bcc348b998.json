{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp2.0-frontend/src/screens/Auth/Login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Row, Col } from 'react-bootstrap';\nimport { getDonotCheckDetail } from 'utils/helper';\nimport { login } from '../../redux/actions/auth';\nimport AuthContainer from '../../components/AuthContainer';\nimport { AuthCheckbox } from '../../components/Checkbox';\nimport Loader from 'shared/Loader';\n\nclass LoginScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      invalidEmail: false,\n      invalidPassword: false,\n      error: '',\n      remember: false,\n      passwordEye: true,\n      isLoading: false\n    };\n\n    this.onRemeber = () => {\n      this.setState({\n        remember: !this.state.remember\n      });\n    };\n\n    this.onEye = () => {\n      this.setState({\n        passwordEye: !this.state.passwordEye\n      });\n    };\n\n    this.onLogin = async () => {\n      this.setState({\n        error: '',\n        invalidEmail: false,\n        invalidPassword: false\n      });\n      const {\n        email,\n        password\n      } = this.state;\n\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email) === false) {\n        this.setState({\n          invalidEmail: true\n        });\n        return;\n      }\n\n      if (password === '') {\n        this.setState({\n          invalidPassword: true\n        });\n        return;\n      }\n\n      this.setState({\n        isLoading: true\n      });\n      const byPassTwoFa = getDonotCheckDetail();\n      const result = await this.props.login({\n        email: email,\n        password: password,\n        check: byPassTwoFa\n      });\n\n      if (result.ok) {\n        this.setState({\n          isLoading: false\n        });\n\n        if (byPassTwoFa === \"true\") {\n          localStorage.setItem('token', result.token);\n          localStorage.setItem('role', result.role);\n          this.props.history.replace('/');\n        } else {\n          this.props.history.push({\n            pathname: '/2fa',\n            state: result.data\n          });\n        }\n      } else {\n        this.setState({\n          error: result.error,\n          isLoading: false\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(AuthContainer, {\n      title: \"LOGIN\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, isLoading && /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper login-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: \"javascript:void(0)\",\n      method: \"post\",\n      onSubmit: this.onLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title title-email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"input input-email\",\n      value: this.state.email,\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      isInvalid: this.state.invalidEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title title-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"input input-password\",\n      type: this.state.passwordEye ? \"password\" : \"text\",\n      value: this.state.password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      isInvalid: this.state.invalidPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.passwordEye ? require('../../assets/images/eye_show.svg') : require('../../assets/images/eye_hide.svg'),\n      alt: \"logo\",\n      onClick: this.onEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    })), this.state.error && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }, this.state.error)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      onClick: this.onLogin,\n      className: \"button-action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, \"LOGIN\"))), /*#__PURE__*/React.createElement(Row, {\n      className: \"actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      className: \"remember-me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AuthCheckbox, {\n      label: \"Remember me\",\n      checked: this.state.remember,\n      onClick: () => this.setState({\n        remember: !this.state.remember\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      className: \"forgot-password\",\n      onClick: () => this.props.history.replace('forgot'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, \"Forgot password?\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {\n  login\n})(LoginScreen);","map":{"version":3,"sources":["/home/freedom/Music/tcp2.0-frontend/src/screens/Auth/Login.js"],"names":["React","Component","connect","Button","Form","Row","Col","getDonotCheckDetail","login","AuthContainer","AuthCheckbox","Loader","LoginScreen","state","email","password","invalidEmail","invalidPassword","error","remember","passwordEye","isLoading","onRemeber","setState","onEye","onLogin","test","byPassTwoFa","result","props","check","ok","localStorage","setItem","token","role","history","replace","push","pathname","data","render","e","target","value","require","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Row, Col } from 'react-bootstrap';\nimport { getDonotCheckDetail } from 'utils/helper';\nimport { login } from '../../redux/actions/auth';\n\nimport AuthContainer from '../../components/AuthContainer';\nimport { AuthCheckbox } from '../../components/Checkbox';\nimport Loader from 'shared/Loader';\n\nclass LoginScreen extends Component {\n    state = {\n        email: '',\n        password: '',\n        invalidEmail: false,\n        invalidPassword: false,\n        error: '',\n\n        remember: false,\n        passwordEye: true,\n        isLoading: false\n    };\n\n    onRemeber = () => {\n        this.setState({ remember: !this.state.remember });\n    }\n\n    onEye = () => {\n        this.setState({ passwordEye: !this.state.passwordEye });\n    }\n\n    onLogin = async () => {\n        this.setState({ error: '', invalidEmail: false, invalidPassword: false });\n        const { email, password } = this.state;\n        if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email) === false) {\n            this.setState({ invalidEmail: true });\n            return;\n        }\n\n        if (password === '') {\n            this.setState({ invalidPassword: true });\n            return;\n        }\n        this.setState({ isLoading: true });\n        const byPassTwoFa = getDonotCheckDetail();\n        const result = await this.props.login({\n            email: email,\n            password: password,\n            check: byPassTwoFa\n        });\n        if (result.ok) {\n            this.setState({ isLoading: false });\n            if(byPassTwoFa === \"true\") {\n                localStorage.setItem('token', result.token);\n                localStorage.setItem('role', result.role);\n                this.props.history.replace('/');\n            } else {\n                this.props.history.push({\n                    pathname: '/2fa',\n                    state: result.data\n                })\n            }           \n        } else {            \n            this.setState({ \n                error: result.error,\n                isLoading: false\n            });\n        }\n    }\n\n    render() {\n        const { isLoading } = this.state;\n        return (\n            <AuthContainer title=\"LOGIN\">\n                {\n                    isLoading && <Loader />\n                }\n                <div className=\"wrapper login-page\">\n                    <form action=\"javascript:void(0)\" method=\"post\" onSubmit={this.onLogin} >\n                        <div className=\"inputs\">\n                            <div className=\"title title-email\">Email</div>\n                            <Form.Control\n                                className=\"input input-email\"\n                                value={this.state.email}\n                                onChange={e => this.setState({ email: e.target.value }) }\n                                isInvalid={this.state.invalidEmail}\n                            />\n                            <div className=\"title title-password\">\n                                Password\n                            </div>\n                            <div className=\"password\">\n                                <Form.Control\n                                    className=\"input input-password\"\n                                    type={this.state.passwordEye ? \"password\" : \"text\"}\n                                    value={this.state.password}\n                                    onChange={e => this.setState({ password: e.target.value }) }\n                                    isInvalid={this.state.invalidPassword}\n                                />\n                                <img\n                                    src={this.state.passwordEye ? require('../../assets/images/eye_show.svg') : require('../../assets/images/eye_hide.svg')}\n                                    alt=\"logo\"\n                                    onClick={this.onEye}\n                                />\n                            </div>\n                            { this.state.error && (\n                                <div className=\"error\">\n                                    {this.state.error}\n                                </div>\n                            )}\n                        </div>\n                        <div>\n                            <Button type=\"submit\" onClick={this.onLogin} className=\"button-action\">LOGIN</Button>\n                        </div>\n                    </form>\n\n                    <Row className=\"actions\">\n                        <Col xs={6} className=\"remember-me\">\n                            <AuthCheckbox\n                                label=\"Remember me\"\n                                checked={this.state.remember}\n                                onClick={() => this.setState({ remember: !this.state.remember })}\n                            />\n                        </Col>\n                        {/* <Col className=\"forgot-password\">\n                            Forgot pasword?\n                        </Col> */}\n                        <Col xs={6} className=\"forgot-password\" onClick={() => this.props.history.replace('forgot')}>\n                            Forgot password?\n                        </Col>\n                        {/* <Col xs={12} className=\"register\" onClick={() => this.props.history.replace('register')}>\n                            Register\n                        </Col> */}\n                    </Row>\n                </div>\n            </AuthContainer>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        login\n    }\n)(LoginScreen);"]},"metadata":{},"sourceType":"module"}