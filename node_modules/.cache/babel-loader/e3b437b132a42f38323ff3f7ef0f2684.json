{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp2.0-frontend/src/screens/Dealer/PreFilled/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PreFilledForm from './preFilledForm';\nimport { setReorderCustomerById, changeCustomer, sendAll, changeCustomerContact } from 'redux/actions/customer';\n\nconst PreFilled = props => {\n  return /*#__PURE__*/React.createElement(PreFilledForm, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  customer: state.customer // customers: state.customers,\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setReorderCustomerById: data => dispatch(setReorderCustomerById(data)),\n  changeCustomer: data => dispatch(changeCustomer(data)),\n  sendAll: (data, funName, type, history) => dispatch(sendAll(data, funName, type, history)),\n  changeCustomerContact: (key, value, role) => dispatch(changeCustomerContact(key, value, role))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PreFilled);","map":{"version":3,"sources":["/home/freedom/Music/tcp2.0-frontend/src/screens/Dealer/PreFilled/index.js"],"names":["React","connect","PreFilledForm","setReorderCustomerById","changeCustomer","sendAll","changeCustomerContact","PreFilled","props","mapStateToProps","state","customer","mapDispatchToProps","dispatch","data","funName","type","history","key","value","role"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SACIC,sBADJ,EAEIC,cAFJ,EAGIC,OAHJ,EAIIC,qBAJJ,QAKO,wBALP;;AAMA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,sBACI,oBAAC,aAAD,oBAAoBA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAGH,CAJD;;AAMA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,QAAQ,EAAED,KAAK,CAACC,QADc,CAE9B;;AAF8B,CAAL,CAA7B;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCV,EAAAA,sBAAsB,EAAEW,IAAI,IAAID,QAAQ,CAACV,sBAAsB,CAACW,IAAD,CAAvB,CADJ;AAEpCV,EAAAA,cAAc,EAAEU,IAAI,IAAID,QAAQ,CAACT,cAAc,CAACU,IAAD,CAAf,CAFI;AAGpCT,EAAAA,OAAO,EAAE,CAACS,IAAD,EAAOC,OAAP,EAAgBC,IAAhB,EAAsBC,OAAtB,KAAkCJ,QAAQ,CAACR,OAAO,CAACS,IAAD,EAAOC,OAAP,EAAgBC,IAAhB,EAAsBC,OAAtB,CAAR,CAHf;AAIpCX,EAAAA,qBAAqB,EAAG,CAACY,GAAD,EAAMC,KAAN,EAAaC,IAAb,KAAsBP,QAAQ,CAACP,qBAAqB,CAAEY,GAAF,EAAOC,KAAP,EAAcC,IAAd,CAAtB;AAJlB,CAAL,CAAnC;;AAQA,eAAenB,OAAO,CAClBQ,eADkB,EAElBG,kBAFkB,CAAP,CAGbL,SAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PreFilledForm from './preFilledForm';\nimport {\n    setReorderCustomerById,\n    changeCustomer,\n    sendAll,\n    changeCustomerContact,\n} from 'redux/actions/customer';\nconst PreFilled = (props) => {\n    return (\n        <PreFilledForm { ...props }/>\n    )\n}\n\nconst mapStateToProps = state => ({\n    customer: state.customer,\n    // customers: state.customers,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setReorderCustomerById: data => dispatch(setReorderCustomerById(data)),\n    changeCustomer: data => dispatch(changeCustomer(data)),\n    sendAll: (data, funName, type, history) => dispatch(sendAll(data, funName, type, history)),\n    changeCustomerContact : (key, value, role) => dispatch(changeCustomerContact (key, value, role))\n\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PreFilled);"]},"metadata":{},"sourceType":"module"}