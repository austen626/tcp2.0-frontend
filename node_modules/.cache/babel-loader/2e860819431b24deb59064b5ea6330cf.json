{"ast":null,"code":"import axios from 'axios';\nimport { pushNotification } from 'utils/notification';\nexport const baseUrl = 'https://dev-apiv2.traviscapitalpartners.com/api/';\nconst api = axios.create({\n  baseURL: baseUrl\n});\napi.interceptors.request.use(async function (config) {\n  // const token = localStorage.getItem('token');\n  const token = 'c4ca66faf943f4b20ddcf3bb483350cf401761e6';\n\n  if (token) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n\n  return config;\n}, error => Promise.reject(error)); // api.interceptors.response.use((response) => {\n//     if (response.data && response.data.error) {\n//         return Promise.reject(response);\n//     }\n//     return response;\n// }, (error) => {\n//     if (!error.response) {\n//         return Promise.reject(error);\n//     }\n//     if (error.response.status === 440 || error.response.status === 401) {\n//         pushNotification('Your session has expired please login again.', 'error', 'TOP_RIGHT', 3000);\n//     }\n//     return Promise.reject(error);\n// });\n\nexport default api;","map":{"version":3,"sources":["/home/freedom/Music/tcp2.0-frontend/src/api.js"],"names":["axios","pushNotification","baseUrl","api","create","baseURL","interceptors","request","use","config","token","headers","error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAO,MAAMC,OAAO,GAAG,kDAAhB;AACP,MAAMC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAa;AACrBC,EAAAA,OAAO,EAAEH;AADY,CAAb,CAAZ;AAIAC,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CACI,gBAAeC,MAAf,EAAuB;AACnB;AACA,QAAMC,KAAK,GAAG,0CAAd;;AACA,MAAIA,KAAJ,EAAW;AACPD,IAAAA,MAAM,CAACE,OAAP,CAAe,eAAf,IAAmC,SAAQD,KAAM,EAAjD;AACH;;AACD,SAAOD,MAAP;AACH,CARL,EASIG,KAAK,IAAIC,OAAO,CAACC,MAAR,CAAeF,KAAf,CATb,E,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeT,GAAf","sourcesContent":["import axios from 'axios';\nimport { pushNotification } from 'utils/notification';\nexport const baseUrl = 'https://dev-apiv2.traviscapitalpartners.com/api/';\nconst api = axios.create({\n    baseURL: baseUrl\n});\n\napi.interceptors.request.use(\n    async function(config) {\n        // const token = localStorage.getItem('token');\n        const token = 'c4ca66faf943f4b20ddcf3bb483350cf401761e6';\n        if (token) {\n            config.headers['Authorization'] = `Token ${token}`;\n        }\n        return config;\n    },\n    error => Promise.reject(error),\n);\n\n// api.interceptors.response.use((response) => {\n//     if (response.data && response.data.error) {\n//         return Promise.reject(response);\n//     }\n//     return response;\n// }, (error) => {\n//     if (!error.response) {\n//         return Promise.reject(error);\n//     }\n//     if (error.response.status === 440 || error.response.status === 401) {\n//         pushNotification('Your session has expired please login again.', 'error', 'TOP_RIGHT', 3000);\n//     }\n//     return Promise.reject(error);\n// });\n\nexport default api;"]},"metadata":{},"sourceType":"module"}