{"ast":null,"code":"export const applicantFoodTaxState = {\n  'CT': '0',\n  'NH': '0',\n  'ME': '0'\n};\nexport const applicationTaxState = {\n  'CT': '6.35',\n  'NH': '0',\n  'ME': '5.50'\n};\nexport const taxCalculationFlag = (type, state) => {\n  let isTaxDisabled = true;\n  const isFoodStateFound = applicantFoodTaxState.hasOwnProperty(state);\n  const isFound = applicationTaxState.hasOwnProperty(state);\n\n  switch (type) {\n    case 'FOOD':\n      if (isFoodStateFound) isTaxDisabled = true;else isTaxDisabled = false;\n      break;\n\n    case 'FSP':\n    case 'APP':\n      if (isFound) isTaxDisabled = true;else isTaxDisabled = false;\n      break;\n\n    default:\n      isTaxDisabled = true;\n      break;\n  }\n\n  return isTaxDisabled;\n};\nexport const taxCalculationPrice = (type, state, price, elseTax) => {\n  let taxPrice = 0;\n  const isFoodStateFound = applicantFoodTaxState.hasOwnProperty(state);\n  const isFound = applicationTaxState.hasOwnProperty(state);\n\n  switch (type) {\n    case 'FOOD':\n      if (isFoodStateFound) taxPrice = parseFloat(price * applicantFoodTaxState[state] / 100).toFixed(2);else taxPrice = elseTax || 0;\n      break;\n\n    case 'FSP':\n    case 'APP':\n      if (isFound) taxPrice = parseFloat(price * applicationTaxState[state] / 100).toFixed(2);else taxPrice = elseTax || 0;\n      break;\n\n    default:\n      taxPrice = elseTax || 0;\n      break;\n  }\n\n  return taxPrice;\n};","map":{"version":3,"sources":["/home/freedom/Music/tcp-frontend/src/screens/Sales/setTaxCaluculation.js"],"names":["applicantFoodTaxState","applicationTaxState","taxCalculationFlag","type","state","isTaxDisabled","isFoodStateFound","hasOwnProperty","isFound","taxCalculationPrice","price","elseTax","taxPrice","parseFloat","toFixed"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAG;AACjC,QAAM,GAD2B;AAEjC,QAAM,GAF2B;AAGjC,QAAM;AAH2B,CAA9B;AAKP,OAAO,MAAMC,mBAAmB,GAAG;AAC/B,QAAM,MADyB;AAE/B,QAAM,GAFyB;AAG/B,QAAM;AAHyB,CAA5B;AAMP,OAAO,MAAMC,kBAAkB,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/C,MAAIC,aAAa,GAAG,IAApB;AACA,QAAMC,gBAAgB,GAAGN,qBAAqB,CAACO,cAAtB,CAAqCH,KAArC,CAAzB;AACA,QAAMI,OAAO,GAAGP,mBAAmB,CAACM,cAApB,CAAmCH,KAAnC,CAAhB;;AACA,UAAOD,IAAP;AACI,SAAK,MAAL;AACI,UAAGG,gBAAH,EACID,aAAa,GAAG,IAAhB,CADJ,KAGIA,aAAa,GAAG,KAAhB;AACJ;;AACJ,SAAK,KAAL;AACA,SAAK,KAAL;AACI,UAAGG,OAAH,EACIH,aAAa,GAAG,IAAhB,CADJ,KAGIA,aAAa,GAAG,KAAhB;AACJ;;AACJ;AACIA,MAAAA,aAAa,GAAG,IAAhB;AACA;AAhBR;;AAkBA,SAAOA,aAAP;AACH,CAvBM;AAyBP,OAAO,MAAMI,mBAAmB,GAAG,CAACN,IAAD,EAAOC,KAAP,EAAcM,KAAd,EAAqBC,OAArB,KAAiC;AAChE,MAAIC,QAAQ,GAAG,CAAf;AACA,QAAMN,gBAAgB,GAAGN,qBAAqB,CAACO,cAAtB,CAAqCH,KAArC,CAAzB;AACA,QAAMI,OAAO,GAAGP,mBAAmB,CAACM,cAApB,CAAmCH,KAAnC,CAAhB;;AACA,UAAOD,IAAP;AACI,SAAK,MAAL;AACI,UAAGG,gBAAH,EACIM,QAAQ,GAAIC,UAAU,CAACH,KAAK,GAAGV,qBAAqB,CAACI,KAAD,CAA7B,GAAsC,GAAvC,CAAV,CAAsDU,OAAtD,CAA8D,CAA9D,CAAZ,CADJ,KAGIF,QAAQ,GAAGD,OAAO,IAAI,CAAtB;AACJ;;AACJ,SAAK,KAAL;AACA,SAAK,KAAL;AACI,UAAGH,OAAH,EACII,QAAQ,GAAGC,UAAU,CAACH,KAAK,GAAGT,mBAAmB,CAACG,KAAD,CAA3B,GAAoC,GAArC,CAAV,CAAoDU,OAApD,CAA4D,CAA5D,CAAX,CADJ,KAGIF,QAAQ,GAAGD,OAAO,IAAI,CAAtB;AACJ;;AACJ;AACQC,MAAAA,QAAQ,GAAGD,OAAO,IAAI,CAAtB;AACJ;AAhBR;;AAkBA,SAAOC,QAAP;AACH,CAvBM","sourcesContent":["export const applicantFoodTaxState = {\n    'CT': '0',\n    'NH': '0',\n    'ME': '0'\n}\nexport const applicationTaxState = {\n    'CT': '6.35',\n    'NH': '0',\n    'ME': '5.50'\n}\n\nexport const taxCalculationFlag = (type, state) => {\n    let isTaxDisabled = true;\n    const isFoodStateFound = applicantFoodTaxState.hasOwnProperty(state);\n    const isFound = applicationTaxState.hasOwnProperty(state);\n    switch(type) {\n        case 'FOOD':\n            if(isFoodStateFound) \n                isTaxDisabled = true;\n            else \n                isTaxDisabled = false;\n            break;\n        case 'FSP':\n        case 'APP':         \n            if(isFound) \n                isTaxDisabled = true;\n            else \n                isTaxDisabled = false;\n            break;\n        default:\n            isTaxDisabled = true;\n            break;\n    }\n    return isTaxDisabled;    \n}\n\nexport const taxCalculationPrice = (type, state, price, elseTax) => {\n    let taxPrice = 0;\n    const isFoodStateFound = applicantFoodTaxState.hasOwnProperty(state);\n    const isFound = applicationTaxState.hasOwnProperty(state);\n    switch(type) {\n        case 'FOOD':\n            if(isFoodStateFound) \n                taxPrice =  parseFloat(price * applicantFoodTaxState[state] /100).toFixed(2) ;\n            else \n                taxPrice = elseTax || 0;\n            break;\n        case 'FSP':\n        case 'APP':         \n            if(isFound) \n                taxPrice = parseFloat(price * applicationTaxState[state] /100).toFixed(2) ;\n            else \n                taxPrice = elseTax || 0;\n            break;\n        default:\n                taxPrice = elseTax || 0;\n            break;\n    }\n    return taxPrice;\n}\n"]},"metadata":{},"sourceType":"module"}