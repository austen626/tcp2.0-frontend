{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp2.0-frontend/src/screens/Admin/2.0/AddDealer.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport Header, { HeaderLeft, HeaderCenter, HeaderRight } from '../../../components/Dealer/Header';\nimport { TCPLogo, IconDownArrow, IconArrowLeft } from '../../../assets/images';\nimport Input from '../../../components/commons/input';\nimport { getFromData } from '../../../components/commons/utility';\nimport { updateDealer, addDealer } from '../../../redux/actions/admin';\n\nfunction AddDealer(props) {\n  const {\n    history,\n    dealer,\n    addDealer,\n    updateDealer\n  } = props;\n  const [validationResult, setValidationResult] = useState(null);\n\n  const handleArrowBack = () => {\n    history.push('/admin/dealers');\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const formData = getFromData(evt);\n    setValidationResult(formData.validationResult);\n\n    if (!formData.validationResult) {\n      {\n        dealer.id ? updateDealer(history, formData.formData) : addDealer(history, formData.formData);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dealer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HeaderLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: IconArrowLeft,\n    onClick: () => handleArrowBack(),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(HeaderCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"main-logo\",\n    src: TCPLogo,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(HeaderRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, dealer.id && /*#__PURE__*/React.createElement(Input, {\n    name: \"id\",\n    type: \"hidden\",\n    value: dealer.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"styled-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: dealer.id ? \"company_name\" : \"dealer_company_name\",\n    type: \"text\",\n    defaultValue: dealer.company_name,\n    label: \"Dealer Name\",\n    defaultText: \"Dealer Name\",\n    required: true,\n    error: {\n      'empty': \"Please enter Dealer Name\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: dealer.id ? \"email\" : \"dealer_email\",\n    type: \"email\",\n    regex: \"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\",\n    defaultValue: dealer.email,\n    label: \"Main Dealer User Email\",\n    defaultText: \"Main Dealer User Email\",\n    required: true,\n    error: {\n      'invalid': \"Please enter valid Email address\",\n      'empty': \"Please enter Main Dealer User Email\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: dealer.id ? \"contact_email\" : \"dealer_contact_email\",\n    type: \"email\",\n    regex: \"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\",\n    defaultValue: dealer.contact_email,\n    label: \"Dealer Contact Email\",\n    defaultText: \"Dealer Contact Email\",\n    required: true,\n    error: {\n      'invalid': \"Please enter valid Email address\",\n      'empty': \"Please enter Dealer Contact Email\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: dealer.id ? \"phone\" : \"dealer_phone\",\n    type: \"number\",\n    defaultValue: dealer.phone,\n    label: \"Phone\",\n    defaultText: \"Phone\",\n    maxLength: 10,\n    required: true,\n    error: {\n      'invalid': \"Please enter number only\",\n      'empty': \"Please enter Phone number\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }, \"ADDRESS\"), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: dealer.id ? \"street\" : \"dealer_address_street\",\n    type: \"text\",\n    defaultValue: dealer.street,\n    label: \"Street\",\n    defaultText: \"Street\",\n    required: true,\n    error: {\n      'empty': \"Please enter Street\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: dealer.id ? \"city\" : \"dealer_address_city\",\n    type: \"text\",\n    defaultValue: dealer.city,\n    label: \"City\",\n    defaultText: \"City\",\n    required: true,\n    error: {\n      'empty': \"Please enter city\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: dealer.id ? \"state\" : \"dealer_address_state\",\n    defaultValue: dealer.state ? dealer.state : '',\n    placeholder: \"State\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 33\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"dummy_test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  }, \"dummy_test\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"dummy_test_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  }, \"dummy_test_1\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"dummy_test_2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 33\n    }\n  }, \"dummy_test_2\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"select-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"main-logo\",\n    src: IconDownArrow,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: dealer.id ? \"zip\" : \"dealer_address_zipcode\",\n    type: \"number\",\n    defaultValue: dealer.zip,\n    label: \"Zip Code\",\n    defaultText: \"Zip Code\",\n    maxLength: 6,\n    required: true,\n    error: {\n      'empty': \"Please enter zip code\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"secondary\",\n    onClick: () => handleArrowBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"secondary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, dealer.id ? 'Update' : 'Add'))));\n}\n\nconst mapStateToProps = state => ({\n  dealer: state.admin.selectedDealer\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addDealer: (history, data) => dispatch(addDealer(history, data)),\n  updateDealer: (history, data) => dispatch(updateDealer(history, data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddDealer);","map":{"version":3,"sources":["/home/freedom/Music/tcp2.0-frontend/src/screens/Admin/2.0/AddDealer.js"],"names":["React","useState","connect","Form","Header","HeaderLeft","HeaderCenter","HeaderRight","TCPLogo","IconDownArrow","IconArrowLeft","Input","getFromData","updateDealer","addDealer","AddDealer","props","history","dealer","validationResult","setValidationResult","handleArrowBack","push","handleSubmit","evt","preventDefault","formData","id","e","company_name","email","contact_email","phone","street","city","state","zip","mapStateToProps","admin","selectedDealer","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport Header, { HeaderLeft, HeaderCenter, HeaderRight } from '../../../components/Dealer/Header';\nimport { TCPLogo, IconDownArrow, IconArrowLeft } from '../../../assets/images';\nimport Input from '../../../components/commons/input';\n\nimport { getFromData } from '../../../components/commons/utility';\nimport { updateDealer, addDealer } from '../../../redux/actions/admin';\n\nfunction AddDealer(props) {\n\n    const {\n        history,\n        dealer,\n        addDealer,\n        updateDealer\n    } = props;\n\n    const [validationResult, setValidationResult] = useState(null);\n\n    const handleArrowBack = () => {\n        history.push('/admin/dealers')\n    }\n\n    const handleSubmit = evt => {\n        \n        evt.preventDefault();\n        const formData = getFromData(evt);\n\n        setValidationResult(formData.validationResult);\n\n        if(!formData.validationResult) {\n            {dealer.id ?\n                updateDealer(history, formData.formData)\n                :\n                addDealer(history, formData.formData)\n            }\n        }\n\n    }\n\n    return (\n        <div className=\"dealer\">\n\n            <Header>\n                <HeaderLeft>\n                    <img src={IconArrowLeft} onClick={() => handleArrowBack()} alt=\"\" />\n                </HeaderLeft>\n                <HeaderCenter>\n                    <div className=\"header-main\">\n                        <img className=\"main-logo\" src={TCPLogo} alt=\"\" />\n                    </div>\n                </HeaderCenter>\n                <HeaderRight></HeaderRight>\n            </Header>\n\n            <form onSubmit={(e) => handleSubmit(e)} noValidate>\n                {dealer.id && \n                    <Input \n                        name=\"id\" \n                        type=\"hidden\"\n                        value={dealer.id} \n                    />\n                }\n                <div className=\"container\">\n                    <div className=\"styled-form\">\n                        <Form.Group className=\"mb-18\">\n                            <Input \n                                name={ dealer.id ? \"company_name\" : \"dealer_company_name\" } \n                                type=\"text\" \n                                defaultValue={dealer.company_name} \n                                label=\"Dealer Name\"\n                                defaultText = \"Dealer Name\"\n                                required = {true}\n                                error = {{\n                                    'empty': \"Please enter Dealer Name\"\n                                }}\n                                validationResult = {validationResult}\n                            />\n                        </Form.Group>\n                        <div className=\"box\">\n                            <Form.Group className=\"mb-18\">\n                                <Input \n                                    name={ dealer.id ? \"email\" : \"dealer_email\" }\n                                    type=\"email\"\n                                    regex = \"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\"\n                                    defaultValue={dealer.email} \n                                    label=\"Main Dealer User Email\"\n                                    defaultText = \"Main Dealer User Email\"\n                                    required = {true}\n                                    error = {{\n                                        'invalid': \"Please enter valid Email address\",\n                                        'empty': \"Please enter Main Dealer User Email\"\n                                    }}\n                                    validationResult = {validationResult}\n                                />\n                            </Form.Group>\n                            <Form.Group className=\"mb-18\">\n                                <Input \n                                    name={ dealer.id ? \"contact_email\" : \"dealer_contact_email\" }\n                                    type=\"email\"\n                                    regex = \"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\"\n                                    defaultValue={dealer.contact_email} \n                                    label=\"Dealer Contact Email\"\n                                    defaultText = \"Dealer Contact Email\"\n                                    required = {true}\n                                    error = {{\n                                        'invalid': \"Please enter valid Email address\",\n                                        'empty': \"Please enter Dealer Contact Email\"\n                                    }}\n                                    validationResult = {validationResult}\n                                />\n                            </Form.Group>\n                        </div>\n                        <Form.Group className=\"mb-18\">\n                            <Input \n                                name={ dealer.id ? \"phone\" : \"dealer_phone\" }\n                                type=\"number\"\n                                defaultValue={dealer.phone} \n                                label=\"Phone\"\n                                defaultText = \"Phone\"\n                                maxLength = {10}\n                                required = {true}\n                                error = {{\n                                    'invalid': \"Please enter number only\",\n                                    'empty': \"Please enter Phone number\"\n                                }}\n                                validationResult = {validationResult}\n                            />\n                        </Form.Group>\n                        <span className=\"divider\"></span>\n                        <span className=\"title\">ADDRESS</span>\n                        <Form.Group className=\"mb-18\">\n                            <Input \n                                name={ dealer.id ? \"street\" : \"dealer_address_street\" }\n                                type=\"text\"\n                                defaultValue={dealer.street} \n                                label=\"Street\"\n                                defaultText = \"Street\"\n                                required = {true}\n                                error = {{\n                                    'empty': \"Please enter Street\"\n                                }}\n                                validationResult = {validationResult}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-18\">\n                            <Input \n                                name={ dealer.id ? \"city\" : \"dealer_address_city\" } \n                                type=\"text\"\n                                defaultValue={dealer.city} \n                                label=\"City\"\n                                defaultText = \"City\"\n                                required = {true}\n                                error = {{\n                                    'empty': \"Please enter city\"\n                                }}\n                                validationResult = {validationResult}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-18\">\n                            <Form.Label>State</Form.Label>\n                            <select \n                                name={ dealer.id ? \"state\" : \"dealer_address_state\" }\n                                defaultValue={dealer.state ? dealer.state : ''} \n                                placeholder=\"State\"\n                            >\n                                <option value=\"\" disabled>State</option>\n                                <option value=\"dummy_test\">dummy_test</option>\n                                <option value=\"dummy_test_1\">dummy_test_1</option>\n                                <option value=\"dummy_test_2\">dummy_test_2</option>\n                            </select>\n                            <span className=\"select-dropdown\">\n                                <img className=\"main-logo\" src={IconDownArrow} alt=\"\" />\n                            </span>\n                        </Form.Group>\n                        <Form.Group className=\"mb-18\">\n                            <Input \n                                name={ dealer.id ? \"zip\" : \"dealer_address_zipcode\" }\n                                type=\"number\"\n                                defaultValue={dealer.zip} \n                                label=\"Zip Code\"\n                                defaultText = \"Zip Code\"\n                                maxLength = {6}\n                                required = {true}\n                                error = {{\n                                    'empty': \"Please enter zip code\"\n                                }}\n                                validationResult = {validationResult}\n                            />\n                        </Form.Group>\n                    </div>\n                </div>\n                <div className=\"footer-container\">\n                    <button className=\"secondary\" onClick={() => handleArrowBack()}>Cancel</button>\n                    <button className=\"secondary\" type=\"submit\">{dealer.id ? 'Update' : 'Add'}</button>\n                </div>\n            </form>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    dealer: state.admin.selectedDealer\n});\n\nconst mapDispatchToProps = dispatch => ({\n    addDealer: (history, data) => dispatch(addDealer(history, data)),\n    updateDealer: (history, data) => dispatch(updateDealer(history, data))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddDealer);"]},"metadata":{},"sourceType":"module"}