{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp2.0-frontend/src/screens/Sales/2.0/applyApplication.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../../../components/Sales/Header';\nimport { Form } from 'react-bootstrap';\nimport Input from '../../../components/commons/input';\nimport Loader from 'shared/Loader';\nimport { IconHome, IconList, IconSend } from '../../../assets/images';\n\nfunction HomeScreen(props) {\n  const {\n    history,\n    avatar,\n    actionLoading\n  } = props;\n  const [validationResult, setValidationResult] = useState(null);\n\n  const handleHomeClick = () => {\n    this.props.history.replace('/');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sales\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, actionLoading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    isHome: true,\n    history: history,\n    avatar: avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, localStorage.getItem('role') && localStorage.getItem('role').indexOf('dealer') !== -1 && /*#__PURE__*/React.createElement(\"img\", {\n    src: IconHome,\n    alt: \"home\",\n    className: \"icon-home\",\n    onClick: () => handleHomeClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"icon-new-customer\",\n    src: IconList,\n    alt: \"new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"NEW CUSTOMER\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button button-reorder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"icon-reorder-customer\",\n    src: IconSend,\n    alt: \"reorder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"REORsdsDER CUSTOMER\"))));\n}\n\nconst mapStateToProps = state => ({\n  avatar: state.auth.avatar\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeScreen);","map":{"version":3,"sources":["/home/freedom/Music/tcp2.0-frontend/src/screens/Sales/2.0/applyApplication.js"],"names":["React","useState","connect","Header","Form","Input","Loader","IconHome","IconList","IconSend","HomeScreen","props","history","avatar","actionLoading","validationResult","setValidationResult","handleHomeClick","replace","localStorage","getItem","indexOf","mapStateToProps","state","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../../../components/Sales/Header';\nimport { Form } from 'react-bootstrap';\nimport Input from '../../../components/commons/input';\nimport Loader from 'shared/Loader';\nimport { IconHome, IconList, IconSend } from '../../../assets/images';\n\nfunction HomeScreen(props) {\n\n    const {\n        history,\n        avatar,\n        actionLoading,\n    } = props;\n\n    const [validationResult, setValidationResult] = useState(null);\n\n    const handleHomeClick = () => {\n        this.props.history.replace('/');\n    }\n\n    return (\n        <div className=\"sales\">\n\n            { actionLoading && <Loader />}\n\n            <Header isHome={true} history={history} avatar={avatar}>\n                {localStorage.getItem('role') && localStorage.getItem('role').indexOf('dealer') !== -1 &&\n                    <img src={IconHome} alt=\"home\" className=\"icon-home\" onClick={()=>handleHomeClick()} />\n                }\n            </Header>\n\n            <div className=\"home\">\n                <div className=\"button\">\n                    <div className=\"icon\">\n                        <img className=\"icon-new-customer\" src={IconList} alt=\"new\" />\n                    </div>\n                    <div className=\"label\">NEW CUSTOMER</div>\n                </div>\n                <div className=\"button button-reorder\">\n                    <div className=\"icon\">\n                        <img className=\"icon-reorder-customer\" src={IconSend} alt=\"reorder\" />\n                    </div>\n                    <div className=\"label\">REORsdsDER CUSTOMER</div>\n                </div>\n            </div>\n            \n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    avatar: state.auth.avatar\n});\n\nconst mapDispatchToProps = dispatch => ({\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(HomeScreen);"]},"metadata":{},"sourceType":"module"}