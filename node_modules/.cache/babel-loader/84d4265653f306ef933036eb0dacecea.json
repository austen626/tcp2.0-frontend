{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp2.0-frontend/src/screens/Sales/2.0/summary.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport Header, { HeaderLeft, HeaderCenter, HeaderRight } from '../../../components/Dealer/Header';\nimport { TCPLogo, IconArrowLeft, IconContactAcitve } from '../../../assets/images';\nimport Input from '../../../components/commons/input';\nimport Dropdown from '../../../components/commons/dropdown';\nimport Checkbox from '../../../components/commons/checkbox';\nimport Loader from 'shared/Loader';\nimport { getFromData } from '../../../components/commons/utility';\nimport { updateDealer, addDealer } from '../../../redux/actions/admin';\n\nfunction AddDealer(props) {\n  const {\n    history,\n    dealer,\n    addDealer,\n    updateDealer,\n    actionLoading\n  } = props;\n  const [validationResult, setValidationResult] = useState(null);\n\n  const handleArrowBack = () => {};\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const formData = getFromData(evt);\n    setValidationResult(formData.validationResult);\n    console.log(formData); // if (!formData.validationResult) {\n    //     let data = formData.formData\n    //     if (dealer.id) {\n    //         data = { ...data, updated_email: data.email, updated_phone: data.phone }\n    //         updateDealer(history, data)\n    //     }\n    //     else {\n    //         addDealer(history, data)\n    //     }\n    // }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dealer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, actionLoading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HeaderLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: IconArrowLeft,\n    onClick: () => handleArrowBack(),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(HeaderCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"main-logo\",\n    src: TCPLogo,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(HeaderRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sub-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: IconContactAcitve,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Applicant(s) Details\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"arrow-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: IconContactAcitve,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Applicant(s) Details\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"arrow-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, dealer.id && /*#__PURE__*/React.createElement(Input, {\n    name: \"id\",\n    type: \"hidden\",\n    value: dealer.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"styled-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    name: \"have_co_applicant\",\n    type: \"checkbox\",\n    theme: \"light-label\",\n    label: \"Not currently employed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"styled-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"styled-column mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"zip\",\n    type: \"text\" // defaultValue={dealer.zip}\n    ,\n    label: \"Present Employer\",\n    defaultText: \"Present Employer\",\n    maxLength: 6,\n    required: true,\n    error: {\n      'empty': \"Please enter Present Employer\"\n    },\n    validationResult: validationResult,\n    optionalParams: {\n      style: {\n        width: 241\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"styled-column mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"zip\",\n    type: \"text\" // defaultValue={dealer.zip}\n    ,\n    label: \"Years There\",\n    defaultText: \"Years There\",\n    maxLength: 6,\n    required: true,\n    error: {\n      'empty': \"Please enter Years There\"\n    },\n    validationResult: validationResult,\n    optionalParams: {\n      style: {\n        width: 87\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"first_name\",\n    type: \"text\" // defaultValue={dealer.company_name}\n    ,\n    label: \"Job Title/Position\",\n    defaultText: \"Job Title/Position\",\n    required: true,\n    error: {\n      'empty': \"Please enter Job Title/Position\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"styled-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"styled-column mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"zip\",\n    type: \"text\" // defaultValue={dealer.zip}\n    ,\n    label: \"Employer's Phone Number\",\n    defaultText: \"Employer's Phone Number\",\n    maxLength: 6,\n    required: true,\n    error: {\n      'empty': \"Please enter Employer's Phone Number\"\n    },\n    validationResult: validationResult,\n    optionalParams: {\n      style: {\n        width: 204\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"styled-column mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"zip\",\n    type: \"number\" // defaultValue={dealer.zip}\n    ,\n    label: \"Monthly Income\",\n    defaultText: \"Monthly Income\",\n    maxLength: 6,\n    required: true,\n    error: {\n      'empty': \"Please enter Monthly Income\"\n    },\n    validationResult: validationResult,\n    optionalParams: {\n      style: {\n        width: 118\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box center-box\",\n    style: {\n      width: 290,\n      marginTop: 22\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    class: \"form-label\",\n    style: {\n      textAlign: \"center\",\n      width: \"100%\",\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 29\n    }\n  }, \"Do you have any other sources of income\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radio-box center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18 radio-filed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"yes\",\n    name: \"role\",\n    type: \"radio\",\n    className: \"radio-width\",\n    defaultValue: \"yes\" // checked={staff.role && staff.role[0] == 'sales' ? true : null}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"yes\",\n    class: \"form-label \",\n    id: \"yes-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 37\n    }\n  }, \"Yes\")), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18 radio-filed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"no\",\n    name: \"role\",\n    type: \"radio\",\n    className: \"radio-width\",\n    defaultValue: \"no\" // checked={staff.role && staff.role[0] == 'dealer' ? true : null}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"no\",\n    class: \"form-label \",\n    id: \"no-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 37\n    }\n  }, \"No\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"styled-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"styled-column mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"zip\",\n    type: \"text\" // defaultValue={dealer.zip}\n    ,\n    label: \"Source\",\n    defaultText: \"Source\",\n    maxLength: 6,\n    required: true,\n    error: {\n      'empty': \"Please enter Source\"\n    },\n    validationResult: validationResult,\n    optionalParams: {\n      style: {\n        width: 204\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"styled-column mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"zip\",\n    type: \"number\" // defaultValue={dealer.zip}\n    ,\n    label: \"Monthly Income\",\n    defaultText: \"Monthly Income\",\n    maxLength: 6,\n    required: true,\n    error: {\n      'empty': \"Please enter Monthly Income\"\n    },\n    validationResult: validationResult,\n    optionalParams: {\n      style: {\n        width: 118\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 29\n    }\n  }, \"Co-applicant\")), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    name: \"have_co_applicant\",\n    type: \"checkbox\",\n    theme: \"light-label\",\n    label: \"Not currently employed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"styled-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"styled-column mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"zip\",\n    type: \"text\" // defaultValue={dealer.zip}\n    ,\n    label: \"Present Employer\",\n    defaultText: \"Present Employer\",\n    maxLength: 6,\n    required: true,\n    error: {\n      'empty': \"Please enter Present Employer\"\n    },\n    validationResult: validationResult,\n    optionalParams: {\n      style: {\n        width: 241\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"styled-column mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"zip\",\n    type: \"text\" // defaultValue={dealer.zip}\n    ,\n    label: \"Years There\",\n    defaultText: \"Years There\",\n    maxLength: 6,\n    required: true,\n    error: {\n      'empty': \"Please enter Years There\"\n    },\n    validationResult: validationResult,\n    optionalParams: {\n      style: {\n        width: 87\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"first_name\",\n    type: \"text\" // defaultValue={dealer.company_name}\n    ,\n    label: \"Job Title/Position\",\n    defaultText: \"Job Title/Position\",\n    required: true,\n    error: {\n      'empty': \"Please enter Job Title/Position\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"styled-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"styled-column mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"zip\",\n    type: \"text\" // defaultValue={dealer.zip}\n    ,\n    label: \"Employer's Phone Number\",\n    defaultText: \"Employer's Phone Number\",\n    maxLength: 6,\n    required: true,\n    error: {\n      'empty': \"Please enter Employer's Phone Number\"\n    },\n    validationResult: validationResult,\n    optionalParams: {\n      style: {\n        width: 204\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"styled-column mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"zip\",\n    type: \"number\" // defaultValue={dealer.zip}\n    ,\n    label: \"Monthly Income\",\n    defaultText: \"Monthly Income\",\n    maxLength: 6,\n    required: true,\n    error: {\n      'empty': \"Please enter Monthly Income\"\n    },\n    validationResult: validationResult,\n    optionalParams: {\n      style: {\n        width: 118\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box center-box\",\n    style: {\n      width: 290,\n      marginTop: 22\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    class: \"form-label\",\n    style: {\n      textAlign: \"center\",\n      width: \"100%\",\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 29\n    }\n  }, \"Do you have any other sources of income\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radio-box center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18 radio-filed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"yes\",\n    name: \"role\",\n    type: \"radio\",\n    className: \"radio-width\",\n    defaultValue: \"yes\" // checked={staff.role && staff.role[0] == 'sales' ? true : null}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"yes\",\n    class: \"form-label \",\n    id: \"yes-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 37\n    }\n  }, \"Yes\")), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18 radio-filed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"no\",\n    name: \"role\",\n    type: \"radio\",\n    className: \"radio-width\",\n    defaultValue: \"no\" // checked={staff.role && staff.role[0] == 'dealer' ? true : null}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"no\",\n    class: \"form-label \",\n    id: \"no-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 37\n    }\n  }, \"No\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"styled-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"styled-column mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"zip\",\n    type: \"text\" // defaultValue={dealer.zip}\n    ,\n    label: \"Source\",\n    defaultText: \"Source\",\n    maxLength: 6,\n    required: true,\n    error: {\n      'empty': \"Please enter Source\"\n    },\n    validationResult: validationResult,\n    optionalParams: {\n      style: {\n        width: 204\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"styled-column mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"zip\",\n    type: \"number\" // defaultValue={dealer.zip}\n    ,\n    label: \"Monthly Income\",\n    defaultText: \"Monthly Income\",\n    maxLength: 6,\n    required: true,\n    error: {\n      'empty': \"Please enter Monthly Income\"\n    },\n    validationResult: validationResult,\n    optionalParams: {\n      style: {\n        width: 118\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"secondary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 21\n    }\n  }, \"Next\"))));\n}\n\nconst mapStateToProps = state => ({\n  dealer: state.admin.selectedDealer,\n  actionLoading: state.admin.actionLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addDealer: (history, data) => dispatch(addDealer(history, data)),\n  updateDealer: (history, data) => dispatch(updateDealer(history, data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddDealer);","map":{"version":3,"sources":["/home/freedom/Music/tcp2.0-frontend/src/screens/Sales/2.0/summary.js"],"names":["React","useState","connect","Form","Header","HeaderLeft","HeaderCenter","HeaderRight","TCPLogo","IconArrowLeft","IconContactAcitve","Input","Dropdown","Checkbox","Loader","getFromData","updateDealer","addDealer","AddDealer","props","history","dealer","actionLoading","validationResult","setValidationResult","handleArrowBack","handleSubmit","evt","preventDefault","formData","console","log","e","id","style","width","marginTop","textAlign","padding","mapStateToProps","state","admin","selectedDealer","mapDispatchToProps","dispatch","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,EAA6BC,YAA7B,EAA2CC,WAA3C,QAA8D,mCAA9D;AACA,SAASC,OAAT,EAAkBC,aAAlB,EAAiCC,iBAAjC,QAA0D,wBAA1D;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,8BAAxC;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAEtB,QAAM;AACFC,IAAAA,OADE;AAEFC,IAAAA,MAFE;AAGFJ,IAAAA,SAHE;AAIFD,IAAAA,YAJE;AAKFM,IAAAA;AALE,MAMFH,KANJ;AAQA,QAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0CvB,QAAQ,CAAC,IAAD,CAAxD;;AAEA,QAAMwB,eAAe,GAAG,MAAM,CAE7B,CAFD;;AAIA,QAAMC,YAAY,GAAGC,GAAG,IAAI;AAExBA,IAAAA,GAAG,CAACC,cAAJ;AACA,UAAMC,QAAQ,GAAGd,WAAW,CAACY,GAAD,CAA5B;AAEAH,IAAAA,mBAAmB,CAACK,QAAQ,CAACN,gBAAV,CAAnB;AAEAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAPwB,CASxB;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAtBD;;AAwBA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEMP,aAAa,iBAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFvB,eAII,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEb,aAAV;AAAyB,IAAA,OAAO,EAAE,MAAMgB,eAAe,EAAvD;AAA2D,IAAA,GAAG,EAAC,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEjB,OAAhC;AAAyC,IAAA,GAAG,EAAC,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAJJ,eASI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAJJ,eAgBI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEE,iBAAV;AAA6B,IAAA,GAAG,EAAC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,eAGI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEA,iBAAV;AAA6B,IAAA,GAAG,EAAC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,eAGI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CANJ,CAhBJ,eA6BI;AAAM,IAAA,QAAQ,EAAGsB,CAAD,IAAON,YAAY,CAACM,CAAD,CAAnC;AAAwC,IAAA,UAAU,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,MAAM,CAACY,EAAP,iBACG,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,IADT;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,KAAK,EAAEZ,MAAM,CAACY,EAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,eAQI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAC,mBADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,KAAK,EAAC,aAHV;AAII,IAAA,KAAK,EAAC,wBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,eAWI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,KADT;AAEI,IAAA,IAAI,EAAC,MAFT,CAGI;AAHJ;AAII,IAAA,KAAK,EAAC,kBAJV;AAKI,IAAA,WAAW,EAAC,kBALhB;AAMI,IAAA,SAAS,EAAE,CANf;AAOI,IAAA,QAAQ,EAAE,IAPd;AAQI,IAAA,KAAK,EAAE;AACH,eAAS;AADN,KARX;AAWI,IAAA,gBAAgB,EAAEV,gBAXtB;AAYI,IAAA,cAAc,EAAI;AAACW,MAAAA,KAAK,EAAC;AAACC,QAAAA,KAAK,EAAE;AAAR;AAAP,KAZtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAiBI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,KADT;AAEI,IAAA,IAAI,EAAC,MAFT,CAGI;AAHJ;AAII,IAAA,KAAK,EAAC,aAJV;AAKI,IAAA,WAAW,EAAC,aALhB;AAMI,IAAA,SAAS,EAAE,CANf;AAOI,IAAA,QAAQ,EAAE,IAPd;AAQI,IAAA,KAAK,EAAE;AACH,eAAS;AADN,KARX;AAWI,IAAA,gBAAgB,EAAEZ,gBAXtB;AAYI,IAAA,cAAc,EAAI;AAACW,MAAAA,KAAK,EAAC;AAACC,QAAAA,KAAK,EAAE;AAAR;AAAP,KAZtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAjBJ,CAXJ,eA8CI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,YADT;AAEI,IAAA,IAAI,EAAC,MAFT,CAGI;AAHJ;AAII,IAAA,KAAK,EAAC,oBAJV;AAKI,IAAA,WAAW,EAAC,oBALhB;AAMI,IAAA,QAAQ,EAAE,IANd;AAOI,IAAA,KAAK,EAAE;AACH,eAAS;AADN,KAPX;AAUI,IAAA,gBAAgB,EAAEZ,gBAVtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA9CJ,eA6DI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,KADT;AAEI,IAAA,IAAI,EAAC,MAFT,CAGI;AAHJ;AAII,IAAA,KAAK,EAAC,yBAJV;AAKI,IAAA,WAAW,EAAC,yBALhB;AAMI,IAAA,SAAS,EAAE,CANf;AAOI,IAAA,QAAQ,EAAE,IAPd;AAQI,IAAA,KAAK,EAAE;AACH,eAAS;AADN,KARX;AAWI,IAAA,gBAAgB,EAAEA,gBAXtB;AAYI,IAAA,cAAc,EAAI;AAACW,MAAAA,KAAK,EAAC;AAACC,QAAAA,KAAK,EAAE;AAAR;AAAP,KAZtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAiBI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,KADT;AAEI,IAAA,IAAI,EAAC,QAFT,CAGI;AAHJ;AAII,IAAA,KAAK,EAAC,gBAJV;AAKI,IAAA,WAAW,EAAC,gBALhB;AAMI,IAAA,SAAS,EAAE,CANf;AAOI,IAAA,QAAQ,EAAE,IAPd;AAQI,IAAA,KAAK,EAAE;AACH,eAAS;AADN,KARX;AAWI,IAAA,gBAAgB,EAAEZ,gBAXtB;AAYI,IAAA,cAAc,EAAI;AAACW,MAAAA,KAAK,EAAC;AAACC,QAAAA,KAAK,EAAE;AAAR;AAAP,KAZtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAjBJ,CA7DJ,eAgGI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAK,EAAE,GAAR;AAAaC,MAAAA,SAAS,EAAE;AAAxB,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,KAAK,EAAC,YAAb;AAA0B,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE,QAAZ;AAAsBF,MAAAA,KAAK,EAAE,MAA7B;AAAqCG,MAAAA,OAAO,EAAE;AAA9C,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADJ,eAEI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,EAAE,EAAE,KADR;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,SAAS,EAAC,aAJd;AAKI,IAAA,YAAY,EAAC,KALjB,CAMI;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AAAO,IAAA,GAAG,EAAC,KAAX;AAAiB,IAAA,KAAK,EAAC,aAAvB;AAAqC,IAAA,EAAE,EAAC,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATJ,CADJ,eAYI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,EAAE,EAAE,IADR;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,SAAS,EAAC,aAJd;AAKI,IAAA,YAAY,EAAC,IALjB,CAMI;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AAAO,IAAA,GAAG,EAAC,IAAX;AAAgB,IAAA,KAAK,EAAC,aAAtB;AAAoC,IAAA,EAAE,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATJ,CAZJ,CAFJ,CAhGJ,eA4HI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,KADT;AAEI,IAAA,IAAI,EAAC,MAFT,CAGI;AAHJ;AAII,IAAA,KAAK,EAAC,QAJV;AAKI,IAAA,WAAW,EAAC,QALhB;AAMI,IAAA,SAAS,EAAE,CANf;AAOI,IAAA,QAAQ,EAAE,IAPd;AAQI,IAAA,KAAK,EAAE;AACH,eAAS;AADN,KARX;AAWI,IAAA,gBAAgB,EAAEf,gBAXtB;AAYI,IAAA,cAAc,EAAI;AAACW,MAAAA,KAAK,EAAC;AAACC,QAAAA,KAAK,EAAE;AAAR;AAAP,KAZtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAiBI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,KADT;AAEI,IAAA,IAAI,EAAC,QAFT,CAGI;AAHJ;AAII,IAAA,KAAK,EAAC,gBAJV;AAKI,IAAA,WAAW,EAAC,gBALhB;AAMI,IAAA,SAAS,EAAE,CANf;AAOI,IAAA,QAAQ,EAAE,IAPd;AAQI,IAAA,KAAK,EAAE;AACH,eAAS;AADN,KARX;AAWI,IAAA,gBAAgB,EAAEZ,gBAXtB;AAYI,IAAA,cAAc,EAAI;AAACW,MAAAA,KAAK,EAAC;AAACC,QAAAA,KAAK,EAAE;AAAR;AAAP,KAZtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAjBJ,CA5HJ,eA+JI;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CA/JJ,eAmKI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAC,mBADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,KAAK,EAAC,aAHV;AAII,IAAA,KAAK,EAAC,wBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAnKJ,eA4KI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,KADT;AAEI,IAAA,IAAI,EAAC,MAFT,CAGI;AAHJ;AAII,IAAA,KAAK,EAAC,kBAJV;AAKI,IAAA,WAAW,EAAC,kBALhB;AAMI,IAAA,SAAS,EAAE,CANf;AAOI,IAAA,QAAQ,EAAE,IAPd;AAQI,IAAA,KAAK,EAAE;AACH,eAAS;AADN,KARX;AAWI,IAAA,gBAAgB,EAAEZ,gBAXtB;AAYI,IAAA,cAAc,EAAI;AAACW,MAAAA,KAAK,EAAC;AAACC,QAAAA,KAAK,EAAE;AAAR;AAAP,KAZtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAiBI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,KADT;AAEI,IAAA,IAAI,EAAC,MAFT,CAGI;AAHJ;AAII,IAAA,KAAK,EAAC,aAJV;AAKI,IAAA,WAAW,EAAC,aALhB;AAMI,IAAA,SAAS,EAAE,CANf;AAOI,IAAA,QAAQ,EAAE,IAPd;AAQI,IAAA,KAAK,EAAE;AACH,eAAS;AADN,KARX;AAWI,IAAA,gBAAgB,EAAEZ,gBAXtB;AAYI,IAAA,cAAc,EAAI;AAACW,MAAAA,KAAK,EAAC;AAACC,QAAAA,KAAK,EAAE;AAAR;AAAP,KAZtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAjBJ,CA5KJ,eA+MI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,YADT;AAEI,IAAA,IAAI,EAAC,MAFT,CAGI;AAHJ;AAII,IAAA,KAAK,EAAC,oBAJV;AAKI,IAAA,WAAW,EAAC,oBALhB;AAMI,IAAA,QAAQ,EAAE,IANd;AAOI,IAAA,KAAK,EAAE;AACH,eAAS;AADN,KAPX;AAUI,IAAA,gBAAgB,EAAEZ,gBAVtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA/MJ,eA8NI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,KADT;AAEI,IAAA,IAAI,EAAC,MAFT,CAGI;AAHJ;AAII,IAAA,KAAK,EAAC,yBAJV;AAKI,IAAA,WAAW,EAAC,yBALhB;AAMI,IAAA,SAAS,EAAE,CANf;AAOI,IAAA,QAAQ,EAAE,IAPd;AAQI,IAAA,KAAK,EAAE;AACH,eAAS;AADN,KARX;AAWI,IAAA,gBAAgB,EAAEA,gBAXtB;AAYI,IAAA,cAAc,EAAI;AAACW,MAAAA,KAAK,EAAC;AAACC,QAAAA,KAAK,EAAE;AAAR;AAAP,KAZtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAiBI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,KADT;AAEI,IAAA,IAAI,EAAC,QAFT,CAGI;AAHJ;AAII,IAAA,KAAK,EAAC,gBAJV;AAKI,IAAA,WAAW,EAAC,gBALhB;AAMI,IAAA,SAAS,EAAE,CANf;AAOI,IAAA,QAAQ,EAAE,IAPd;AAQI,IAAA,KAAK,EAAE;AACH,eAAS;AADN,KARX;AAWI,IAAA,gBAAgB,EAAEZ,gBAXtB;AAYI,IAAA,cAAc,EAAI;AAACW,MAAAA,KAAK,EAAC;AAACC,QAAAA,KAAK,EAAE;AAAR;AAAP,KAZtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAjBJ,CA9NJ,eAiQI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAK,EAAE,GAAR;AAAaC,MAAAA,SAAS,EAAE;AAAxB,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,KAAK,EAAC,YAAb;AAA0B,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE,QAAZ;AAAsBF,MAAAA,KAAK,EAAE,MAA7B;AAAqCG,MAAAA,OAAO,EAAE;AAA9C,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADJ,eAEI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,EAAE,EAAE,KADR;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,SAAS,EAAC,aAJd;AAKI,IAAA,YAAY,EAAC,KALjB,CAMI;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AAAO,IAAA,GAAG,EAAC,KAAX;AAAiB,IAAA,KAAK,EAAC,aAAvB;AAAqC,IAAA,EAAE,EAAC,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATJ,CADJ,eAYI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,EAAE,EAAE,IADR;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,SAAS,EAAC,aAJd;AAKI,IAAA,YAAY,EAAC,IALjB,CAMI;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AAAO,IAAA,GAAG,EAAC,IAAX;AAAgB,IAAA,KAAK,EAAC,aAAtB;AAAoC,IAAA,EAAE,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATJ,CAZJ,CAFJ,CAjQJ,eA6RI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,KADT;AAEI,IAAA,IAAI,EAAC,MAFT,CAGI;AAHJ;AAII,IAAA,KAAK,EAAC,QAJV;AAKI,IAAA,WAAW,EAAC,QALhB;AAMI,IAAA,SAAS,EAAE,CANf;AAOI,IAAA,QAAQ,EAAE,IAPd;AAQI,IAAA,KAAK,EAAE;AACH,eAAS;AADN,KARX;AAWI,IAAA,gBAAgB,EAAEf,gBAXtB;AAYI,IAAA,cAAc,EAAI;AAACW,MAAAA,KAAK,EAAC;AAACC,QAAAA,KAAK,EAAE;AAAR;AAAP,KAZtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAiBI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,KADT;AAEI,IAAA,IAAI,EAAC,QAFT,CAGI;AAHJ;AAII,IAAA,KAAK,EAAC,gBAJV;AAKI,IAAA,WAAW,EAAC,gBALhB;AAMI,IAAA,SAAS,EAAE,CANf;AAOI,IAAA,QAAQ,EAAE,IAPd;AAQI,IAAA,KAAK,EAAE;AACH,eAAS;AADN,KARX;AAWI,IAAA,gBAAgB,EAAEZ,gBAXtB;AAYI,IAAA,cAAc,EAAI;AAACW,MAAAA,KAAK,EAAC;AAACC,QAAAA,KAAK,EAAE;AAAR;AAAP,KAZtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAjBJ,CA7RJ,CADJ,CARJ,eA2UI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CA3UJ,CA7BJ,CADJ;AAgXH;;AAED,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAC9BnB,EAAAA,MAAM,EAAEmB,KAAK,CAACC,KAAN,CAAYC,cADU;AAE9BpB,EAAAA,aAAa,EAAEkB,KAAK,CAACC,KAAN,CAAYnB;AAFG,CAAL,CAA7B;;AAKA,MAAMqB,kBAAkB,GAAGC,QAAQ,KAAK;AACpC3B,EAAAA,SAAS,EAAE,CAACG,OAAD,EAAUyB,IAAV,KAAmBD,QAAQ,CAAC3B,SAAS,CAACG,OAAD,EAAUyB,IAAV,CAAV,CADF;AAEpC7B,EAAAA,YAAY,EAAE,CAACI,OAAD,EAAUyB,IAAV,KAAmBD,QAAQ,CAAC5B,YAAY,CAACI,OAAD,EAAUyB,IAAV,CAAb;AAFL,CAAL,CAAnC;;AAKA,eAAe3C,OAAO,CAClBqC,eADkB,EAElBI,kBAFkB,CAAP,CAGbzB,SAHa,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport Header, { HeaderLeft, HeaderCenter, HeaderRight } from '../../../components/Dealer/Header';\nimport { TCPLogo, IconArrowLeft, IconContactAcitve } from '../../../assets/images';\nimport Input from '../../../components/commons/input';\nimport Dropdown from '../../../components/commons/dropdown';\nimport Checkbox from '../../../components/commons/checkbox';\nimport Loader from 'shared/Loader';\n\nimport { getFromData } from '../../../components/commons/utility';\nimport { updateDealer, addDealer } from '../../../redux/actions/admin';\n\nfunction AddDealer(props) {\n\n    const {\n        history,\n        dealer,\n        addDealer,\n        updateDealer,\n        actionLoading,\n    } = props;\n\n    const [validationResult, setValidationResult] = useState(null);\n\n    const handleArrowBack = () => {\n\n    }\n\n    const handleSubmit = evt => {\n\n        evt.preventDefault();\n        const formData = getFromData(evt);\n\n        setValidationResult(formData.validationResult);\n\n        console.log(formData);\n\n        // if (!formData.validationResult) {\n\n        //     let data = formData.formData\n\n        //     if (dealer.id) {\n\n        //         data = { ...data, updated_email: data.email, updated_phone: data.phone }\n        //         updateDealer(history, data)\n        //     }\n        //     else {\n        //         addDealer(history, data)\n        //     }\n        // }\n    }\n\n    return (\n        <div className=\"dealer\">\n\n            { actionLoading && <Loader />}\n\n            <Header>\n                <HeaderLeft>\n                    <img src={IconArrowLeft} onClick={() => handleArrowBack()} alt=\"\" />\n                </HeaderLeft>\n                <HeaderCenter>\n                    <div className=\"header-main\">\n                        <img className=\"main-logo\" src={TCPLogo} alt=\"\" />\n                    </div>\n                </HeaderCenter>\n                <HeaderRight></HeaderRight>\n            </Header>\n\n            <div className=\"sub-header\">\n                <button>\n                    <img src={IconContactAcitve} alt=\"\"/> \n                    <span>Applicant(s) Details</span>\n                    <span className='arrow-down'></span>\n                </button>\n                <button>\n                    <img src={IconContactAcitve} alt=\"\"/> \n                    <span>Applicant(s) Details</span>\n                    <span className='arrow-down'></span>\n                </button>\n            </div>\n\n            <form onSubmit={(e) => handleSubmit(e)} noValidate>\n                {dealer.id &&\n                    <Input\n                        name=\"id\"\n                        type=\"hidden\"\n                        value={dealer.id}\n                    />\n                }\n                <div className=\"container\">\n                    <div className=\"styled-form\">\n\n                        <Form.Group className=\"mb-18\">\n                            <Checkbox\n                                name=\"have_co_applicant\"\n                                type=\"checkbox\"\n                                theme=\"light-label\"\n                                label=\"Not currently employed\"\n                            />\n                        </Form.Group>\n\n                        <div className=\"styled-row\">\n                            <Form.Group className=\"styled-column mb-18\">\n                                <Input\n                                    name=\"zip\"\n                                    type=\"text\"\n                                    // defaultValue={dealer.zip}\n                                    label=\"Present Employer\"\n                                    defaultText=\"Present Employer\"\n                                    maxLength={6}\n                                    required={true}\n                                    error={{\n                                        'empty': \"Please enter Present Employer\"\n                                    }}\n                                    validationResult={validationResult}\n                                    optionalParams = {{style:{width: 241}}}\n                                />\n                            </Form.Group>\n                            <Form.Group className=\"styled-column mb-18\">\n                                <Input\n                                    name=\"zip\"\n                                    type=\"text\"\n                                    // defaultValue={dealer.zip}\n                                    label=\"Years There\"\n                                    defaultText=\"Years There\"\n                                    maxLength={6}\n                                    required={true}\n                                    error={{\n                                        'empty': \"Please enter Years There\"\n                                    }}\n                                    validationResult={validationResult}\n                                    optionalParams = {{style:{width: 87}}}\n                                />\n                            </Form.Group>\n                        </div>\n\n                        <Form.Group className=\"mb-18\">\n                            <Input\n                                name=\"first_name\"\n                                type=\"text\"\n                                // defaultValue={dealer.company_name}\n                                label=\"Job Title/Position\"\n                                defaultText=\"Job Title/Position\"\n                                required={true}\n                                error={{\n                                    'empty': \"Please enter Job Title/Position\"\n                                }}\n                                validationResult={validationResult}\n                            />\n                        </Form.Group>\n\n                        <div className=\"styled-row\">\n                            <Form.Group className=\"styled-column mb-18\">\n                                <Input\n                                    name=\"zip\"\n                                    type=\"text\"\n                                    // defaultValue={dealer.zip}\n                                    label=\"Employer's Phone Number\"\n                                    defaultText=\"Employer's Phone Number\"\n                                    maxLength={6}\n                                    required={true}\n                                    error={{\n                                        'empty': \"Please enter Employer's Phone Number\"\n                                    }}\n                                    validationResult={validationResult}\n                                    optionalParams = {{style:{width: 204}}}\n                                />\n                            </Form.Group>\n                            <Form.Group className=\"styled-column mb-18\">\n                                <Input\n                                    name=\"zip\"\n                                    type=\"number\"\n                                    // defaultValue={dealer.zip}\n                                    label=\"Monthly Income\"\n                                    defaultText=\"Monthly Income\"\n                                    maxLength={6}\n                                    required={true}\n                                    error={{\n                                        'empty': \"Please enter Monthly Income\"\n                                    }}\n                                    validationResult={validationResult}\n                                    optionalParams = {{style:{width: 118}}}\n                                />\n                            </Form.Group>\n                        </div>\n\n                        <div className=\"box center-box\" style={{width: 290, marginTop: 22}}>\n                            <label class=\"form-label\" style={{textAlign: \"center\", width: \"100%\", padding: 0}}>Do you have any other sources of income</label>\n                            <div className=\"radio-box center\">\n                                <Form.Group className=\"mb-18 radio-filed\">\n                                    <Input \n                                        id =\"yes\"\n                                        name=\"role\"\n                                        type=\"radio\"\n                                        className=\"radio-width\"\n                                        defaultValue=\"yes\"\n                                        // checked={staff.role && staff.role[0] == 'sales' ? true : null}\n                                    />\n                                    <label for=\"yes\" class=\"form-label \" id=\"yes-label\">Yes</label>  \n                                </Form.Group>\n                                <Form.Group className=\"mb-18 radio-filed\">\n                                    <Input \n                                        id =\"no\"\n                                        name=\"role\"\n                                        type=\"radio\"\n                                        className=\"radio-width\"\n                                        defaultValue=\"no\"\n                                        // checked={staff.role && staff.role[0] == 'dealer' ? true : null}\n                                    />\n                                    <label for=\"no\" class=\"form-label \" id=\"no-label\">No</label>\n                                </Form.Group>\n                            </div>\n                        </div>\n\n                        <div className=\"styled-row\">\n                            <Form.Group className=\"styled-column mb-18\">\n                                <Input\n                                    name=\"zip\"\n                                    type=\"text\"\n                                    // defaultValue={dealer.zip}\n                                    label=\"Source\"\n                                    defaultText=\"Source\"\n                                    maxLength={6}\n                                    required={true}\n                                    error={{\n                                        'empty': \"Please enter Source\"\n                                    }}\n                                    validationResult={validationResult}\n                                    optionalParams = {{style:{width: 204}}}\n                                />\n                            </Form.Group>\n                            <Form.Group className=\"styled-column mb-18\">\n                                <Input\n                                    name=\"zip\"\n                                    type=\"number\"\n                                    // defaultValue={dealer.zip}\n                                    label=\"Monthly Income\"\n                                    defaultText=\"Monthly Income\"\n                                    maxLength={6}\n                                    required={true}\n                                    error={{\n                                        'empty': \"Please enter Monthly Income\"\n                                    }}\n                                    validationResult={validationResult}\n                                    optionalParams = {{style:{width: 118}}}\n                                />\n                            </Form.Group>\n                        </div>\n                        \n                        <span className=\"divider\">\n                            <span className=\"title\">Co-applicant</span>\n                        </span>\n\n                        <Form.Group className=\"mb-18\">\n                            <Checkbox\n                                name=\"have_co_applicant\"\n                                type=\"checkbox\"\n                                theme=\"light-label\"\n                                label=\"Not currently employed\"\n                            />\n                        </Form.Group>\n\n                        <div className=\"styled-row\">\n                            <Form.Group className=\"styled-column mb-18\">\n                                <Input\n                                    name=\"zip\"\n                                    type=\"text\"\n                                    // defaultValue={dealer.zip}\n                                    label=\"Present Employer\"\n                                    defaultText=\"Present Employer\"\n                                    maxLength={6}\n                                    required={true}\n                                    error={{\n                                        'empty': \"Please enter Present Employer\"\n                                    }}\n                                    validationResult={validationResult}\n                                    optionalParams = {{style:{width: 241}}}\n                                />\n                            </Form.Group>\n                            <Form.Group className=\"styled-column mb-18\">\n                                <Input\n                                    name=\"zip\"\n                                    type=\"text\"\n                                    // defaultValue={dealer.zip}\n                                    label=\"Years There\"\n                                    defaultText=\"Years There\"\n                                    maxLength={6}\n                                    required={true}\n                                    error={{\n                                        'empty': \"Please enter Years There\"\n                                    }}\n                                    validationResult={validationResult}\n                                    optionalParams = {{style:{width: 87}}}\n                                />\n                            </Form.Group>\n                        </div>\n\n                        <Form.Group className=\"mb-18\">\n                            <Input\n                                name=\"first_name\"\n                                type=\"text\"\n                                // defaultValue={dealer.company_name}\n                                label=\"Job Title/Position\"\n                                defaultText=\"Job Title/Position\"\n                                required={true}\n                                error={{\n                                    'empty': \"Please enter Job Title/Position\"\n                                }}\n                                validationResult={validationResult}\n                            />\n                        </Form.Group>\n\n                        <div className=\"styled-row\">\n                            <Form.Group className=\"styled-column mb-18\">\n                                <Input\n                                    name=\"zip\"\n                                    type=\"text\"\n                                    // defaultValue={dealer.zip}\n                                    label=\"Employer's Phone Number\"\n                                    defaultText=\"Employer's Phone Number\"\n                                    maxLength={6}\n                                    required={true}\n                                    error={{\n                                        'empty': \"Please enter Employer's Phone Number\"\n                                    }}\n                                    validationResult={validationResult}\n                                    optionalParams = {{style:{width: 204}}}\n                                />\n                            </Form.Group>\n                            <Form.Group className=\"styled-column mb-18\">\n                                <Input\n                                    name=\"zip\"\n                                    type=\"number\"\n                                    // defaultValue={dealer.zip}\n                                    label=\"Monthly Income\"\n                                    defaultText=\"Monthly Income\"\n                                    maxLength={6}\n                                    required={true}\n                                    error={{\n                                        'empty': \"Please enter Monthly Income\"\n                                    }}\n                                    validationResult={validationResult}\n                                    optionalParams = {{style:{width: 118}}}\n                                />\n                            </Form.Group>\n                        </div>\n\n                        <div className=\"box center-box\" style={{width: 290, marginTop: 22}}>\n                            <label class=\"form-label\" style={{textAlign: \"center\", width: \"100%\", padding: 0}}>Do you have any other sources of income</label>\n                            <div className=\"radio-box center\">\n                                <Form.Group className=\"mb-18 radio-filed\">\n                                    <Input \n                                        id =\"yes\"\n                                        name=\"role\"\n                                        type=\"radio\"\n                                        className=\"radio-width\"\n                                        defaultValue=\"yes\"\n                                        // checked={staff.role && staff.role[0] == 'sales' ? true : null}\n                                    />\n                                    <label for=\"yes\" class=\"form-label \" id=\"yes-label\">Yes</label>  \n                                </Form.Group>\n                                <Form.Group className=\"mb-18 radio-filed\">\n                                    <Input \n                                        id =\"no\"\n                                        name=\"role\"\n                                        type=\"radio\"\n                                        className=\"radio-width\"\n                                        defaultValue=\"no\"\n                                        // checked={staff.role && staff.role[0] == 'dealer' ? true : null}\n                                    />\n                                    <label for=\"no\" class=\"form-label \" id=\"no-label\">No</label>\n                                </Form.Group>\n                            </div>\n                        </div>\n\n                        <div className=\"styled-row\">\n                            <Form.Group className=\"styled-column mb-18\">\n                                <Input\n                                    name=\"zip\"\n                                    type=\"text\"\n                                    // defaultValue={dealer.zip}\n                                    label=\"Source\"\n                                    defaultText=\"Source\"\n                                    maxLength={6}\n                                    required={true}\n                                    error={{\n                                        'empty': \"Please enter Source\"\n                                    }}\n                                    validationResult={validationResult}\n                                    optionalParams = {{style:{width: 204}}}\n                                />\n                            </Form.Group>\n                            <Form.Group className=\"styled-column mb-18\">\n                                <Input\n                                    name=\"zip\"\n                                    type=\"number\"\n                                    // defaultValue={dealer.zip}\n                                    label=\"Monthly Income\"\n                                    defaultText=\"Monthly Income\"\n                                    maxLength={6}\n                                    required={true}\n                                    error={{\n                                        'empty': \"Please enter Monthly Income\"\n                                    }}\n                                    validationResult={validationResult}\n                                    optionalParams = {{style:{width: 118}}}\n                                />\n                            </Form.Group>\n                        </div>\n                        \n                    </div>\n                </div>\n                <div className=\"footer-container\">\n                    <button className=\"secondary\" type=\"submit\">Next</button>\n                </div>\n            </form>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    dealer: state.admin.selectedDealer,\n    actionLoading: state.admin.actionLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n    addDealer: (history, data) => dispatch(addDealer(history, data)),\n    updateDealer: (history, data) => dispatch(updateDealer(history, data))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddDealer);"]},"metadata":{},"sourceType":"module"}