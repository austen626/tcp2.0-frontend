{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp2.0-frontend/src/screens/Sales/Reorder.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Modal, Tooltip, OverlayTrigger } from 'react-bootstrap';\nimport InputMask from 'react-input-mask';\nimport CustomerModalList from 'shared/CustomerModalList';\nimport SearchBox from 'shared/SearchBox';\nimport { message } from 'shared/constant';\nimport Header from '../../components/Sales/Header';\nimport Footer from '../../components/Sales/Footer';\nimport Header2 from '../../components/Sales/Header2';\nimport Checkbox from '../../components/Checkbox';\nimport { FormFieldsContainer, SearchFieldContainer } from './style';\nimport { states_info } from '../../assets/options';\nimport { IconHome } from '../../assets/images';\nimport { addProduct } from '../../redux/actions/customer';\nimport { changeCustomerContact, changeCustomer, clearCustomer, sendPrequalify, setReorderCustomerById, sendAll } from '../../redux/actions/customer';\nimport { searchCustomers } from '../../redux/actions/customers';\nimport Loader from 'shared/Loader';\n\nclass ReorderScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      validated: false,\n      sentModal: false,\n      nameSearch: '',\n      citySearch: '',\n      searchShow: false,\n      displayFields: false,\n      errorMessage: ''\n    };\n\n    this.changeState = data => {\n      this.props.changeCustomer(data);\n    };\n\n    this.changeFormState = (key, value, role = \"main\") => {\n      this.props.changeCustomerContact(key, value, role);\n    };\n\n    this.onSend = () => {\n      // this.props.sendPrequalify(this.props.customer);\n      const {\n        sendAll,\n        customer\n      } = this.props;\n      sendAll(customer, this.handleModalClose, 'reorder', this.props.history);\n      this.setState({\n        sentModal: true\n      });\n    };\n\n    this.onNext = () => {\n      if (this.props.customer.products.length === 0) {\n        this.props.addProduct();\n      }\n\n      this.props.history.replace('/product/0');\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        validated: true\n      });\n      const form = event.currentTarget;\n\n      if (form.checkValidity() === false) {\n        event.stopPropagation();\n      } else {\n        this.onNext();\n      }\n    };\n\n    this.handleModalClose = () => {\n      this.setState({\n        sentModal: false\n      });\n      const role = localStorage.getItem('role');\n\n      if (role && role.indexOf('dealer') !== -1) {\n        this.props.history.replace('/sales');\n      } else if (role && role.indexOf('sales') !== -1) {\n        this.props.history.replace('/');\n      } else {\n        this.props.history.replace('/');\n      }\n    };\n\n    this.onSameAddressChecked = app => {\n      this.changeFormState('street', app.street, 'co');\n      this.changeFormState('city', app.city, 'co');\n      this.changeFormState('state', app.state, 'co');\n      this.changeFormState('zip', app.zip, 'co');\n      this.changeFormState('cell_phone', app.cell_phone, 'co');\n    };\n\n    this.setSameEmailAddress = app => {\n      this.changeFormState('email', app.email, 'co');\n    };\n\n    this.renderApplicantForm = (app, role, mainData) => {\n      const {\n        same_address\n      } = this.props.customer.contact;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"group-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, \"PERSONAL INFORMATION\"), /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, role === \"main\" ? \"\" : \"Co-applicant \", \"Name\"), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"form-label-required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }\n      }, \"required\"), /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        value: app.name || '',\n        onChange: e => this.changeFormState(\"name\", e.target.value, role),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"group-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, \"Address\"), role === \"co\" && /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: same_address,\n        onChange: () => {\n          this.changeState({\n            same_address: !same_address\n          });\n\n          if (!same_address) {\n            this.setState({\n              same_address: !same_address\n            });\n            this.onSameAddressChecked(mainData);\n          }\n        },\n        label: \"Same Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, \"Street\"), /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        autoComplete: \"none\",\n        value: app.street || '',\n        onChange: e => this.changeFormState(\"street\", e.target.value, role),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      }, \"City\"), /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        autoComplete: \"none\",\n        value: app.city || '',\n        onChange: e => this.changeFormState(\"city\", e.target.value, role),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      }, \"State\"), /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        autoComplete: \"none\",\n        as: \"select\",\n        value: app.state || '',\n        onChange: e => this.changeFormState(\"state\", e.target.value, role),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }\n      }, (app.state === undefined || app.state === \"\") && /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }\n      }, \"Choose...\"), states_info.map(info => /*#__PURE__*/React.createElement(\"option\", {\n        key: info.abbreviation,\n        value: info.abbreviation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 29\n        }\n      }, info.name)))), /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }\n      }, \"ZIP Number\"), /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        autoComplete: \"none\",\n        type: \"text\",\n        value: app.zip || '',\n        pattern: \"^\\\\d{5}(?:[-\\\\s]\\\\d{4})?$\",\n        onChange: e => this.changeFormState(\"zip\", e.target.value, role),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }\n      }, \"Phone\"), /*#__PURE__*/React.createElement(InputMask, {\n        autoComplete: \"none\",\n        required: true,\n        className: \"form-control\",\n        pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\",\n        mask: \"999-999-9999\",\n        maskChar: \"\",\n        value: app.cell_phone || '',\n        onChange: e => this.changeFormState(\"cell_phone\", e.target.value, role),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }\n      })));\n    };\n\n    this.handleSearchClick = e => {\n      e.preventDefault();\n      const {\n        nameSearch,\n        citySearch\n      } = this.state;\n      const {\n        searchCustomers\n      } = this.props;\n\n      if (nameSearch === '') {\n        this.setState({\n          errorMessage: message.PROVIDE_NAME\n        });\n        return;\n      }\n\n      const body = {\n        name: nameSearch,\n        city: citySearch\n      };\n      searchCustomers(body);\n      this.setState({\n        searchShow: true\n      });\n    };\n\n    this.hideSearchBox = () => {\n      this.setState({\n        searchShow: false\n      });\n    };\n\n    this.hideFormFields = () => {\n      this.setState({\n        displayFields: false,\n        searchShow: true\n      });\n    };\n\n    this.handleSearchRowClick = async item => {\n      const {\n        setReorderCustomerById\n      } = this.props;\n      this.setState({\n        displayFields: true\n      });\n      setReorderCustomerById(item.Cifno, this.hideSearchBox, this.hideFormFields, \"reorder\");\n\n      if (this.props.customer.products.length === 0) {\n        this.props.addProduct();\n      }\n\n      this.props.history.replace('/product/0');\n    };\n\n    this.handleArrowBack = () => {\n      this.props.history.replace('/sales');\n    };\n  }\n\n  renderTooltip(props) {\n    return /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n      id: \"button-tooltip\"\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }), \"Cancel\");\n  }\n\n  render() {\n    const validated = this.state.validated;\n    const {\n      nameSearch,\n      searchShow,\n      citySearch,\n      displayFields,\n      errorMessage\n    } = this.state;\n    const {\n      customers\n    } = this.props;\n    const {\n      co_enabled,\n      main_app,\n      co_app,\n      co_complete,\n      co_separate\n    } = this.props.customer.contact;\n    const {\n      isSettingCustomerDetails,\n      isCustomerFormLoading\n    } = this.props.customer;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sales\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }, (isSettingCustomerDetails || isCustomerFormLoading) && /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 76\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: IconHome,\n      alt: \"home\",\n      className: \"icon-home\",\n      onClick: () => {\n        this.props.history.replace('/');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Header2, {\n      id: -1,\n      history: this.props.history,\n      displayBack: true,\n      handleArrowBack: this.handleArrowBack,\n      disableRowClick: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }\n    }), !displayFields && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SearchFieldContainer, {\n      className: \"container pb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SearchBox, {\n      nameSearch: nameSearch,\n      citySearch: citySearch,\n      nameChangeEvent: e => {\n        this.setState({\n          nameSearch: e.target.value,\n          errorMessage: ''\n        });\n      },\n      cityChangeEvent: e => {\n        this.setState({\n          citySearch: e.target.value,\n          errorMessage: ''\n        });\n      },\n      handleSearchClick: this.handleSearchClick,\n      errorMessage: errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 29\n      }\n    }))), displayFields && /*#__PURE__*/React.createElement(FormFieldsContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 33\n      }\n    }, this.renderApplicantForm(this.props.customer.contact.main_app, \"main\"), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: co_enabled,\n      onChange: () => {\n        if (co_enabled) {\n          this.changeState({\n            co_enabled: !co_enabled,\n            same_address: false,\n            co_street: '',\n            co_city: '',\n            co_state: '',\n            co_zip: ''\n          });\n        } else {\n          this.changeState({\n            co_enabled: !co_enabled\n          });\n        }\n      },\n      label: \"Add co-applicant\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 41\n      }\n    })), co_enabled && this.renderApplicantForm(this.props.customer.contact.co_app, \"co\", this.props.customer.contact.main_app), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 41\n      }\n    }, \"Applicant Email\"), /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"form-label-required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 41\n      }\n    }, \"required\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"none\",\n      pattern: \"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\",\n      type: \"email\",\n      value: main_app.email || '',\n      onChange: e => this.changeFormState(\"email\", e.target.value, 'main'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 41\n      }\n    })), co_enabled && /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: co_complete,\n      onChange: () => {\n        if (co_complete) {\n          this.changeState({\n            co_complete: !co_complete\n          });\n        } else {\n          this.changeState({\n            co_complete: !co_complete\n          });\n        }\n      },\n      label: \"Completing form for co-applicant.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 45\n      }\n    })), co_enabled && /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 41\n      }\n    }, \"Co-applicant Email\"), /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"form-label-required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 41\n      }\n    }, \"required\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"none\",\n      pattern: \"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\",\n      type: \"email\",\n      value: co_app.email || '',\n      onChange: e => this.changeFormState(\"email\", e.target.value, 'co'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 41\n      }\n    })), co_enabled && /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: co_separate,\n      onChange: () => {\n        if (co_separate) {\n          this.changeState({\n            co_separate: !co_separate\n          });\n        } else {\n          this.setSameEmailAddress(this.props.customer.contact.main_app);\n          this.changeState({\n            co_separate: !co_separate\n          });\n        }\n      },\n      label: \"Co-applicant does not have seprate email address.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 45\n      }\n    })))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 33\n      }\n    }, \"NEXT\")))), searchShow && /*#__PURE__*/React.createElement(CustomerModalList, {\n      customers: customers,\n      setCancel: this.hideSearchBox,\n      handleSearchRowClick: this.handleSearchRowClick,\n      reorderPage: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 25\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  customer: state.customer,\n  customers: state.customers\n});\n\nexport default connect(mapStateToProps, {\n  changeCustomerContact,\n  changeCustomer,\n  clearCustomer,\n  sendPrequalify,\n  searchCustomers,\n  setReorderCustomerById,\n  sendAll,\n  addProduct\n})(ReorderScreen);","map":{"version":3,"sources":["/home/freedom/Music/tcp2.0-frontend/src/screens/Sales/Reorder.js"],"names":["React","Component","connect","Button","Form","Modal","Tooltip","OverlayTrigger","InputMask","CustomerModalList","SearchBox","message","Header","Footer","Header2","Checkbox","FormFieldsContainer","SearchFieldContainer","states_info","IconHome","addProduct","changeCustomerContact","changeCustomer","clearCustomer","sendPrequalify","setReorderCustomerById","sendAll","searchCustomers","Loader","ReorderScreen","state","validated","sentModal","nameSearch","citySearch","searchShow","displayFields","errorMessage","changeState","data","props","changeFormState","key","value","role","onSend","customer","handleModalClose","history","setState","onNext","products","length","replace","handleSubmit","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","localStorage","getItem","indexOf","onSameAddressChecked","app","street","city","zip","cell_phone","setSameEmailAddress","email","renderApplicantForm","mainData","same_address","contact","name","e","target","undefined","map","info","abbreviation","handleSearchClick","PROVIDE_NAME","body","hideSearchBox","hideFormFields","handleSearchRowClick","item","Cifno","handleArrowBack","renderTooltip","render","customers","co_enabled","main_app","co_app","co_complete","co_separate","isSettingCustomerDetails","isCustomerFormLoading","co_street","co_city","co_state","co_zip","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Modal, Tooltip, OverlayTrigger } from 'react-bootstrap';\n\nimport InputMask from 'react-input-mask';\nimport CustomerModalList from 'shared/CustomerModalList';\nimport SearchBox from 'shared/SearchBox';\nimport { message } from 'shared/constant';\nimport Header from '../../components/Sales/Header';\nimport Footer from '../../components/Sales/Footer';\n\nimport Header2 from '../../components/Sales/Header2';\nimport Checkbox from '../../components/Checkbox';\n\nimport { FormFieldsContainer, SearchFieldContainer } from './style';\nimport { states_info } from '../../assets/options';\nimport { IconHome } from '../../assets/images';\n\nimport { addProduct } from '../../redux/actions/customer';\n\nimport { \n    changeCustomerContact, \n    changeCustomer, \n    clearCustomer, \n    sendPrequalify,\n    setReorderCustomerById,\n    sendAll\n} from '../../redux/actions/customer';\nimport { searchCustomers } from '../../redux/actions/customers';\nimport Loader from 'shared/Loader';\n\nclass ReorderScreen extends Component {\n\n    state = {\n        validated: false,\n        sentModal: false,\n        nameSearch: '',\n        citySearch: '',\n        searchShow: false,\n        displayFields: false,\n        errorMessage: ''\n    }\n\n    changeState = (data) => {\n        this.props.changeCustomer(data);\n    }\n\n    changeFormState = (key, value, role = \"main\") => {\n        this.props.changeCustomerContact(key, value, role);\n    }\n\n    onSend = () => {\n        // this.props.sendPrequalify(this.props.customer);\n        const { sendAll, customer } = this.props;\n        sendAll(customer, this.handleModalClose, 'reorder', this.props.history);\n        this.setState({ sentModal: true });\n    }\n\n    onNext = () => {\n        if (this.props.customer.products.length === 0) {\n            this.props.addProduct();\n        }\n        this.props.history.replace('/product/0');\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({ validated: true });\n\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.stopPropagation();\n        } else {\n            this.onNext();\n        }\n    }\n\n    handleModalClose = () => {\n        this.setState({ sentModal: false });\n\n        const role = localStorage.getItem('role');\n\n        if(role && role.indexOf('dealer') !== -1) {\n            this.props.history.replace('/sales');\n        } else if(role && role.indexOf('sales') !== -1) {\n            this.props.history.replace('/');\n        } else {\n            this.props.history.replace('/');\n        }\n    }\n\n    onSameAddressChecked = (app) => {\n        this.changeFormState('street', app.street, 'co')\n        this.changeFormState('city', app.city, 'co')\n        this.changeFormState('state', app.state, 'co')\n        this.changeFormState('zip', app.zip, 'co')\n        this.changeFormState('cell_phone', app.cell_phone, 'co')\n    }\n\n    \n    setSameEmailAddress = (app) => {\n        this.changeFormState('email', app.email, 'co')\n    }\n\n    renderApplicantForm = (app, role, mainData) => {        \n        const { same_address }= this.props.customer.contact;\n        return (\n            <>\n                <Form.Label className=\"group-label\">PERSONAL INFORMATION</Form.Label>\n                    <Form.Group>\n                        <Form.Label>{ role === \"main\" ?  \"\" : \"Co-applicant \"}Name</Form.Label>\n                        <Form.Label className=\"form-label-required\">required</Form.Label>\n                        <Form.Control\n                            required\n                            value={app.name || ''}\n                            onChange={e => this.changeFormState(\"name\", e.target.value, role) }\n                        />\n                    </Form.Group>                \n                <Form.Label className=\"group-label\">Address</Form.Label>\n                {\n                    role === \"co\" && \n                    <Form.Group>\n                        <Checkbox\n                            checked={same_address}\n                            onChange={() => {\n                                this.changeState({same_address: !same_address });\n                                if (!same_address) {                                   \n                                    this.setState({same_address: !same_address});\n                                    this.onSameAddressChecked(mainData);\n                                }\n                            } }\n                            label=\"Same Address\"\n                        />\n                    </Form.Group>\n                }\n                <Form.Group>\n                    <Form.Label>Street</Form.Label>\n                    <Form.Control\n                        required\n                        autoComplete=\"none\"\n                        value={app.street || ''}\n                        onChange={e => this.changeFormState(\"street\", e.target.value, role) }\n                    />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        autoComplete=\"none\"\n                        value={app.city || ''}\n                        onChange={e => this.changeFormState(\"city\", e.target.value, role) }\n                    />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>State</Form.Label>\n                    <Form.Control\n                        required\n                        autoComplete=\"none\"\n                        as=\"select\"\n                        value={app.state || ''}\n                        onChange={e => this.changeFormState(\"state\", e.target.value, role) }\n                    >\n                        { (app.state === undefined || app.state === \"\") && (\n                            <option value=\"\">Choose...</option>\n                        )}\n                        { states_info.map(info => (\n                            <option key={info.abbreviation} value={info.abbreviation}>{info.name}</option>\n                        )) }\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>ZIP Number</Form.Label>\n                    <Form.Control\n                        required\n                        autoComplete=\"none\"\n                        type=\"text\"\n                        value={app.zip || ''}\n                        pattern=\"^\\d{5}(?:[-\\s]\\d{4})?$\"\n                        onChange={e => this.changeFormState(\"zip\", e.target.value, role) }\n                    />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Phone</Form.Label>\n                    <InputMask\n                        autoComplete=\"none\"\n                        required\n                        className=\"form-control\"\n                        pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n                        mask=\"999-999-9999\"\n                        maskChar=\"\"\n                        value={app.cell_phone || ''}\n                        onChange={e => this.changeFormState(\"cell_phone\", e.target.value, role)}\n                    />\n                </Form.Group>               \n            </>\n        )\n    }\n\n    handleSearchClick = (e) => {\n        e.preventDefault();\n        const { nameSearch, citySearch } = this.state;\n        const { searchCustomers } = this.props;\n        if(nameSearch === '') {\n            this.setState({\n                errorMessage: message.PROVIDE_NAME\n            })\n            return;\n        }\n        const body = {\n            name: nameSearch,\n            city: citySearch\n        }\n        searchCustomers(body);\n        this.setState({ searchShow: true });\n    }\n\n    hideSearchBox = () => {\n        this.setState({\n            searchShow: false\n        })\n    }\n\n    hideFormFields = () => {\n        this.setState({\n            displayFields: false,\n            searchShow: true\n        })\n    }\n\n    handleSearchRowClick = async (item) => {\n        const { setReorderCustomerById } = this.props\n        this.setState({\n            displayFields: true\n        })\n        setReorderCustomerById(item.Cifno, this.hideSearchBox, this.hideFormFields, \"reorder\");\n        if (this.props.customer.products.length === 0) {\n            this.props.addProduct();\n        }\n        this.props.history.replace('/product/0');\n    }\n\n    renderTooltip(props){\n        return  <Tooltip id=\"button-tooltip\" {...props}>\n        Cancel\n      </Tooltip>\n    }\n\n    handleArrowBack = () => {\n        this.props.history.replace('/sales');\n    }\n   \n    render() {\n        const validated = this.state.validated;\n        const { nameSearch, searchShow, citySearch, displayFields, errorMessage } = this.state;\n        const { customers } = this.props;\n        const { co_enabled, main_app, co_app, co_complete, co_separate } = this.props.customer.contact;\n        const { isSettingCustomerDetails, isCustomerFormLoading } = this.props.customer;\n        return (\n            <div className=\"sales\">\n                {\n                    (isSettingCustomerDetails || isCustomerFormLoading) && <Loader />\n                }\n                <Header history={this.props.history}>\n                    <img src={IconHome} alt=\"home\" className=\"icon-home\" onClick={() => {this.props.history.replace('/');}} />\n                </Header>\n                \n                <Header2\n                    id={-1}\n                    history={this.props.history}               \n                    displayBack\n                    handleArrowBack={ this.handleArrowBack }\n                    disableRowClick\n                />\n                {/* <Modal show={this.state.sentModal} onHide={this.handleModalClose}>\n                    <Modal.Header closeButton></Modal.Header>\n                    <Modal.Body>Forms have been sent successfully.</Modal.Body>\n                    <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={this.handleModalClose}>\n                        Close\n                    </Button>\n                    </Modal.Footer>\n                </Modal> */}\n                {\n                    !displayFields &&   \n                    <div className=\"main\">    \n                                     \n                        <SearchFieldContainer className=\"container pb-0\">                                         \n                            <SearchBox \n                                nameSearch={ nameSearch }\n                                citySearch={ citySearch }\n                                nameChangeEvent={ (e) => {\n                                    this.setState({ \n                                        nameSearch: e.target.value,\n                                        errorMessage: ''\n                                    })\n                                } }\n                                cityChangeEvent={ (e) => {\n                                    this.setState({ \n                                        citySearch: e.target.value,\n                                        errorMessage: ''\n                                    })\n                                }}\n                                handleSearchClick={ this.handleSearchClick}\n                                errorMessage={ errorMessage } />\n                        </SearchFieldContainer>\n                       \n                    </div>\n                }   \n              \n                {\n                displayFields &&   \n                    <FormFieldsContainer> \n                        <Form noValidate validated={validated} onSubmit={this.handleSubmit}>\n                            <div className=\"main\">                            \n                                <div className=\"container\">                           \n                                    \n                                    { this.renderApplicantForm(this.props.customer.contact.main_app, \"main\") }\n                                    <Form.Group>\n                                        <Checkbox\n                                            checked={co_enabled}\n                                            onChange={() => {\n                                                if (co_enabled) {\n                                                    this.changeState({\n                                                        co_enabled: !co_enabled,\n                                                        same_address: false,\n                                                        co_street: '',\n                                                        co_city: '',\n                                                        co_state: '',\n                                                        co_zip: ''\n                                                    });\n                                                } else {\n                                                    this.changeState({co_enabled: !co_enabled});\n                                                }\n                                            }}\n                                            label=\"Add co-applicant\"\n                                        />\n                                    </Form.Group>\n                                    { co_enabled && this.renderApplicantForm(this.props.customer.contact.co_app, \"co\", this.props.customer.contact.main_app) }\n                                    <Form.Group>\n                                        <Form.Label>Applicant Email</Form.Label>\n                                        <Form.Label className=\"form-label-required\">required</Form.Label>\n                                        <Form.Control\n                                            required\n                                            autoComplete=\"none\"\n                                            pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n                                            type=\"email\"\n                                            value={main_app.email || ''}\n                                            onChange={e => this.changeFormState(\"email\", e.target.value, 'main') }\n                                        />\n                                    </Form.Group>\n                                    {\n                                    co_enabled && \n                                        <Form.Group>\n                                            <Checkbox\n                                                checked={co_complete}\n                                                onChange={() => {\n                                                    if (co_complete) {\n                                                        this.changeState({\n                                                            co_complete: !co_complete,\n                                                        });\n                                                    } else {\n                                                        this.changeState({co_complete: !co_complete});\n                                                    }\n                                                }}\n                                                label=\"Completing form for co-applicant.\"\n                                        />\n                                        </Form.Group>\n                                    }\n                                    {\n                                    co_enabled && \n                                    <Form.Group>\n                                        <Form.Label>Co-applicant Email</Form.Label>\n                                        <Form.Label className=\"form-label-required\">required</Form.Label>\n                                        <Form.Control\n                                            required\n                                            autoComplete=\"none\"\n                                            pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n                                            type=\"email\"\n                                            value={co_app.email || ''}\n                                            onChange={e => this.changeFormState(\"email\", e.target.value, 'co') }\n                                        />\n                                    </Form.Group>\n                                }\n                                {\n                                    co_enabled && \n                                        <Form.Group>\n                                            <Checkbox\n                                                checked={co_separate}\n                                                onChange={() => {\n                                                    if (co_separate) {\n                                                        this.changeState({\n                                                            co_separate: !co_separate,\n                                                        });\n                                                    } else {\n                                                        this.setSameEmailAddress(this.props.customer.contact.main_app)\n                                                        this.changeState({co_separate: !co_separate});\n                                                    }\n                                                }}\n                                                label=\"Co-applicant does not have seprate email address.\"\n                                        />\n                                        </Form.Group>\n                                    }\n                                </div>\n                            </div>\n                            <Footer>\n                                <Button type=\"submit\" className=\"button\">NEXT</Button>\n                            </Footer>\n                        </Form>                      \n                    </FormFieldsContainer>\n                }\n                {\n                    searchShow && \n                        <CustomerModalList\n                        customers={ customers }\n                        setCancel={ this.hideSearchBox }\n                        handleSearchRowClick={ this.handleSearchRowClick}\n                        reorderPage={ false } />\n                }                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    customer: state.customer,\n    customers: state.customers,\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        changeCustomerContact,\n        changeCustomer,\n        clearCustomer,\n        sendPrequalify,\n        searchCustomers,\n        setReorderCustomerById,\n        sendAll,\n        addProduct\n    }\n)(ReorderScreen);"]},"metadata":{},"sourceType":"module"}