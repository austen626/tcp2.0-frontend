{"ast":null,"code":"import API from '../../api';\nimport { CHANGE_PASSWORD_START, CHANGE_PASSWORD_SUCCESS, CHANGE_PASSWORD_FAILURE } from './actionTypes';\nimport { message } from 'shared/constant';\nimport { pushNotification } from 'utils/notification'; // export function changePasswordRequest(action) {\n//     return async function(dispatch) {\n//         dispatch(changePasswordStart());\n//         const data = {\n//             currentPassword: action.currentPassword,\n//             newpassword: action.password\n//         };\n//         try {\n//             const response = API.post('/accounts/change-password', data);\n//             if(response) {\n//                 dispatch(changePasswordSuccess());\n//                 action.reset && action.reset()\n//                 // pushNotification(message.PASSWORD_CHANGE_SUCCESS, 'success', 'TOP_RIGHT', 3000);\n//                 console.log('work')\n//             }\n//         } catch(error) {\n//             pushNotification(error.response.data, 'error', 'TOP_RIGHT', 3000);            \n//             dispatch(changePasswordFail());\n//         }\n//     };\n// };\n\nexport function changePasswordRequest(action) {\n  return async function (dispatch) {\n    dispatch({\n      type: CHANGE_PASSWORD_START\n    });\n\n    try {\n      const data = {\n        currentpassword: action.currentPassword,\n        newpassword: action.password\n      };\n      const response = await API.post('/accounts/change-password', data);\n\n      if (response) {\n        dispatch({\n          type: CHANGE_PASSWORD_SUCCESS\n        });\n        action.reset && action.reset();\n        pushNotification(message.PASSWORD_CHANGE_SUCCESS, 'success', 'TOP_RIGHT', 3000);\n      }\n    } catch (error) {\n      if (error && error.response && error.response.data.error) {\n        const errValue = error.response.data.error;\n        pushNotification(errValue, 'error', 'TOP_RIGHT', 3000);\n      } else {\n        pushNotification(error.response.data, 'error', 'TOP_RIGHT', 3000);\n      }\n\n      dispatch({\n        type: CHANGE_PASSWORD_FAILURE\n      });\n    }\n  };\n}","map":{"version":3,"sources":["/home/freedom/Music/tcp2.0-frontend/src/redux/actions/changePassword.js"],"names":["API","CHANGE_PASSWORD_START","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILURE","message","pushNotification","changePasswordRequest","action","dispatch","type","data","currentpassword","currentPassword","newpassword","password","response","post","reset","PASSWORD_CHANGE_SUCCESS","error","errValue"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,WAAhB;AACA,SACIC,qBADJ,EAEIC,uBAFJ,EAGIC,uBAHJ,QAIO,eAJP;AAKA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,gBAAT,QAAiC,oBAAjC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,qBAAT,CAA+BC,MAA/B,EAAuC;AAC1C,SAAO,gBAAeC,QAAf,EAAyB;AAC5BA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER;AADD,KAAD,CAAR;;AAGA,QAAI;AACA,YAAMS,IAAI,GAAG;AACTC,QAAAA,eAAe,EAAEJ,MAAM,CAACK,eADf;AAETC,QAAAA,WAAW,EAAEN,MAAM,CAACO;AAFX,OAAb;AAIA,YAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAJ,CAAS,2BAAT,EAAsCN,IAAtC,CAAvB;;AACA,UAAGK,QAAH,EAAa;AACTP,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEP;AADD,SAAD,CAAR;AAGAK,QAAAA,MAAM,CAACU,KAAP,IAAgBV,MAAM,CAACU,KAAP,EAAhB;AACAZ,QAAAA,gBAAgB,CAACD,OAAO,CAACc,uBAAT,EAAkC,SAAlC,EAA6C,WAA7C,EAA0D,IAA1D,CAAhB;AACH;AACJ,KAbD,CAaE,OAAMC,KAAN,EAAa;AACP,UAAGA,KAAK,IAAIA,KAAK,CAACJ,QAAf,IAA2BI,KAAK,CAACJ,QAAN,CAAeL,IAAf,CAAoBS,KAAlD,EAAyD;AACrD,cAAMC,QAAQ,GAAGD,KAAK,CAACJ,QAAN,CAAeL,IAAf,CAAoBS,KAArC;AACAd,QAAAA,gBAAgB,CAACe,QAAD,EAAW,OAAX,EAAoB,WAApB,EAAiC,IAAjC,CAAhB;AACH,OAHD,MAGO;AACHf,QAAAA,gBAAgB,CAACc,KAAK,CAACJ,QAAN,CAAeL,IAAhB,EAAsB,OAAtB,EAA+B,WAA/B,EAA4C,IAA5C,CAAhB;AACH;;AACDF,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEN;AADD,OAAD,CAAR;AAGP;AAEJ,GA7BD;AA8BH","sourcesContent":["import API from '../../api';\nimport {\n    CHANGE_PASSWORD_START,\n    CHANGE_PASSWORD_SUCCESS,\n    CHANGE_PASSWORD_FAILURE,\n} from './actionTypes';\nimport { message } from 'shared/constant'\nimport { pushNotification } from 'utils/notification';\n\n// export function changePasswordRequest(action) {\n//     return async function(dispatch) {\n//         dispatch(changePasswordStart());\n//         const data = {\n//             currentPassword: action.currentPassword,\n//             newpassword: action.password\n//         };\n//         try {\n//             const response = API.post('/accounts/change-password', data);\n//             if(response) {\n//                 dispatch(changePasswordSuccess());\n//                 action.reset && action.reset()\n//                 // pushNotification(message.PASSWORD_CHANGE_SUCCESS, 'success', 'TOP_RIGHT', 3000);\n//                 console.log('work')\n//             }\n               \n//         } catch(error) {\n//             pushNotification(error.response.data, 'error', 'TOP_RIGHT', 3000);            \n//             dispatch(changePasswordFail());\n//         }\n//     };\n// };\n\nexport function changePasswordRequest(action) {\n    return async function(dispatch) {\n        dispatch({\n            type: CHANGE_PASSWORD_START\n        });\n        try {\n            const data = {\n                currentpassword: action.currentPassword,\n                newpassword: action.password\n            };\n            const response = await API.post('/accounts/change-password', data);\n            if(response) {\n                dispatch({\n                    type: CHANGE_PASSWORD_SUCCESS\n                });\n                action.reset && action.reset()\n                pushNotification(message.PASSWORD_CHANGE_SUCCESS, 'success', 'TOP_RIGHT', 3000);\n            }\n        } catch(error) {\n                if(error && error.response && error.response.data.error) {\n                    const errValue = error.response.data.error;\n                    pushNotification(errValue, 'error', 'TOP_RIGHT', 3000);    \n                } else {\n                    pushNotification(error.response.data, 'error', 'TOP_RIGHT', 3000)\n                }         \n                dispatch({\n                    type: CHANGE_PASSWORD_FAILURE\n                });\n        }\n       \n    }\n}\n"]},"metadata":{},"sourceType":"module"}