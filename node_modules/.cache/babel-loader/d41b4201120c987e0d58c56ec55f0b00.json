{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp2.0-frontend/src/screens/Admin/2.0/DealerManagemenet.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Row, Col } from 'react-bootstrap';\nimport Header, { HeaderLeft, HeaderCenter, HeaderRight } from '../../../components/Dealer/Header';\nimport { TCPLogo, IconAdd, IconArrowLeft, IconDeleteNew } from '../../../assets/images';\nimport { setSelectedDealerRequest, getDealersRequests } from '../../../redux/actions/admin';\nimport Loader from 'shared/Loader';\n\nfunction DealerManagements(props) {\n  const {\n    history,\n    dealers,\n    getDealersRequests,\n    setSelectedDealerRequest\n  } = props;\n  const [openDealerIndex, setOpenDealerIndex] = useState(null);\n  const [search, setSearch] = useState(null);\n  const [filterDealer, setFilterDealer] = useState([]);\n  useEffect(() => {\n    getDealersRequests();\n  }, []);\n  useEffect(() => {\n    if (search != \"\") {\n      let temp = dealers.data.filter(d => d.company_name.toLowerCase().includes(search.toLowerCase()));\n      setFilterDealer(temp);\n    } else {\n      setFilterDealer(dealers.data);\n    }\n  }, [search]);\n\n  const IconSmallArrowRight = props => {\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      className: `arrow-icon ${props.id === openDealerIndex && \"arrow-icon-active\"}`,\n      enableBackground: \"new 0 0 12 12\",\n      height: \"12px\",\n      id: \"Layer_1\",\n      version: \"1.1\",\n      viewBox: \"0 0 32 32\",\n      width: \"32px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M24.291,14.276L14.705,4.69c-0.878-0.878-2.317-0.878-3.195,0l-0.8,0.8c-0.878,0.877-0.878,2.316,0,3.194  L18.024,16l-7.315,7.315c-0.878,0.878-0.878,2.317,0,3.194l0.8,0.8c0.878,0.879,2.317,0.879,3.195,0l9.586-9.587  c0.472-0.471,0.682-1.103,0.647-1.723C24.973,15.38,24.763,14.748,24.291,14.276z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  const handleArrowBack = () => {\n    const {\n      history\n    } = this.props;\n    history.push('/');\n  };\n\n  const handleAddDealer = () => {\n    setSelectedDealerRequest({});\n    history.push(`/admin/addDealer`);\n  };\n\n  const handleEditDealer = item => {\n    history.push(`/admin/addDealer`);\n    setSelectedDealerRequest(item);\n  };\n\n  const searchDealer = key => {\n    this.setState({\n      seachKeyword: key\n    });\n\n    if (key != \"\") {\n      let tempFilterDealer = this.props.dealers.data.filter(item => item.company_name.toLowerCase().includes(key.toLowerCase()));\n      this.setState({\n        filterDealer: tempFilterDealer\n      });\n    } else {\n      this.setState({\n        filterDealer: this.props.dealers.data\n      });\n    }\n  };\n\n  const handleOpenDealerAction = dealer => {\n    if ('map' + dealer.id === openDealerIndex) {\n      setOpenDealerIndex(null);\n    } else {\n      setOpenDealerIndex('map' + dealer.id);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dealer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, dealers.loading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 36\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HeaderLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: IconArrowLeft,\n    onClick: this.handleArrowBack,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(HeaderCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"main-logo\",\n    src: TCPLogo,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(HeaderRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: IconAdd,\n    onClick: this.handleAddDealer,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: this.handleSearchClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    value: search,\n    placeholder: \"Search\",\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    style: {\n      \"display\": \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, filterDealer && filterDealer.map(item => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    key: item.id,\n    className: \"single-row\",\n    onClick: () => handleOpenDealerAction(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dealer-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dealer-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 41\n    }\n  }, item.company_name)), /*#__PURE__*/React.createElement(Col, {\n    xs: 6,\n    className: \"dealer-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(IconSmallArrowRight, {\n    id: 'map' + item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 47\n    }\n  })))), openDealerIndex === 'map' + item.id && /*#__PURE__*/React.createElement(Col, {\n    key: item.id,\n    xs: 12,\n    className: \"single-row-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: IconDeleteNew,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 45\n    }\n  }), \" Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"edit\",\n    onClick: () => handleEditDealer(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 41\n    }\n  }, \"Edit\"))))))));\n}\n\nconst mapStateToProps = state => ({\n  dealers: state.admin.dealers\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getDealersRequests: () => dispatch(getDealersRequests()),\n  setSelectedDealerRequest: () => dispatch(setSelectedDealerRequest())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DealerManagements);","map":{"version":3,"sources":["/home/freedom/Music/tcp2.0-frontend/src/screens/Admin/2.0/DealerManagemenet.js"],"names":["React","useState","useEffect","connect","Form","Row","Col","Header","HeaderLeft","HeaderCenter","HeaderRight","TCPLogo","IconAdd","IconArrowLeft","IconDeleteNew","setSelectedDealerRequest","getDealersRequests","Loader","DealerManagements","props","history","dealers","openDealerIndex","setOpenDealerIndex","search","setSearch","filterDealer","setFilterDealer","temp","data","filter","d","company_name","toLowerCase","includes","IconSmallArrowRight","id","handleArrowBack","push","handleAddDealer","handleEditDealer","item","searchDealer","key","setState","seachKeyword","tempFilterDealer","handleOpenDealerAction","dealer","loading","handleSearchClick","e","target","value","map","mapStateToProps","state","admin","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Row, Col } from 'react-bootstrap';\nimport Header, { HeaderLeft, HeaderCenter, HeaderRight } from '../../../components/Dealer/Header';\nimport { TCPLogo, IconAdd, IconArrowLeft, IconDeleteNew } from '../../../assets/images';\nimport { setSelectedDealerRequest, getDealersRequests } from '../../../redux/actions/admin';\nimport Loader from 'shared/Loader';\n\nfunction DealerManagements(props) {\n\n    const {\n        history,\n        dealers,\n        getDealersRequests,\n        setSelectedDealerRequest\n    } = props;\n\n    const [openDealerIndex, setOpenDealerIndex] = useState(null);\n    const [search, setSearch] = useState(null);\n    const [filterDealer, setFilterDealer] = useState([]);\n\n    useEffect(() => {\n        getDealersRequests();\n    }, []);\n\n    useEffect(() => {\n        if(search != \"\")\n        {\n            let temp = dealers.data.filter(d => d.company_name.toLowerCase().includes(search.toLowerCase()))\n            setFilterDealer(temp);\n        }\n        else\n        {\n            setFilterDealer(dealers.data);\n        }\n    }, [search]);\n\n    const IconSmallArrowRight = (props) => {\n        return (\n            <svg className={`arrow-icon ${props.id === openDealerIndex && \"arrow-icon-active\"}`} enableBackground=\"new 0 0 12 12\" height=\"12px\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 32 32\" width=\"32px\">\n                <path d=\"M24.291,14.276L14.705,4.69c-0.878-0.878-2.317-0.878-3.195,0l-0.8,0.8c-0.878,0.877-0.878,2.316,0,3.194  L18.024,16l-7.315,7.315c-0.878,0.878-0.878,2.317,0,3.194l0.8,0.8c0.878,0.879,2.317,0.879,3.195,0l9.586-9.587  c0.472-0.471,0.682-1.103,0.647-1.723C24.973,15.38,24.763,14.748,24.291,14.276z\"/>\n            </svg>\n        )\n    }\n\n\n    const handleArrowBack = () => {       \n        const { history } = this.props;\n        history.push('/')\n    }\n\n    const handleAddDealer = () => {       \n        setSelectedDealerRequest({})\n        history.push(`/admin/addDealer`);\n    }\n\n    const handleEditDealer = (item) => {       \n        history.push(`/admin/addDealer`);\n        setSelectedDealerRequest(item)\n    }\n\n    const searchDealer = (key) => {\n        this.setState({ seachKeyword: key });\n        if(key != \"\")\n        {\n            let tempFilterDealer = this.props.dealers.data.filter(item => item.company_name.toLowerCase().includes(key.toLowerCase()))\n            this.setState({ filterDealer: tempFilterDealer });\n        }\n        else\n        {\n            this.setState({ filterDealer: this.props.dealers.data });\n        }\n    }\n\n    const handleOpenDealerAction = (dealer) => {\n        if('map'+dealer.id === openDealerIndex) \n        {\n            setOpenDealerIndex(null)\n        } \n        else \n        {\n            setOpenDealerIndex('map'+dealer.id)\n        }\n    };\n\n\n    return (\n        <div className=\"dealer\">\n            {\n                dealers.loading && <Loader />\n            }\n            <Header>\n                <HeaderLeft>\n                    <img src={IconArrowLeft} onClick={this.handleArrowBack} alt=\"\"/>\n                </HeaderLeft>\n                <HeaderCenter>\n                    <div className=\"header-main\">\n                        <img className=\"main-logo\" src={TCPLogo} alt=\"\"/>\n                    </div>\n                </HeaderCenter>\n                <HeaderRight>\n                    <img src={IconAdd} onClick={this.handleAddDealer} alt=\"\"/>\n                </HeaderRight>\n            </Header>\n            <div className=\"search-header\">\n                <Form onSubmit={this.handleSearchClick}>     \n                    <div id=\"form\">\n                        <Form.Group className=\"mb-18\">\n                            <Form.Control value={search} placeholder=\"Search\" onChange={(e) => setSearch(e.target.value)}></Form.Control>\n                        </Form.Group>\n                    </div>\n                    <button type=\"submit\" style={{\"display\": \"none\"}} />\n                </Form>\n            </div>\n            <div className=\"main\">\n                    <div className=\"list\">\n                    { filterDealer && filterDealer.map((item) => (\n                        <>\n                            <Row key={item.id} className=\"single-row\" onClick={() => handleOpenDealerAction(item)}>\n                                <div className=\"dealer-row\">\n                                    <Col xs={6}>\n                                        <span className=\"dealer-name\">{item.company_name}</span>\n                                    </Col>\n                                    <Col xs={6} className=\"dealer-action\">\n                                        <span><IconSmallArrowRight id={ 'map'+item.id }/></span>\n                                    </Col>\n                                </div>\n                                { (openDealerIndex ===  ('map'+item.id)) && (\n                                    <Col key={item.id} xs={12} className=\"single-row-details\">\n                                        <button className=\"delete\">\n                                            <img src={IconDeleteNew} alt=\"\"/> Delete\n                                        </button>\n                                        <button className=\"edit\" onClick={() => handleEditDealer(item)}>Edit</button>\n                                    </Col>\n                                )}\n                            </Row>\n                        </>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n    \n}\n\nconst mapStateToProps = state => ({\n    dealers: state.admin.dealers\n});\n\nconst mapDispatchToProps = dispatch => ({\n    getDealersRequests: () => dispatch(getDealersRequests()),\n    setSelectedDealerRequest: () => dispatch(setSelectedDealerRequest())\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(DealerManagements);"]},"metadata":{},"sourceType":"module"}