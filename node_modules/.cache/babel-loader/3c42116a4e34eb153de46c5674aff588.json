{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp-frontend/src/screens/Sales/Contact.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport InputMask from 'react-input-mask';\nimport Header from '../../components/Sales/Header';\nimport Footer from '../../components/Sales/Footer';\nimport Header2 from '../../components/Sales/Header2';\nimport Checkbox from '../../components/Checkbox';\nimport { states_info } from '../../assets/options';\nimport { IconHome, IconArrowLeft } from '../../assets/images';\nimport { changeCustomerContact, changeCustomer, clearCustomer, addProduct, emailValidateRequest } from '../../redux/actions/customer';\n\nclass ContactScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      validated: false,\n      backModal: false\n    };\n\n    this.changeState = data => {\n      this.props.changeCustomer(data);\n    };\n\n    this.changeFormState = (key, value, role = \"main\") => {\n      this.props.changeCustomerContact(key, value, role);\n    };\n\n    this.onNext = () => {\n      // const { name } = this.props.customer.contact;\n      // if (name === '') {\n      //     return;\n      // }\n      if (this.props.customer.products.length === 0) {\n        this.props.addProduct();\n      }\n\n      this.props.history.replace('/product/0');\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        validated: true\n      });\n      const form = event.currentTarget;\n\n      if (form.checkValidity() === false) {\n        event.stopPropagation();\n      } else {\n        this.onNext();\n      }\n    };\n\n    this.handleModalClose = () => {\n      this.setState({\n        backModal: false\n      });\n    };\n\n    this.handleModalYes = () => {\n      this.props.clearCustomer();\n      this.props.history.replace('/');\n    };\n\n    this.onSameAddressChecked = app => {\n      this.changeFormState('street', app.street, 'co');\n      this.changeFormState('city', app.city, 'co');\n      this.changeFormState('state', app.state, 'co');\n      this.changeFormState('zip', app.zip, 'co');\n      this.changeFormState('cell_phone', app.cell_phone, 'co');\n    };\n\n    this.setSameEmailAddress = app => {\n      this.changeFormState('email', app.email, 'co');\n    };\n\n    this.renderApplicantForm = (app, role, mainData) => {\n      const {\n        same_address\n      } = this.props.customer.contact;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"group-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, \"PERSONAL INFORMATION\"), /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }, role === \"main\" ? \"\" : \"Co-applicant \", \"Name\"), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"form-label-required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }\n      }, \"required\"), /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        autoComplete: \"none\",\n        value: app.name || '',\n        onChange: e => this.changeFormState(\"name\", e.target.value, role),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"group-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, \"Address\"), role === \"co\" && /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: same_address,\n        onChange: () => {\n          this.changeState({\n            same_address: !same_address\n          });\n\n          if (!same_address) {\n            this.setState({\n              same_address: !same_address\n            });\n            this.onSameAddressChecked(mainData);\n          }\n        },\n        label: \"Same Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, \"Street\"), /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        autoComplete: \"none\",\n        value: app.street || '',\n        onChange: e => this.changeFormState(\"street\", e.target.value, role),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      }, \"City\"), /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        autoComplete: \"none\",\n        value: app.city || '',\n        onChange: e => this.changeFormState(\"city\", e.target.value, role),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, \"State\"), /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        autoComplete: \"none\",\n        as: \"select\",\n        value: app.state || '',\n        onChange: e => {\n          this.changeFormState(\"state\", e.target.value, role);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }\n      }, (app.state === undefined || app.state === \"\") && /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }\n      }, \"Choose...\"), states_info.map(info => /*#__PURE__*/React.createElement(\"option\", {\n        key: info.abbreviation,\n        value: info.abbreviation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }\n      }, info.name)))), /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      }, \"ZIP Number\"), /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        autoComplete: \"none\",\n        type: \"text\",\n        value: app.zip || '',\n        pattern: \"^\\\\d{5}(?:[-\\\\s]\\\\d{4})?$\",\n        onChange: e => this.changeFormState(\"zip\", e.target.value, role),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }\n      }, \"Phone\"), /*#__PURE__*/React.createElement(InputMask, {\n        required: true,\n        autoComplete: \"none\",\n        className: \"form-control\",\n        pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\",\n        mask: \"999-999-9999\",\n        maskChar: \"\",\n        value: app.cell_phone || '',\n        onChange: e => this.changeFormState(\"cell_phone\", e.target.value, role),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }\n      })));\n    };\n\n    this.handleArrowBack = () => {\n      this.props.history.replace('/sales');\n    };\n  }\n\n  render() {\n    const {\n      emailValidateRequest\n    } = this.props;\n    const validated = this.state.validated;\n    const {\n      co_enabled,\n      co_complete,\n      co_separate,\n      main_app,\n      co_app\n    } = this.props.customer.contact;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sales\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.backModal,\n      onHide: this.handleModalClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }, \"Returning to the Start Screen will cause you to lose all progress on this customer.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    }, \"Do you wish to continue?\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleModalClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.handleModalYes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }\n    }, \"Yes\"))), /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: this.handleSubmit,\n      autoComplete: \"nope\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: IconArrowLeft,\n      className: \"customhome-arrow\",\n      onClick: this.handleArrowBack,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: IconHome,\n      alt: \"home\",\n      className: \"icon-home\",\n      onClick: () => this.setState({\n        backModal: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Header2, {\n      id: -1,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    }, this.renderApplicantForm(this.props.customer.contact.main_app, \"main\"), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: co_enabled,\n      onChange: () => {\n        if (co_enabled) {\n          this.changeState({\n            co_enabled: !co_enabled,\n            same_address: false,\n            co_street: '',\n            co_city: '',\n            co_state: '',\n            co_zip: ''\n          });\n        } else {\n          this.changeState({\n            co_enabled: !co_enabled\n          });\n        }\n      },\n      label: \"Add co-applicant\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 33\n      }\n    })), co_enabled && this.renderApplicantForm(this.props.customer.contact.co_app, \"co\", this.props.customer.contact.main_app), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 33\n      }\n    }, \"Applicant Email\"), /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"form-label-required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 33\n      }\n    }, \"required\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      onBlur: () => emailValidateRequest({\n        email: main_app.email\n      }),\n      autoComplete: \"none\",\n      pattern: \"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\",\n      type: \"email\",\n      value: main_app.email || '',\n      onChange: e => this.changeFormState(\"email\", e.target.value, 'main'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 33\n      }\n    })), co_enabled && /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: co_complete,\n      onChange: () => {\n        if (co_complete) {\n          this.changeState({\n            co_complete: !co_complete\n          });\n        } else {\n          this.changeState({\n            co_complete: !co_complete\n          });\n        }\n      },\n      label: \"Completing form for co-applicant.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 37\n      }\n    })), co_enabled && /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 33\n      }\n    }, \"Co-applicant Email\"), /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"form-label-required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 33\n      }\n    }, \"required\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      onBlur: () => emailValidateRequest({\n        email: co_app.email\n      }),\n      autoComplete: \"none\",\n      pattern: \"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\",\n      type: \"email\",\n      value: co_app.email || '',\n      onChange: e => this.changeFormState(\"email\", e.target.value, 'co'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 33\n      }\n    })), co_enabled && /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: co_separate,\n      onChange: () => {\n        if (co_separate) {\n          this.changeState({\n            co_separate: !co_separate\n          });\n        } else {\n          this.setSameEmailAddress(this.props.customer.contact.main_app);\n          this.changeState({\n            co_separate: !co_separate\n          });\n        }\n      },\n      label: \"Co-applicant does not have separate email address.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 25\n      }\n    }, \"NEXT\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  customer: state.customer\n});\n\nexport default connect(mapStateToProps, {\n  changeCustomerContact,\n  changeCustomer,\n  clearCustomer,\n  addProduct,\n  emailValidateRequest\n})(ContactScreen);","map":{"version":3,"sources":["/home/freedom/Music/tcp-frontend/src/screens/Sales/Contact.js"],"names":["React","Component","connect","Button","Form","Modal","InputMask","Header","Footer","Header2","Checkbox","states_info","IconHome","IconArrowLeft","changeCustomerContact","changeCustomer","clearCustomer","addProduct","emailValidateRequest","ContactScreen","state","validated","backModal","changeState","data","props","changeFormState","key","value","role","onNext","customer","products","length","history","replace","handleSubmit","event","preventDefault","setState","form","currentTarget","checkValidity","stopPropagation","handleModalClose","handleModalYes","onSameAddressChecked","app","street","city","zip","cell_phone","setSameEmailAddress","email","renderApplicantForm","mainData","same_address","contact","name","e","target","undefined","map","info","abbreviation","handleArrowBack","render","co_enabled","co_complete","co_separate","main_app","co_app","co_street","co_city","co_state","co_zip","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Modal } from 'react-bootstrap';\n\nimport InputMask from 'react-input-mask';\n\nimport Header from '../../components/Sales/Header';\nimport Footer from '../../components/Sales/Footer';\n\nimport Header2 from '../../components/Sales/Header2';\nimport Checkbox from '../../components/Checkbox';\n\nimport { states_info } from '../../assets/options';\nimport { IconHome, IconArrowLeft } from '../../assets/images';\n\nimport { \n    changeCustomerContact, \n    changeCustomer, \n    clearCustomer, \n    addProduct,\n    emailValidateRequest\n} from '../../redux/actions/customer';\n\nclass ContactScreen extends Component {\n\n    state = {\n        validated: false,\n        backModal: false\n    }\n\n    changeState = (data) => {\n        this.props.changeCustomer(data);\n    }\n\n    changeFormState = (key, value, role = \"main\") => {\n        this.props.changeCustomerContact(key, value, role);\n    }\n\n    onNext = () => {\n        // const { name } = this.props.customer.contact;\n        // if (name === '') {\n        //     return;\n        // }\n        if (this.props.customer.products.length === 0) {\n            this.props.addProduct();\n        }\n        this.props.history.replace('/product/0');\n        \n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({ validated: true });\n\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.stopPropagation();\n        } else {\n            this.onNext();\n        }\n    }\n\n    handleModalClose = () => {\n        this.setState({ backModal: false });\n    }\n\n    handleModalYes = () => {\n        this.props.clearCustomer();\n        this.props.history.replace('/');\n    }\n\n    onSameAddressChecked = (app) => {\n        this.changeFormState('street', app.street, 'co')\n        this.changeFormState('city', app.city, 'co')\n        this.changeFormState('state', app.state, 'co')\n        this.changeFormState('zip', app.zip, 'co')\n        this.changeFormState('cell_phone', app.cell_phone, 'co')\n    }\n\n    \n    setSameEmailAddress = (app) => {\n        this.changeFormState('email', app.email, 'co')\n    }\n    renderApplicantForm = (app, role, mainData) => {\n        const { same_address }= this.props.customer.contact;\n        return (\n            <>\n                <Form.Label className=\"group-label\">PERSONAL INFORMATION</Form.Label>\n                <Form.Group>\n                    <Form.Label>{ role === \"main\" ?  \"\" : \"Co-applicant \"}Name</Form.Label>\n                    <Form.Label className=\"form-label-required\">required</Form.Label>\n                    <Form.Control\n                        required\n                        autoComplete=\"none\"\n                        value={app.name || ''}\n                        onChange={e => this.changeFormState(\"name\", e.target.value, role) }\n                    />\n                </Form.Group>                \n                <Form.Label className=\"group-label\">Address</Form.Label>\n                {\n                    role === \"co\" && \n                    <Form.Group>\n                        <Checkbox\n                            checked={same_address}\n                            onChange={() => {\n                                this.changeState({same_address: !same_address });\n                                if (!same_address) {                                   \n                                    this.setState({same_address: !same_address});\n                                    this.onSameAddressChecked(mainData);\n                                }\n                            } }\n                            label=\"Same Address\"\n                        />\n                    </Form.Group>\n                }\n                <Form.Group>\n                    <Form.Label>Street</Form.Label>\n                    <Form.Control\n                        required\n                        autoComplete=\"none\"\n                        value={app.street || ''}\n                        onChange={e => this.changeFormState(\"street\", e.target.value, role) }\n                    />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        autoComplete=\"none\"\n                        value={app.city || ''}\n                        onChange={e => this.changeFormState(\"city\", e.target.value, role) }\n                    />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>State</Form.Label>\n                    <Form.Control\n                        required\n                        autoComplete=\"none\"\n                        as=\"select\"\n                        value={app.state || ''}\n                        onChange={e => {\n                            this.changeFormState(\"state\", e.target.value, role);\n                                              \n                        } }\n                    >\n                        { (app.state === undefined || app.state === \"\") && (\n                            <option value=\"\">Choose...</option>\n                        )}\n                        { states_info.map(info => (\n                            <option key={info.abbreviation} value={info.abbreviation}>{info.name}</option>\n                        )) }\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>ZIP Number</Form.Label>\n                    <Form.Control\n                        required\n                        autoComplete=\"none\"\n                        type=\"text\"\n                        value={app.zip || ''}\n                        pattern=\"^\\d{5}(?:[-\\s]\\d{4})?$\"\n                        onChange={e => this.changeFormState(\"zip\", e.target.value, role) }\n                    />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Phone</Form.Label>\n                    <InputMask\n                        required\n                        autoComplete=\"none\"\n                        className=\"form-control\"\n                        pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n                        mask=\"999-999-9999\"\n                        maskChar=\"\"\n                        value={app.cell_phone || ''}\n                        onChange={e => this.changeFormState(\"cell_phone\", e.target.value, role)}\n                    />\n                </Form.Group>               \n            </>\n        )\n    }\n\n    handleArrowBack = () => {\n        this.props.history.replace('/sales');\n    }\n    render() {\n        const { emailValidateRequest } = this.props;\n        const validated = this.state.validated;\n        const {\n            co_enabled, co_complete, co_separate, main_app, co_app\n        } = this.props.customer.contact;\n        return (\n            <div className=\"sales\">\n                <Modal show={this.state.backModal} onHide={this.handleModalClose}>\n                    <Modal.Header closeButton></Modal.Header>\n                    <Modal.Body>\n                        <p>Returning to the Start Screen will cause you to lose all progress on this customer.</p>\n                        <p>Do you wish to continue?</p>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleModalClose}>\n                            No\n                        </Button>\n                        <Button variant=\"primary\" onClick={this.handleModalYes}>\n                            Yes\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n                <Form noValidate validated={validated} onSubmit={this.handleSubmit}  autoComplete=\"nope\">\n                    <Header history={this.props.history}>\n                        <img src={IconArrowLeft} className=\"customhome-arrow\" onClick={this.handleArrowBack} alt=\"\" />\n                        <img src={IconHome} alt=\"home\" className=\"icon-home\" onClick={() => this.setState({ backModal: true })} />\n                    </Header>\n                    <div className=\"main\">\n                        <Header2\n                            id={-1}\n                            history={this.props.history}\n                        />                         \n                        <div className=\"container\">                           \n                            \n                            { this.renderApplicantForm(this.props.customer.contact.main_app, \"main\") }\n                            <Form.Group>\n                                <Checkbox\n                                    checked={co_enabled}\n                                    onChange={() => {\n                                        if (co_enabled) {\n                                            this.changeState({\n                                                co_enabled: !co_enabled,\n                                                same_address: false,\n                                                co_street: '',\n                                                co_city: '',\n                                                co_state: '',\n                                                co_zip: ''\n                                            });\n                                        } else {\n                                            this.changeState({co_enabled: !co_enabled});\n                                        }\n                                    }}\n                                    label=\"Add co-applicant\"\n                                />\n                            </Form.Group>\n                            { co_enabled && this.renderApplicantForm(this.props.customer.contact.co_app, \"co\", this.props.customer.contact.main_app) }\n                            <Form.Group>\n                                <Form.Label>Applicant Email</Form.Label>\n                                <Form.Label className=\"form-label-required\">required</Form.Label>\n                                <Form.Control\n                                    required\n                                    onBlur= { () => emailValidateRequest({ email: main_app.email }) }\n                                    autoComplete=\"none\"\n                                    pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n                                    type=\"email\"\n                                    value={main_app.email || ''}\n                                    onChange={e => this.changeFormState(\"email\", e.target.value, 'main') }\n                                />\n                            </Form.Group>\n                            {\n                              co_enabled && \n                                <Form.Group>\n                                    <Checkbox\n                                        checked={co_complete}\n                                        onChange={() => {\n                                            if (co_complete) {\n                                                this.changeState({\n                                                    co_complete: !co_complete,\n                                                });\n                                            } else {\n                                                this.changeState({co_complete: !co_complete});\n                                            }\n                                        }}\n                                        label=\"Completing form for co-applicant.\"\n                                />\n                                </Form.Group>\n                            }\n                            {\n                              co_enabled && \n                              <Form.Group>\n                                <Form.Label>Co-applicant Email</Form.Label>\n                                <Form.Label className=\"form-label-required\">required</Form.Label>\n                                <Form.Control\n                                    required\n                                    onBlur= { () => emailValidateRequest({ email: co_app.email }) }\n                                    autoComplete=\"none\"\n                                    pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n                                    type=\"email\"\n                                    value={co_app.email || ''}\n                                    onChange={e => this.changeFormState(\"email\", e.target.value, 'co') }\n                                />\n                            </Form.Group>\n                          }\n                          {\n                              co_enabled && \n                                <Form.Group>\n                                    <Checkbox\n                                        checked={co_separate}\n                                        onChange={() => {\n                                            if (co_separate) {\n                                                this.changeState({\n                                                    co_separate: !co_separate,\n                                                });\n                                            } else {\n                                                this.setSameEmailAddress(this.props.customer.contact.main_app)\n                                                this.changeState({co_separate: !co_separate});\n                                            }\n                                        }}\n                                        label=\"Co-applicant does not have separate email address.\"\n                                />\n                                </Form.Group>\n                            }\n                        </div>\n                    </div>\n                    <Footer>\n                        <Button type=\"submit\" className=\"button\">NEXT</Button>\n                    </Footer>\n                </Form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    customer: state.customer\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        changeCustomerContact,\n        changeCustomer,\n        clearCustomer,\n        addProduct,\n        emailValidateRequest\n    }\n)(ContactScreen);"]},"metadata":{},"sourceType":"module"}