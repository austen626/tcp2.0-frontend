{"ast":null,"code":"import API from '../../api';\nimport { pushNotification } from 'utils/notification';\nimport { message } from 'shared/constant';\nimport { SET_REORDER_CUSTOMER, SET_REORDER_CUSTOMER_SUCCESS, SET_REORDER_CUSTOMER_FAILED, SET_CUSTOMER_FORM, SET_CUSTOMER_FORM_SUCCESS, SET_CUSTOMER_FORM_FAILED } from './actionTypes';\nexport const CLEAR_CUSTOMER = \"CLEAR_CUSTOMER\";\nexport const CHANGE_CONTACT = \"CHANGE_CUSTOMER\";\nexport const ADD_PRODUCT = \"ADD_PRODUCT\";\nexport const CHANGE_PRODUCT = \"CHANGE_PRODUCT\";\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";\nexport const ADD_EXITING_PRODUCT = \"ADD_EXITING_PRODUCT\";\nexport const EMAIL_VALIDATE_REQUEST = \"EMAIL_VALIDATE_REQUEST\";\nexport const EMAIL_VALIDATE_SUCCESS = \"EMAIL_VALIDATE_SUCCESS\";\nexport const EMAIL_VALIDATE_FAILED = \"EMAIL_VALIDATE_FAILED\";\nexport const SET_RESENT_SUCCESS = 'SET_RESENT_SUCCESS';\nexport function clearCustomer() {\n  return async function (dispatch) {\n    dispatch({\n      type: CLEAR_CUSTOMER\n    });\n  };\n}\nexport function changeCustomer(data) {\n  return async function (dispatch) {\n    dispatch({\n      type: CHANGE_CONTACT,\n      payload: data\n    });\n  };\n}\nexport function changeCustomerContact(key, value, role) {\n  return async function (dispatch) {\n    dispatch({\n      type: CHANGE_CONTACT,\n      payload: {\n        key,\n        value,\n        role\n      }\n    });\n  };\n}\nexport function addProduct() {\n  return async function (dispatch) {\n    dispatch({\n      type: ADD_PRODUCT\n    });\n  };\n}\nexport function changeProduct(id, data) {\n  return async function (dispatch) {\n    dispatch({\n      type: CHANGE_PRODUCT,\n      payload: {\n        id,\n        data\n      }\n    });\n  };\n}\nexport function addExistingProduct(data) {\n  return async function (dispatch) {\n    dispatch({\n      type: ADD_EXITING_PRODUCT,\n      payload: data\n    });\n  };\n}\nexport function removeProduct(id = -1) {\n  return async function (dispatch) {\n    dispatch({\n      type: REMOVE_PRODUCT,\n      payload: {\n        id\n      }\n    });\n  };\n}\nexport function sendAll(body, handleModalClose, type, history, action) {\n  return async function (dispatch) {\n    // const response = await API.post('/exp/customer', body);\n    dispatch({\n      type: SET_CUSTOMER_FORM\n    });\n\n    try {\n      let url = '/sales/send-signature';\n\n      if (type && type === \"pre-order\") {\n        url = '/sales/sendpreapproval';\n      }\n\n      body.contact[\"name\"] = body.contact.main_app.name || \"\";\n      body.contact[\"street\"] = body.contact.main_app.street || \"\";\n      body.contact[\"city\"] = body.contact.main_app.city || \"\";\n      body.contact[\"state\"] = body.contact.main_app.state || \"\";\n      body.contact[\"zip\"] = body.contact.main_app.zip || \"\";\n      body.contact[\"phone\"] = body.contact.main_app.cell_phone || \"\";\n      body.contact[\"email\"] = body.contact.main_app.email || \"\";\n      body.contact[\"co_name\"] = body.contact.co_app.name || \"\";\n      body.contact[\"co_street\"] = body.contact.co_app.street || \"\";\n      body.contact[\"co_city\"] = body.contact.co_app.city || \"\";\n      body.contact[\"co_state\"] = body.contact.co_app.state || \"\";\n      body.contact[\"co_zip\"] = body.contact.co_app.zip || \"\";\n      body.contact[\"co_phone\"] = body.contact.co_app.cell_phone || \"\";\n      body.contact[\"co_email\"] = body.contact.co_app.email || \"\";\n      const response = await API.post(url, body);\n\n      if (response) {\n        dispatch({\n          type: SET_CUSTOMER_FORM_SUCCESS\n        });\n        handleModalClose && handleModalClose();\n\n        switch (type) {\n          case \"pre-order\":\n            history.push('/');\n            pushNotification(message.REQUEST_SUBMISSION_SUCCESS, 'success', 'TOP_RIGHT', 3000);\n            break;\n\n          case \"reorder\":\n            history.push(`/customer/${body.contact.existing_customer_id}`);\n            break;\n\n          case \"new-customer\":\n            // history.push('/');\n            // pushNotification(message.FORM_SUBMISSION_SUCCESS, 'success', 'TOP_RIGHT', 3000);\n            action && action.sentFirstTimeTrue && action.sentFirstTimeTrue(); // action && action.changeCustomer && dispatch(action.changeCustomer({ sent: true }));                      \n\n            break;\n\n          default:\n            pushNotification(message.FORM_SUBMISSION_SUCCESS, 'success', 'TOP_RIGHT', 3000);\n            break;\n        }\n      }\n    } catch (error) {\n      pushNotification(error.response, 'error', 'TOP_RIGHT', 3000);\n      dispatch({\n        type: SET_CUSTOMER_FORM_FAILED\n      });\n    }\n  };\n}\nexport function sendPrequalify(body) {\n  return async function (dispatch) {\n    const response = await API.post('/sales/sendprequalify', body);\n  };\n}\nexport function setReorderCustomerById(id, hideSearchBox, hideFormFields, reorder, history) {\n  return async function (dispatch) {\n    dispatch({\n      type: SET_REORDER_CUSTOMER\n    });\n\n    try {\n      const body = {\n        cif_no: id\n      };\n      const apiUrl = '/sales/customer-cif'; // let response;\n      // if(reorder === \"reorder\") {\n      //     apiUrl = '/sales/customer/'+id;\n      //     response = await API.get(apiUrl);     \n      // } else {\n      //     response = await API.post(apiUrl, body);\n      // }\n\n      const response = await API.post(apiUrl, body);\n\n      if (response) {\n        var _responseData$co_cust;\n\n        const responseData = response.data;\n        const co_enabled = (responseData === null || responseData === void 0 ? void 0 : (_responseData$co_cust = responseData.co_customer) === null || _responseData$co_cust === void 0 ? void 0 : _responseData$co_cust.id) ? true : false;\n        dispatch(changeCustomer({\n          order_type: 2,\n          co_enabled: co_enabled,\n          reorder: reorder === \"reorder\" ? true : false,\n          co_complete: reorder === \"reorder\" ? true : false,\n          existing_customer_id: responseData.cifno,\n          main_app: {\n            cif_number: responseData.cifno,\n            nortridge_cif_number: responseData.nortridge_cif_number,\n            name: responseData.name + \" \" + responseData.lastname,\n            email: responseData.email,\n            cell_phone: responseData.cell_phone,\n            street: responseData.street,\n            city: responseData.city,\n            state: responseData.state,\n            zip: responseData.zip,\n            employer_phone: responseData.employer_phone || '',\n            monthly_income: responseData.monthly_income || '',\n            additional_income: responseData.additional_income || '',\n            dobY: '',\n            dobM: '',\n            dobD: '',\n            ssn: '',\n            dl: '',\n            nod: '',\n            home_phone: '',\n            yt1: '',\n            own_or_rent: '',\n            present_employer: '',\n            yt2: '',\n            job_title: '',\n            source: '',\n            landlord_holder: '',\n            monthly_rent_payment: ''\n          }\n        })); // if(reorder === \"reorder\") {\n        //     const co_enabled = responseData.co_customer.id ? true : false;\n        //     dispatch(changeCustomer({\n        //         order_type: 2,\n        //         co_enabled: co_enabled,\n        //         existing_customer_id: responseData.id,\n        //         reorder: true,\n        //         co_complete: true,\n        //         main_app: {\n        //             name: responseData.name,\n        //             email: responseData.email,\n        //             dobY: responseData.dobY,\n        //             dobM: responseData.dobM,\n        //             dobD: responseData.dobD,\n        //             ssn: responseData.ssn,\n        //             dl: responseData.dl,\n        //             nod: responseData.nod,\n        //             cell_phone: responseData.cell_phone,\n        //             home_phone: responseData.home_phone,\n        //             street: responseData.street,\n        //             city: responseData.city,\n        //             state: responseData.state,\n        //             zip: responseData.zip,\n        //             yt1: responseData.yt1,\n        //             own_or_rent: responseData.own_or_rent,\n        //             present_employer: responseData.present_employer,\n        //             yt2: responseData.yt2,\n        //             job_title: responseData.job_title,\n        //             employer_phone: responseData.employer_phone,\n        //             monthly_income: responseData.monthly_income,\n        //             additional_income: responseData.additional_income,\n        //             source: responseData.source,\n        //             landlord_holder: responseData.landlord_holder,\n        //             monthly_rent_payment: responseData.monthly_rent_payment\n        //         },\n        //         co_app: {\n        //             name: co_enabled ? responseData.co_customer.name : \"\",\n        //             email: co_enabled ? responseData.co_customer.email : \"\",\n        //             dobY: co_enabled ? responseData.co_customer.dobY : \"\",\n        //             dobM: co_enabled ? responseData.co_customer.dobM : \"\",\n        //             dobD: co_enabled ? responseData.co_customer.dobD : \"\",\n        //             ssn: co_enabled ? responseData.co_customer.ssn : \"\",\n        //             dl: co_enabled ? responseData.co_customer.dl : \"\",\n        //             nod: co_enabled ? responseData.co_customer.nod : \"\",\n        //             cell_phone: co_enabled ? responseData.co_customer.cell_phone : \"\",\n        //             home_phone: co_enabled ? responseData.co_customer.home_phone : \"\",\n        //             street: co_enabled ? responseData.co_customer.street : \"\",\n        //             city: co_enabled ? responseData.co_customer.city : \"\",\n        //             state: co_enabled ? responseData.co_customer.state : \"\",\n        //             zip: co_enabled ? responseData.co_customer.zip : \"\",\n        //             yt1: co_enabled ? responseData.co_customer.yt1 : \"\",\n        //             own_or_rent: co_enabled ? responseData.co_customer.own_or_rent : \"\",\n        //             present_employer: co_enabled ? responseData.co_customer.present_employer : \"\",\n        //             yt2: co_enabled ? responseData.co_customer.yt2 : \"\",\n        //             job_title: co_enabled ? responseData.co_customer.job_title : \"\",\n        //             employer_phone: co_enabled ? responseData.co_customer.employer_phone : \"\",\n        //             monthly_income: co_enabled ? responseData.co_customer.monthly_income : \"\",\n        //             additional_income: co_enabled ? responseData.co_customer.additional_income : \"\",\n        //             source: co_enabled ? responseData.co_customer.source : \"\",\n        //             landlord_holder: co_enabled ? responseData.co_customer.landlord_holder : \"\",\n        //             monthly_rent_payment: co_enabled ? responseData.co_customer.monthly_rent_payment : \"\"\n        //         },\n        //     }));\n        // } else {\n        //     dispatch(changeCustomer({\n        //         order_type: 2,                        \n        //         reorder: false,\n        //         main_app: {\n        //             cif_number: responseData.cifno,\n        //             name: responseData.name +\" \"+ responseData.lastname,\n        //             email: responseData.email,\n        //             cell_phone: responseData.cell_phone,\n        //             street: responseData.street,\n        //             city: responseData.city,\n        //             state: responseData.state,\n        //             zip: responseData.zip,\n        //             employer_phone: responseData.employer_phone,\n        //             monthly_income: responseData.monthly_income,\n        //             additional_income: responseData.additional_income,\n        //         },\n        //     }));\n        // }\n\n        hideSearchBox && hideSearchBox();\n        dispatch({\n          type: SET_REORDER_CUSTOMER_SUCCESS,\n          payload: response.data\n        });\n\n        if (reorder === \"reorder\") {\n          history && history.replace('customer');\n        }\n      }\n    } catch (error) {\n      if (error.response) {\n        hideSearchBox && hideFormFields();\n        pushNotification('Some thing went wrong', 'error', 'TOP_RIGHT', 3000);\n        dispatch({\n          type: SET_REORDER_CUSTOMER_FAILED\n        });\n      }\n    }\n  };\n}\nexport function emailValidateRequest(data) {\n  return async function (dispatch) {\n    dispatch({\n      type: EMAIL_VALIDATE_REQUEST\n    });\n\n    try {\n      const url = '/accounts/validate-email';\n      const body = {\n        email: data.email\n      };\n      const response = await API.post(url, body);\n\n      if (response) {\n        dispatch({\n          type: EMAIL_VALIDATE_SUCCESS,\n          data: !response.data.status\n        });\n      }\n    } catch (error) {\n      pushNotification(error.response, 'error', 'TOP_RIGHT', 3000);\n      dispatch({\n        type: EMAIL_VALIDATE_FAILED,\n        data: true\n      });\n    }\n  };\n}\nexport function emailCommonValidation(email) {\n  const url = '/accounts/validate-email';\n  const body = {\n    email: email\n  };\n  return async function (dispatch) {\n    const response = await API.post(url, body);\n  };\n}\nexport function resentSuccessRequest(data) {\n  return async function (dispatch) {\n    dispatch({\n      type: SET_RESENT_SUCCESS\n    });\n  };\n}","map":{"version":3,"sources":["/home/freedom/Music/tcp2.0-frontend/src/redux/actions/customer.js"],"names":["API","pushNotification","message","SET_REORDER_CUSTOMER","SET_REORDER_CUSTOMER_SUCCESS","SET_REORDER_CUSTOMER_FAILED","SET_CUSTOMER_FORM","SET_CUSTOMER_FORM_SUCCESS","SET_CUSTOMER_FORM_FAILED","CLEAR_CUSTOMER","CHANGE_CONTACT","ADD_PRODUCT","CHANGE_PRODUCT","REMOVE_PRODUCT","ADD_EXITING_PRODUCT","EMAIL_VALIDATE_REQUEST","EMAIL_VALIDATE_SUCCESS","EMAIL_VALIDATE_FAILED","SET_RESENT_SUCCESS","clearCustomer","dispatch","type","changeCustomer","data","payload","changeCustomerContact","key","value","role","addProduct","changeProduct","id","addExistingProduct","removeProduct","sendAll","body","handleModalClose","history","action","url","contact","main_app","name","street","city","state","zip","cell_phone","email","co_app","response","post","push","REQUEST_SUBMISSION_SUCCESS","existing_customer_id","sentFirstTimeTrue","FORM_SUBMISSION_SUCCESS","error","sendPrequalify","setReorderCustomerById","hideSearchBox","hideFormFields","reorder","cif_no","apiUrl","responseData","co_enabled","co_customer","order_type","co_complete","cifno","cif_number","nortridge_cif_number","lastname","employer_phone","monthly_income","additional_income","dobY","dobM","dobD","ssn","dl","nod","home_phone","yt1","own_or_rent","present_employer","yt2","job_title","source","landlord_holder","monthly_rent_payment","replace","emailValidateRequest","status","emailCommonValidation","resentSuccessRequest"],"mappings":"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","sourcesContent":["import API from '../../api';\nimport { pushNotification } from 'utils/notification';\nimport { message } from 'shared/constant';\nimport {\n    SET_REORDER_CUSTOMER,\n    SET_REORDER_CUSTOMER_SUCCESS,\n    SET_REORDER_CUSTOMER_FAILED,\n\n    SET_CUSTOMER_FORM,\n    SET_CUSTOMER_FORM_SUCCESS,\n    SET_CUSTOMER_FORM_FAILED,\n} from './actionTypes';\nexport const CLEAR_CUSTOMER = \"CLEAR_CUSTOMER\";\nexport const CHANGE_CONTACT = \"CHANGE_CUSTOMER\";\nexport const ADD_PRODUCT = \"ADD_PRODUCT\";\nexport const CHANGE_PRODUCT = \"CHANGE_PRODUCT\";\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";\nexport const ADD_EXITING_PRODUCT = \"ADD_EXITING_PRODUCT\";\n\nexport const EMAIL_VALIDATE_REQUEST = \"EMAIL_VALIDATE_REQUEST\";\nexport const EMAIL_VALIDATE_SUCCESS = \"EMAIL_VALIDATE_SUCCESS\";\nexport const EMAIL_VALIDATE_FAILED = \"EMAIL_VALIDATE_FAILED\";\n\nexport const SET_RESENT_SUCCESS = 'SET_RESENT_SUCCESS'\n\n\nexport function clearCustomer() {\n    return async function(dispatch) {\n        dispatch({\n            type: CLEAR_CUSTOMER\n        });\n    }\n}\n\nexport function changeCustomer(data) {\n    return async function(dispatch) {\n        dispatch({\n            type: CHANGE_CONTACT,\n            payload: data\n        });\n    }\n}\n\nexport function changeCustomerContact(key, value, role) {\n    return async function (dispatch) {\n        dispatch({\n            type: CHANGE_CONTACT,\n            payload: {\n                key,\n                value,\n                role\n            }\n        });\n    }\n}\n\nexport function addProduct() {\n    return async function(dispatch) {\n        dispatch({\n            type: ADD_PRODUCT\n        });\n    }\n}\n\nexport function changeProduct(id, data) {\n    return async function(dispatch) {\n        dispatch({\n            type: CHANGE_PRODUCT,\n            payload: {\n                id,\n                data\n            }\n        })\n    }\n}\n\nexport function addExistingProduct(data) {\n    return async function(dispatch) {\n        dispatch({\n            type: ADD_EXITING_PRODUCT,\n            payload: data\n        })\n    }\n}\n\nexport function removeProduct(id=-1) {\n    return async function(dispatch) {\n        dispatch({\n            type: REMOVE_PRODUCT,\n            payload: {\n                id\n            }\n        });\n    }\n}\n\nexport function sendAll(body, handleModalClose, type, history, action) {\n    return async function(dispatch) {\n        // const response = await API.post('/exp/customer', body);\n        dispatch({\n            type: SET_CUSTOMER_FORM\n        });\n        try {\n            let url = '/sales/send-signature';\n            if(type && type === \"pre-order\") {\n                url = '/sales/sendpreapproval'\n            }\n\n            body.contact[\"name\"] =   body.contact.main_app.name || \"\";\n            body.contact[\"street\"] =   body.contact.main_app.street || \"\";\n            body.contact[\"city\"] =   body.contact.main_app.city || \"\";\n            body.contact[\"state\"] =   body.contact.main_app.state || \"\";\n            body.contact[\"zip\"] =   body.contact.main_app.zip || \"\";\n            body.contact[\"phone\"] =   body.contact.main_app.cell_phone || \"\";\n            body.contact[\"email\"] =   body.contact.main_app.email || \"\";\n\n            body.contact[\"co_name\"] =   body.contact.co_app.name || \"\";\n            body.contact[\"co_street\"] =   body.contact.co_app.street || \"\";\n            body.contact[\"co_city\"] =   body.contact.co_app.city || \"\";\n            body.contact[\"co_state\"] =   body.contact.co_app.state || \"\";\n            body.contact[\"co_zip\"] =   body.contact.co_app.zip || \"\";\n            body.contact[\"co_phone\"] =   body.contact.co_app.cell_phone || \"\";\n            body.contact[\"co_email\"] =   body.contact.co_app.email || \"\";\n            const response = await API.post(url, body);\n            if(response) {\n                dispatch({\n                    type: SET_CUSTOMER_FORM_SUCCESS\n                });\n                handleModalClose && handleModalClose()\n                switch(type) {\n                    case \"pre-order\":\n                        history.push('/');\n                        pushNotification(message.REQUEST_SUBMISSION_SUCCESS, 'success', 'TOP_RIGHT', 3000);\n                        break;\n                    case \"reorder\":\n                        history.push(`/customer/${body.contact.existing_customer_id}`);\n                        break;\n                    case \"new-customer\":\n                        // history.push('/');\n                        // pushNotification(message.FORM_SUBMISSION_SUCCESS, 'success', 'TOP_RIGHT', 3000);\n                        action && action.sentFirstTimeTrue && action.sentFirstTimeTrue();\n                        // action && action.changeCustomer && dispatch(action.changeCustomer({ sent: true }));                      \n                        break;\n                    default:\n                        pushNotification(message.FORM_SUBMISSION_SUCCESS, 'success', 'TOP_RIGHT', 3000);\n                        break;\n                }\n            }\n        } catch(error) {\n            pushNotification(error.response, 'error', 'TOP_RIGHT', 3000);            \n            dispatch({\n                type: SET_CUSTOMER_FORM_FAILED\n            });\n        }\n       \n    }\n}\n\nexport function sendPrequalify(body) {\n    return async function(dispatch) {\n        const response = await API.post('/sales/sendprequalify', body);\n    }\n}\n\n\nexport function setReorderCustomerById(id, hideSearchBox, hideFormFields, reorder, history) {\n    return async function(dispatch) {\n        dispatch({\n            type: SET_REORDER_CUSTOMER\n        });\n        try {\n            const body = {\n                cif_no: id\n            }\n            const apiUrl = '/sales/customer-cif';\n            // let response;\n            // if(reorder === \"reorder\") {\n            //     apiUrl = '/sales/customer/'+id;\n            //     response = await API.get(apiUrl);     \n            // } else {\n            //     response = await API.post(apiUrl, body);\n            // }\n            const response = await API.post(apiUrl, body);\n            if(response) {\n                const responseData = response.data;\n                const co_enabled = responseData?.co_customer?.id ? true : false;\n                    dispatch(changeCustomer({\n                    order_type: 2, \n                    co_enabled: co_enabled,\n                    reorder: reorder === \"reorder\" ? true: false,\n                    co_complete: reorder === \"reorder\" ? true: false,\n                    existing_customer_id: responseData.cifno,\n                    main_app: {\n                        cif_number: responseData.cifno,\n                        nortridge_cif_number: responseData.nortridge_cif_number,\n                        name: responseData.name +\" \"+ responseData.lastname,\n                        email: responseData.email,\n                        cell_phone: responseData.cell_phone,\n                        street: responseData.street,\n                        city: responseData.city,\n                        state: responseData.state,\n                        zip: responseData.zip,\n                        employer_phone: responseData.employer_phone || '',\n                        monthly_income: responseData.monthly_income || '',\n                        additional_income: responseData.additional_income || '',\n                        dobY: '',\n                        dobM: '',\n                        dobD: '',\n                        ssn: '',\n                        dl: '',\n                        nod: '',\n                        home_phone: '',\n                        yt1: '',\n                        own_or_rent: '',\n                        present_employer: '',\n                        yt2: '',\n                        job_title: '',\n                        source: '',\n                        landlord_holder: '',\n                        monthly_rent_payment: ''\n                    },\n                }));\n                // if(reorder === \"reorder\") {\n                //     const co_enabled = responseData.co_customer.id ? true : false;\n                //     dispatch(changeCustomer({\n                //         order_type: 2,\n                //         co_enabled: co_enabled,\n                //         existing_customer_id: responseData.id,\n                //         reorder: true,\n                //         co_complete: true,\n                //         main_app: {\n                //             name: responseData.name,\n                //             email: responseData.email,\n                //             dobY: responseData.dobY,\n                //             dobM: responseData.dobM,\n                //             dobD: responseData.dobD,\n                //             ssn: responseData.ssn,\n                //             dl: responseData.dl,\n                //             nod: responseData.nod,\n                //             cell_phone: responseData.cell_phone,\n                //             home_phone: responseData.home_phone,\n                //             street: responseData.street,\n                //             city: responseData.city,\n                //             state: responseData.state,\n                //             zip: responseData.zip,\n                //             yt1: responseData.yt1,\n                //             own_or_rent: responseData.own_or_rent,\n                //             present_employer: responseData.present_employer,\n                //             yt2: responseData.yt2,\n                //             job_title: responseData.job_title,\n                //             employer_phone: responseData.employer_phone,\n                //             monthly_income: responseData.monthly_income,\n                //             additional_income: responseData.additional_income,\n                //             source: responseData.source,\n                //             landlord_holder: responseData.landlord_holder,\n                //             monthly_rent_payment: responseData.monthly_rent_payment\n                //         },\n                //         co_app: {\n                //             name: co_enabled ? responseData.co_customer.name : \"\",\n                //             email: co_enabled ? responseData.co_customer.email : \"\",\n                //             dobY: co_enabled ? responseData.co_customer.dobY : \"\",\n                //             dobM: co_enabled ? responseData.co_customer.dobM : \"\",\n                //             dobD: co_enabled ? responseData.co_customer.dobD : \"\",\n                //             ssn: co_enabled ? responseData.co_customer.ssn : \"\",\n                //             dl: co_enabled ? responseData.co_customer.dl : \"\",\n                //             nod: co_enabled ? responseData.co_customer.nod : \"\",\n                //             cell_phone: co_enabled ? responseData.co_customer.cell_phone : \"\",\n                //             home_phone: co_enabled ? responseData.co_customer.home_phone : \"\",\n                //             street: co_enabled ? responseData.co_customer.street : \"\",\n                //             city: co_enabled ? responseData.co_customer.city : \"\",\n                //             state: co_enabled ? responseData.co_customer.state : \"\",\n                //             zip: co_enabled ? responseData.co_customer.zip : \"\",\n                //             yt1: co_enabled ? responseData.co_customer.yt1 : \"\",\n                //             own_or_rent: co_enabled ? responseData.co_customer.own_or_rent : \"\",\n                //             present_employer: co_enabled ? responseData.co_customer.present_employer : \"\",\n                //             yt2: co_enabled ? responseData.co_customer.yt2 : \"\",\n                //             job_title: co_enabled ? responseData.co_customer.job_title : \"\",\n                //             employer_phone: co_enabled ? responseData.co_customer.employer_phone : \"\",\n                //             monthly_income: co_enabled ? responseData.co_customer.monthly_income : \"\",\n                //             additional_income: co_enabled ? responseData.co_customer.additional_income : \"\",\n                //             source: co_enabled ? responseData.co_customer.source : \"\",\n                //             landlord_holder: co_enabled ? responseData.co_customer.landlord_holder : \"\",\n                //             monthly_rent_payment: co_enabled ? responseData.co_customer.monthly_rent_payment : \"\"\n                //         },\n                //     }));\n\n                // } else {\n                //     dispatch(changeCustomer({\n                //         order_type: 2,                        \n                //         reorder: false,\n                //         main_app: {\n                //             cif_number: responseData.cifno,\n                //             name: responseData.name +\" \"+ responseData.lastname,\n                //             email: responseData.email,\n                //             cell_phone: responseData.cell_phone,\n                //             street: responseData.street,\n                //             city: responseData.city,\n                //             state: responseData.state,\n                //             zip: responseData.zip,\n                //             employer_phone: responseData.employer_phone,\n                //             monthly_income: responseData.monthly_income,\n                //             additional_income: responseData.additional_income,\n                //         },\n                //     }));\n                // }\n                \n                hideSearchBox && hideSearchBox();\n                dispatch({\n                    type: SET_REORDER_CUSTOMER_SUCCESS,\n                    payload: response.data\n                }); \n                if(reorder === \"reorder\") {\n                    history && history.replace('customer')\n                }\n            }\n            \n        } catch (error) {\n            if(error.response) {\n                hideSearchBox && hideFormFields()\n                pushNotification('Some thing went wrong', 'error', 'TOP_RIGHT', 3000);\n                dispatch({\n                    type: SET_REORDER_CUSTOMER_FAILED\n                })\n            }\n           \n        }\n    }\n}\n\nexport function emailValidateRequest(data) {\n    return async function(dispatch) {\n        dispatch({\n            type: EMAIL_VALIDATE_REQUEST\n        });\n        try {\n            const url = '/accounts/validate-email';\n            const body = {\n                email: data.email\n            }\n            const response = await API.post(url, body);\n            if(response) {\n                dispatch({\n                    type: EMAIL_VALIDATE_SUCCESS,\n                    data: !response.data.status\n                });\n            }\n        } catch(error) {\n            pushNotification(error.response, 'error', 'TOP_RIGHT', 3000);            \n            dispatch({\n                type: EMAIL_VALIDATE_FAILED,\n                data: true\n            });\n        }\n       \n    }\n}\n\nexport function emailCommonValidation(email) {\n    const url = '/accounts/validate-email';\n    const body = {\n        email: email\n    }\n    return async function(dispatch) {\n        const response = await API.post(url, body);\n    }\n}\n\nexport function resentSuccessRequest(data) {\n    return async function(dispatch) {\n        dispatch({\n            type: SET_RESENT_SUCCESS,\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}