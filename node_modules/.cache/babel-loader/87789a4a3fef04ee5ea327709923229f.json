{"ast":null,"code":"import { SEARCH_CUSTOMERS, SEARCH_CUSTOMERS_SUCCESS, SEARCH_CUSTOMERS_FAILED, GET_PREAPPROVAL_CUSTOMERS, GET_PREAPPROVAL_CUSTOMERS_SUCCESS, GET_PREAPPROVAL_CUSTOMERS_FAILED, GET_CUSTOMER, GET_CUSTOMER_SUCCESS, GET_CUSTOMER_FAILED, GET_PREAPPROVAL_COUNTS_REQUEST, GET_PREAPPROVAL_COUNTS_SUCCESS, GET_PREAPPROVAL_COUNTS_FAILED } from '../actions/customers';\nimport { GET_CUSTOMER_HISTORY_REQUEST, GET_CUSTOMER_HISTORY_SUCCESS, GET_CUSTOMER_HISTORY_FAILED, GET_CUSTOMER_PAYMENT_HISTORY_REQUEST, GET_CUSTOMER_PAYMENT_HISTORY_SUCCESS, GET_CUSTOMER_PAYMENT_HISTORY_FAILED, AGAIN_PREREQUEST_REQUEST, AGAIN_PREREQUEST_SUCCESS, AGAIN_PREREQUEST_FAILED } from '../actions/actionTypes';\nconst INIT_STATE = {\n  loading: false,\n  data: [],\n  preAprrovalCustomer: [],\n  selected: {\n    loading: false,\n    data: {}\n  },\n  approveCountLoading: false,\n  approveCount: 0,\n  historyData: [],\n  isHistoryLoading: false,\n  paymentHistoryData: [],\n  isPaymentHistoryLoading: false,\n  preRequestLoading: false\n};\nexport default function (state = INIT_STATE, action) {\n  switch (action.type) {\n    case SEARCH_CUSTOMERS:\n      return { ...state,\n        loading: true,\n        data: []\n      };\n\n    case SEARCH_CUSTOMERS_SUCCESS:\n      return { ...state,\n        loading: false,\n        data: action.payload\n      };\n\n    case SEARCH_CUSTOMERS_FAILED:\n      return { ...state,\n        loading: false,\n        data: []\n      };\n\n    case GET_CUSTOMER:\n      return { ...state,\n        selected: {\n          loading: true,\n          data: {}\n        }\n      };\n\n    case GET_CUSTOMER_SUCCESS:\n      return { ...state,\n        selected: {\n          loading: false,\n          data: action.payload\n        }\n      };\n\n    case GET_CUSTOMER_FAILED:\n      return { ...state,\n        selected: {\n          loading: false,\n          data: {}\n        }\n      };\n\n    case GET_PREAPPROVAL_CUSTOMERS:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_PREAPPROVAL_CUSTOMERS_SUCCESS:\n      // let preApprovalCustomer = action.payload.filter(app => app.preapproval.id !== 0);\n      return { ...state,\n        preAprrovalCustomer: action.payload,\n        loading: false\n      };\n\n    case GET_PREAPPROVAL_CUSTOMERS_FAILED:\n      return { ...state,\n        preAprrovalCustomer: action.payload,\n        loading: false\n      };\n\n    case GET_PREAPPROVAL_COUNTS_REQUEST:\n      return { ...state,\n        approveCountLoading: true\n      };\n\n    case GET_PREAPPROVAL_COUNTS_SUCCESS:\n      return { ...state,\n        approveCount: action.payload,\n        approveCountLoading: false\n      };\n\n    case GET_PREAPPROVAL_COUNTS_FAILED:\n      return { ...state,\n        preAprrovalCustomer: action.payload,\n        approveCountLoading: false\n      };\n\n    case GET_CUSTOMER_HISTORY_REQUEST:\n      return { ...state,\n        historyData: [],\n        isHistoryLoading: true\n      };\n\n    case GET_CUSTOMER_HISTORY_SUCCESS:\n      return { ...state,\n        historyData: action.data,\n        isHistoryLoading: false\n      };\n\n    case GET_CUSTOMER_HISTORY_FAILED:\n      return { ...state,\n        isHistoryLoading: false\n      };\n\n    case GET_CUSTOMER_PAYMENT_HISTORY_REQUEST:\n      return { ...state,\n        paymentHistoryData: [],\n        isPaymentHistoryLoading: true\n      };\n\n    case GET_CUSTOMER_PAYMENT_HISTORY_SUCCESS:\n      return { ...state,\n        paymentHistoryData: action.data,\n        isPaymentHistoryLoading: false\n      };\n\n    case GET_CUSTOMER_PAYMENT_HISTORY_FAILED:\n      return { ...state,\n        isPaymentHistoryLoading: false\n      };\n\n    case AGAIN_PREREQUEST_REQUEST:\n      return { ...state,\n        preRequestLoading: true\n      };\n\n    case AGAIN_PREREQUEST_SUCCESS:\n      return { ...state,\n        paymentHistoryData: action.data,\n        preRequestLoading: false\n      };\n\n    case AGAIN_PREREQUEST_FAILED:\n      return { ...state,\n        preRequestLoading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/freedom/Music/tcp-frontend/src/redux/reducers/customers.js"],"names":["SEARCH_CUSTOMERS","SEARCH_CUSTOMERS_SUCCESS","SEARCH_CUSTOMERS_FAILED","GET_PREAPPROVAL_CUSTOMERS","GET_PREAPPROVAL_CUSTOMERS_SUCCESS","GET_PREAPPROVAL_CUSTOMERS_FAILED","GET_CUSTOMER","GET_CUSTOMER_SUCCESS","GET_CUSTOMER_FAILED","GET_PREAPPROVAL_COUNTS_REQUEST","GET_PREAPPROVAL_COUNTS_SUCCESS","GET_PREAPPROVAL_COUNTS_FAILED","GET_CUSTOMER_HISTORY_REQUEST","GET_CUSTOMER_HISTORY_SUCCESS","GET_CUSTOMER_HISTORY_FAILED","GET_CUSTOMER_PAYMENT_HISTORY_REQUEST","GET_CUSTOMER_PAYMENT_HISTORY_SUCCESS","GET_CUSTOMER_PAYMENT_HISTORY_FAILED","AGAIN_PREREQUEST_REQUEST","AGAIN_PREREQUEST_SUCCESS","AGAIN_PREREQUEST_FAILED","INIT_STATE","loading","data","preAprrovalCustomer","selected","approveCountLoading","approveCount","historyData","isHistoryLoading","paymentHistoryData","isPaymentHistoryLoading","preRequestLoading","state","action","type","payload"],"mappings":"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","sourcesContent":["import {\n    SEARCH_CUSTOMERS,\n    SEARCH_CUSTOMERS_SUCCESS,\n    SEARCH_CUSTOMERS_FAILED,\n    GET_PREAPPROVAL_CUSTOMERS,\n    GET_PREAPPROVAL_CUSTOMERS_SUCCESS,\n    GET_PREAPPROVAL_CUSTOMERS_FAILED,\n    GET_CUSTOMER,\n    GET_CUSTOMER_SUCCESS,\n    GET_CUSTOMER_FAILED,\n    GET_PREAPPROVAL_COUNTS_REQUEST,\n    GET_PREAPPROVAL_COUNTS_SUCCESS,\n    GET_PREAPPROVAL_COUNTS_FAILED\n} from '../actions/customers';\nimport {    \n    GET_CUSTOMER_HISTORY_REQUEST,\n    GET_CUSTOMER_HISTORY_SUCCESS,\n    GET_CUSTOMER_HISTORY_FAILED,\n\n    GET_CUSTOMER_PAYMENT_HISTORY_REQUEST,\n    GET_CUSTOMER_PAYMENT_HISTORY_SUCCESS,\n    GET_CUSTOMER_PAYMENT_HISTORY_FAILED,\n\n    AGAIN_PREREQUEST_REQUEST,\n    AGAIN_PREREQUEST_SUCCESS,\n    AGAIN_PREREQUEST_FAILED\n} from '../actions/actionTypes';\n\nconst INIT_STATE = {\n    loading: false,\n    data: [],\n    preAprrovalCustomer: [],\n\n    selected: {\n        loading: false,\n        data: {}\n    },\n    approveCountLoading: false,\n    approveCount: 0,    \n    historyData: [],\n    isHistoryLoading: false,\n    paymentHistoryData: [],\n    isPaymentHistoryLoading: false,\n    preRequestLoading: false\n};\n\nexport default function(state = INIT_STATE, action){\n    switch (action.type) {\n        case SEARCH_CUSTOMERS:\n            return {\n                ...state,\n                loading: true,\n                data: []\n            }\n        case SEARCH_CUSTOMERS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                data: action.payload\n            }\n        case SEARCH_CUSTOMERS_FAILED:\n            return {\n                ...state,\n                loading: false,\n                data: []                \n            }\n        case GET_CUSTOMER:\n            return {\n                ...state,\n                selected: {\n                    loading: true,\n                    data: {}\n                }\n            }\n        case GET_CUSTOMER_SUCCESS:\n            return {\n                ...state,\n                selected: {\n                    loading: false,\n                    data: action.payload\n                }\n            }\n        case GET_CUSTOMER_FAILED:\n            return {\n                ...state,\n                selected: {\n                    loading: false,\n                    data: {}\n                }\n            }\n        case GET_PREAPPROVAL_CUSTOMERS:\n            return {\n                ...state,\n                loading: true\n            }\n        case GET_PREAPPROVAL_CUSTOMERS_SUCCESS:\n            // let preApprovalCustomer = action.payload.filter(app => app.preapproval.id !== 0);\n            return {\n                ...state,\n                preAprrovalCustomer: action.payload,\n                loading: false\n            }\n        case GET_PREAPPROVAL_CUSTOMERS_FAILED:\n            return {\n                ...state,\n                preAprrovalCustomer: action.payload,\n                loading: false\n            }\n            case GET_PREAPPROVAL_COUNTS_REQUEST:\n            return {\n                ...state,\n                approveCountLoading: true\n            }\n        case GET_PREAPPROVAL_COUNTS_SUCCESS:\n            return {\n                ...state,\n                approveCount: action.payload,\n                approveCountLoading: false\n            }\n        case GET_PREAPPROVAL_COUNTS_FAILED:\n            return {\n                ...state,\n                preAprrovalCustomer: action.payload,\n                approveCountLoading: false\n            }           \n\n        case GET_CUSTOMER_HISTORY_REQUEST:\n            return {\n                ...state,\n                    historyData: [],\n                    isHistoryLoading: true\n            };\n        case GET_CUSTOMER_HISTORY_SUCCESS:\n            return {\n                ...state,\n                historyData: action.data,\n                isHistoryLoading: false\n            };\n        case GET_CUSTOMER_HISTORY_FAILED:\n            return {\n                ...state,\n                isHistoryLoading: false\n            }; \n        case GET_CUSTOMER_PAYMENT_HISTORY_REQUEST:\n            return {\n                ...state,\n                    paymentHistoryData: [],\n                    isPaymentHistoryLoading: true\n            };\n        case GET_CUSTOMER_PAYMENT_HISTORY_SUCCESS:\n            return {\n                ...state,\n                paymentHistoryData: action.data,\n                isPaymentHistoryLoading: false\n            };\n        case GET_CUSTOMER_PAYMENT_HISTORY_FAILED:\n            return {\n                ...state,\n                isPaymentHistoryLoading: false\n            };  \n            case AGAIN_PREREQUEST_REQUEST:\n                return {\n                    ...state,\n                        preRequestLoading: true\n                };\n            case AGAIN_PREREQUEST_SUCCESS:\n                return {\n                    ...state,\n                    paymentHistoryData: action.data,\n                    preRequestLoading: false\n                };\n            case AGAIN_PREREQUEST_FAILED:\n                return {\n                    ...state,\n                    preRequestLoading: false\n                };  \n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}