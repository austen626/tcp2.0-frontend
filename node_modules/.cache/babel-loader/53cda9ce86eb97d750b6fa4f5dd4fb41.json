{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp-frontend/src/screens/Auth/Register.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Row, Col } from 'react-bootstrap';\nimport InputMask from 'react-input-mask';\nimport { register } from '../../redux/actions/auth';\nimport AuthContainer from '../../components/AuthContainer';\n\nclass RegisterScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      mobile: '',\n      password: '',\n      passwordConfirm: '',\n      passwordEye: true,\n      passwordConfirmEye: true,\n      validated: false,\n      passwordMismatch: false,\n      error: ''\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        password,\n        passwordConfirm\n      } = this.state;\n\n      if (password !== passwordConfirm) {\n        this.setState({\n          passwordMismatch: true\n        });\n        event.stopPropagation();\n        return;\n      }\n\n      this.setState({\n        validated: true,\n        passwordMismatch: false\n      });\n      const form = event.currentTarget;\n\n      if (form.checkValidity() === false) {\n        event.stopPropagation();\n      } else {\n        this.onConfirm();\n      }\n    };\n\n    this.onConfirm = async () => {\n      const {\n        email,\n        mobile,\n        password\n      } = this.state;\n      const result = await this.props.register({\n        email,\n        phone: mobile,\n        password\n      });\n\n      if (result.ok) {\n        this.props.history.push({\n          pathname: '/2fa',\n          state: result.data\n        });\n      } else {\n        this.setState({\n          error: result.error\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      email,\n      mobile,\n      password,\n      passwordConfirm,\n      passwordEye,\n      passwordConfirmEye,\n      validated,\n      passwordMismatch,\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(AuthContainer, {\n      title: \"USER REGISTRATION\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: this.handleSubmit,\n      className: \"wrapper register-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      pattern: \"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\",\n      className: \"input input-email\",\n      value: email,\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      isInvalid: this.state.invalidEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, \"Mobile Number\"), /*#__PURE__*/React.createElement(InputMask, {\n      required: true,\n      pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\",\n      className: \"input input-mobile form-control\",\n      mask: \"999-999-9999\",\n      maskChar: \"\",\n      value: mobile,\n      onChange: e => this.setState({\n        mobile: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      className: \"input input-password\",\n      type: passwordEye ? \"password\" : \"text\",\n      value: password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      isInvalid: this.state.invalidPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: passwordEye ? require('../../assets/images/eye_show.svg') : require('../../assets/images/eye_hide.svg'),\n      alt: \"logo\",\n      onClick: () => this.setState({\n        passwordEye: !this.state.passwordEye\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    }, \"Repeat Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      className: \"input input-password\",\n      type: passwordConfirmEye ? \"password\" : \"text\",\n      value: passwordConfirm,\n      onChange: e => this.setState({\n        passwordConfirm: e.target.value\n      }),\n      isInvalid: passwordMismatch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: passwordConfirmEye ? require('../../assets/images/eye_show.svg') : require('../../assets/images/eye_hide.svg'),\n      alt: \"logo\",\n      onClick: () => this.setState({\n        passwordConfirmEye: !this.state.passwordConfirmEye\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 33\n      }\n    }), passwordMismatch && /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      style: {\n        marginTop: -15,\n        marginBottom: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }, \"The password and repeat password mismatch\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, error)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"button-action mb-0\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, \"CONFIRM\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auth-actions text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }, \"Have already an account? \\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"cursor-pointer goBack\",\n      onClick: () => this.props.history.replace('login'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }, \"Login Here\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {\n  register\n})(RegisterScreen);","map":{"version":3,"sources":["/home/freedom/Music/tcp-frontend/src/screens/Auth/Register.js"],"names":["React","Component","connect","Button","Form","Row","Col","InputMask","register","AuthContainer","RegisterScreen","state","email","mobile","password","passwordConfirm","passwordEye","passwordConfirmEye","validated","passwordMismatch","error","handleSubmit","event","preventDefault","setState","stopPropagation","form","currentTarget","checkValidity","onConfirm","result","props","phone","ok","history","push","pathname","data","render","e","target","value","invalidEmail","invalidPassword","require","marginTop","marginBottom","replace","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Row, Col } from 'react-bootstrap';\n\nimport InputMask from 'react-input-mask';\n\nimport { register } from '../../redux/actions/auth';\n\nimport AuthContainer from '../../components/AuthContainer';\n\nclass RegisterScreen extends Component {\n    state = {\n        email: '',\n        mobile: '',\n        password: '',\n        passwordConfirm: '',\n        \n        passwordEye: true,\n        passwordConfirmEye: true,\n        \n        validated: false,\n        passwordMismatch: false,\n        error: ''\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        const { password, passwordConfirm } = this.state;\n\n        if (password !== passwordConfirm) {\n            this.setState({ passwordMismatch: true });\n            event.stopPropagation();\n            return;\n        }\n\n        this.setState({ validated: true, passwordMismatch: false });\n\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.stopPropagation();\n        } else {\n            this.onConfirm();\n        }\n    }\n\n    onConfirm = async () => {\n        const { email, mobile, password } = this.state;\n        const result = await this.props.register({\n            email,\n            phone: mobile,\n            password\n        });\n\n        if (result.ok) {\n            this.props.history.push({\n                pathname: '/2fa',\n                state: result.data\n            })\n        } else {\n            this.setState({ error: result.error });\n        }\n    }\n\n    render() {\n        const {\n            email, mobile, password, passwordConfirm,\n            passwordEye, passwordConfirmEye,\n            validated,  passwordMismatch, error } = this.state;\n        return (\n            <AuthContainer title=\"USER REGISTRATION\">\n                <Form noValidate validated={validated} onSubmit={this.handleSubmit} className=\"wrapper register-page\">\n                    <div className=\"inputs\">\n                        <Form.Group>\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                required\n                                pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n                                className=\"input input-email\"\n                                value={email}\n                                onChange={e => this.setState({ email: e.target.value }) }\n                                isInvalid={this.state.invalidEmail}\n                            />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Mobile Number</Form.Label>\n                            <InputMask\n                                required\n                                pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n                                className=\"input input-mobile form-control\"\n                                mask=\"999-999-9999\"\n                                maskChar=\"\"\n                                value={mobile}\n                                onChange={e => this.setState({ mobile: e.target.value })}\n                            />\n                        </Form.Group>\n                        \n                        <Form.Group>\n                            <Form.Label >Password</Form.Label>\n                            <div className=\"password\">\n                                <Form.Control\n                                    required\n                                    className=\"input input-password\"\n                                    type={passwordEye ? \"password\" : \"text\"}\n                                    value={password}\n                                    onChange={e => this.setState({ password: e.target.value }) }\n                                    isInvalid={this.state.invalidPassword}\n                                />\n                                <img\n                                    src={passwordEye ? require('../../assets/images/eye_show.svg') : require('../../assets/images/eye_hide.svg')}\n                                    alt=\"logo\"\n                                    onClick={() => this.setState({ passwordEye: !this.state.passwordEye })}\n                                />\n                            </div>\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label >Repeat Password</Form.Label>\n                            <div className=\"password\">\n                                <Form.Control\n                                    required\n                                    className=\"input input-password\"\n                                    type={passwordConfirmEye ? \"password\" : \"text\"}\n                                    value={passwordConfirm}\n                                    onChange={e => this.setState({ passwordConfirm: e.target.value }) }\n                                    isInvalid={passwordMismatch}\n                                />\n\n                                <img\n                                    src={passwordConfirmEye ? require('../../assets/images/eye_show.svg') : require('../../assets/images/eye_hide.svg')}\n                                    alt=\"logo\"\n                                    onClick={() => this.setState({ passwordConfirmEye: !this.state.passwordConfirmEye })}\n                                />\n\n                                { passwordMismatch && (\n                                    <Form.Control.Feedback type=\"invalid\" style={{ marginTop: -15, marginBottom: 15 }}>\n                                        The password and repeat password mismatch\n                                    </Form.Control.Feedback>\n                                ) }\n                            </div>\n                        </Form.Group>\n\n                        <div className=\"error\">\n                            { error }\n                        </div>\n                    </div>\n                    <div>\n                        <Button className=\"button-action mb-0\" type=\"submit\">CONFIRM</Button>\n                    </div>\n                    <div className=\"auth-actions text-center\">\n                        <p>Have already an account? &nbsp;\n                        <span className=\"cursor-pointer goBack\" onClick={() => this.props.history.replace('login')}>\n                            Login Here\n                        </span></p>\n                    </div> \n                </Form>\n            </AuthContainer>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        register\n    }\n)(RegisterScreen);"]},"metadata":{},"sourceType":"module"}