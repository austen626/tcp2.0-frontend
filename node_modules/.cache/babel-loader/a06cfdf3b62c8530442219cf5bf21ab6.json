{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp2.0-frontend/src/screens/Sales/2.0/fillApplicationBasicDetails.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport Header, { HeaderLeft, HeaderCenter, HeaderRight } from '../../../components/Dealer/Header';\nimport { TCPLogo, IconArrowLeft, IconContactAcitve } from '../../../assets/images';\nimport Input from '../../../components/commons/input';\nimport Dropdown from '../../../components/commons/dropdown';\nimport Loader from 'shared/Loader';\nimport Header2 from '../../../components/Header2';\nimport { getFromData } from '../../../components/commons/utility';\nimport { updateDealer, addDealer } from '../../../redux/actions/admin';\n\nfunction AddDealer(props) {\n  const {\n    history,\n    dealer,\n    addDealer,\n    updateDealer,\n    actionLoading,\n    dropdownList = [{\n      label: \"Alabama\",\n      value: \"Alabama\"\n    }, {\n      label: \"Alaska\",\n      value: \"Alaska\"\n    }, {\n      label: \"Arizona\",\n      value: \"Arizona\"\n    }, {\n      label: \"Arkansas\",\n      value: \"Arkansas\"\n    }, {\n      label: \"California\",\n      value: \"California\"\n    }, {\n      label: \"Colorado\",\n      value: \"Colorado\"\n    }, {\n      label: \"Connecticut\",\n      value: \"Connecticut\"\n    }, {\n      label: \"Delaware\",\n      value: \"Delaware\"\n    }, {\n      label: \"Florida\",\n      value: \"Florida\"\n    }, {\n      label: \"Georgia\",\n      value: \"Georgia\"\n    }, {\n      label: \"Idaho\",\n      value: \"Idaho\"\n    }, {\n      label: \"Hawaii\",\n      value: \"Hawaii\"\n    }, {\n      label: \"Illinois\",\n      value: \"Illinois\"\n    }, {\n      label: \"Indiana\",\n      value: \"Indiana\"\n    }, {\n      label: \"Iowa\",\n      value: \"Iowa\"\n    }, {\n      label: \"Kansas\",\n      value: \"Kansas\"\n    }, {\n      label: \"Kentucky\",\n      value: \"Kentucky\"\n    }, {\n      label: \"Louisiana\",\n      value: \"Louisiana\"\n    }, {\n      label: \"Maine\",\n      value: \"Maine\"\n    }, {\n      label: \"Maryland\",\n      value: \"Maryland\"\n    }, {\n      label: \"Massachusetts\",\n      value: \"Massachusetts\"\n    }, {\n      label: \"Michigan\",\n      value: \"Michigan\"\n    }, {\n      label: \"Minnesota\",\n      value: \"Minnesota\"\n    }, {\n      label: \"Mississippi\",\n      value: \"Mississippi\"\n    }, {\n      label: \"Missouri\",\n      value: \"Missouri\"\n    }, {\n      label: \"Montana\",\n      value: \"Montana\"\n    }, {\n      label: \"Nebraska\",\n      value: \"Nebraska\"\n    }, {\n      label: \"Nevada\",\n      value: \"Nevada\"\n    }, {\n      label: \"New Hampshire\",\n      value: \"New Hampshire\"\n    }, {\n      label: \"New Jersey\",\n      value: \"New Jersey\"\n    }, {\n      label: \"New Mexico\",\n      value: \"New Mexico\"\n    }, {\n      label: \"New York\",\n      value: \"New York\"\n    }, {\n      label: \"North Carolina\",\n      value: \"North Carolina\"\n    }, {\n      label: \"North Dakota\",\n      value: \"North Dakota\"\n    }, {\n      label: \"Ohio\",\n      value: \"Ohio\"\n    }, {\n      label: \"Oklahoma\",\n      value: \"Oklahoma\"\n    }, {\n      label: \"Oregon\",\n      value: \"Oregon\"\n    }, {\n      label: \"Pennsylvania\",\n      value: \"Pennsylvania\"\n    }, {\n      label: \"Rhode Island\",\n      value: \"Rhode Island\"\n    }, {\n      label: \"South Carolina\",\n      value: \"South Carolina\"\n    }, {\n      label: \"South Dakota\",\n      value: \"South Dakota\"\n    }, {\n      label: \"Tennessee\",\n      value: \"Tennessee\"\n    }, {\n      label: \"Texas\",\n      value: \"Texas\"\n    }, {\n      label: \"Utah\",\n      value: \"Utah\"\n    }, {\n      label: \"Vermont\",\n      value: \"Vermont\"\n    }, {\n      label: \"Virginia\",\n      value: \"Virginia\"\n    }, {\n      label: \"Washington\",\n      value: \"Washington\"\n    }, {\n      label: \"West Virginia\",\n      value: \"West Virginia\"\n    }, {\n      label: \"Wisconsin\",\n      value: \"Wisconsin\"\n    }, {\n      label: \"Wyoming\",\n      value: \"Wyoming\"\n    }]\n  } = props;\n  const [validationResult, setValidationResult] = useState(null);\n\n  const handleArrowBack = () => {};\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const formData = getFromData(evt);\n    setValidationResult(formData.validationResult); // if (!formData.validationResult) {\n    //     let data = formData.formData\n    //     if (dealer.id) {\n    //         data = { ...data, updated_email: data.email, updated_phone: data.phone }\n    //         updateDealer(history, data)\n    //     }\n    //     else {\n    //         addDealer(history, data)\n    //     }\n    // }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dealer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  }, actionLoading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HeaderLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: IconArrowLeft,\n    onClick: () => handleArrowBack(),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(HeaderCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"main-logo\",\n    src: TCPLogo,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(HeaderRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sub-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: IconContactAcitve,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 21\n    }\n  }, \"Applicant(s) Details\"))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, dealer.id && /*#__PURE__*/React.createElement(Input, {\n    name: \"id\",\n    type: \"hidden\",\n    value: dealer.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"styled-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"first_name\",\n    type: \"text\" // defaultValue={dealer.company_name}\n    ,\n    label: \"Applicant First Name\",\n    defaultText: \"Applicant First Name\",\n    required: true,\n    error: {\n      'empty': \"Please enter Applicant First Name\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"last_name\",\n    type: \"text\" // defaultValue={dealer.company_name}\n    ,\n    label: \"Applicant Last Name\",\n    defaultText: \"Applicant Last Name\",\n    required: true,\n    error: {\n      'empty': \"Please enter Applicant Last Name\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    type: \"email\",\n    regex: \"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\" // defaultValue={dealer.email}\n    ,\n    label: \"Email\",\n    defaultText: \"Email\",\n    required: true,\n    error: {\n      'invalid': \"Please enter valid Email address\",\n      'empty': \"Please enter Email Address\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"phone\",\n    type: \"text\" // defaultValue={dealer.phone}\n    ,\n    label: \"Phone\",\n    defaultText: \"999-999-9999\",\n    regex: \"[0-9]{10}\",\n    required: true,\n    error: {\n      'invalid': \"Please enter 10 digit number\",\n      'empty': \"Please enter Phone number\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"date_of_work\",\n    type: \"date\" // defaultValue={dealer.phone}\n    ,\n    label: \"Phone\",\n    defaultText: \"MM / DD / YYYY\",\n    required: true,\n    error: {\n      'empty': \"Please enter date of birth\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"ssn\",\n    type: \"text\" // defaultValue={dealer.company_name}\n    ,\n    label: \"SSN\",\n    defaultText: \"SSN\",\n    required: true,\n    error: {\n      'empty': \"Please enter ssn number\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"driver_license\",\n    type: \"text\" // defaultValue={dealer.company_name}\n    ,\n    label: \"Driver License Number\",\n    defaultText: \"Driver License Number\",\n    required: true,\n    error: {\n      'empty': \"Please enter Driver License Number\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 25\n    }\n  }, \"ADDRESS\"), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: dealer.id ? \"street\" : \"dealer_address_street\",\n    type: \"text\",\n    defaultValue: dealer.street,\n    label: \"Street\",\n    defaultText: \"Street\",\n    required: true,\n    error: {\n      'empty': \"Please enter Street\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: dealer.id ? \"city\" : \"dealer_address_city\",\n    type: \"text\",\n    defaultValue: dealer.city,\n    label: \"City\",\n    defaultText: \"City\",\n    required: true,\n    error: {\n      'empty': \"Please enter city\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    name: dealer.state ? \"state\" : \"dealer_address_state\",\n    type: \"dropdown\",\n    defaultValue: dealer.state ? dealer.state : '',\n    label: \"State\",\n    defaultText: \"State\",\n    required: true,\n    options: dropdownList,\n    error: {\n      'empty': \"Please enter state\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: dealer.id ? \"zip\" : \"dealer_address_zipcode\",\n    type: \"number\",\n    defaultValue: dealer.zip,\n    regex: \"[0-9]{6}\",\n    label: \"Zip Code\",\n    defaultText: \"Zip Code\",\n    maxLength: 6,\n    required: true,\n    error: {\n      'invalid': \"Please enter 6 digit number\",\n      'empty': \"Please enter zip code\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"secondary\",\n    onClick: () => handleArrowBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"secondary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 21\n    }\n  }, dealer.id ? 'Update' : 'Add'))));\n}\n\nconst mapStateToProps = state => ({\n  dealer: state.admin.selectedDealer,\n  actionLoading: state.admin.actionLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addDealer: (history, data) => dispatch(addDealer(history, data)),\n  updateDealer: (history, data) => dispatch(updateDealer(history, data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddDealer);","map":{"version":3,"sources":["/home/freedom/Music/tcp2.0-frontend/src/screens/Sales/2.0/fillApplicationBasicDetails.js"],"names":["React","useState","connect","Form","Header","HeaderLeft","HeaderCenter","HeaderRight","TCPLogo","IconArrowLeft","IconContactAcitve","Input","Dropdown","Loader","Header2","getFromData","updateDealer","addDealer","AddDealer","props","history","dealer","actionLoading","dropdownList","label","value","validationResult","setValidationResult","handleArrowBack","handleSubmit","evt","preventDefault","formData","e","id","street","city","state","zip","mapStateToProps","admin","selectedDealer","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport Header, { HeaderLeft, HeaderCenter, HeaderRight } from '../../../components/Dealer/Header';\nimport { TCPLogo, IconArrowLeft, IconContactAcitve } from '../../../assets/images';\nimport Input from '../../../components/commons/input';\nimport Dropdown from '../../../components/commons/dropdown';\nimport Loader from 'shared/Loader';\nimport Header2 from '../../../components/Header2';\n\nimport { getFromData } from '../../../components/commons/utility';\nimport { updateDealer, addDealer } from '../../../redux/actions/admin';\n\nfunction AddDealer(props) {\n\n    const {\n        history,\n        dealer,\n        addDealer,\n        updateDealer,\n        actionLoading,\n        dropdownList = [\n\n            {\n                label: \"Alabama\",\n                value: \"Alabama\"\n            },\n            {\n                label: \"Alaska\",\n                value: \"Alaska\"\n            },\n            {\n                label: \"Arizona\",\n                value: \"Arizona\"\n            },\n            {\n                label: \"Arkansas\",\n                value: \"Arkansas\"\n            },\n            {\n                label: \"California\",\n                value: \"California\"\n            },\n            {\n                label: \"Colorado\",\n                value: \"Colorado\"\n            },\n            {\n                label: \"Connecticut\",\n                value: \"Connecticut\"\n            },\n            {\n                label: \"Delaware\",\n                value: \"Delaware\"\n            },\n            {\n                label: \"Florida\",\n                value: \"Florida\"\n            },\n            {\n                label: \"Georgia\",\n                value: \"Georgia\"\n            },\n            {\n                label: \"Idaho\",\n                value: \"Idaho\"\n            },\n            {\n                label: \"Hawaii\",\n                value: \"Hawaii\"\n            },\n            {\n                label: \"Illinois\",\n                value: \"Illinois\"\n            },\n            {\n                label: \"Indiana\",\n                value: \"Indiana\"\n            },\n            {\n                label: \"Iowa\",\n                value: \"Iowa\"\n            },\n            {\n                label: \"Kansas\",\n                value: \"Kansas\"\n            },\n            {\n                label: \"Kentucky\",\n                value: \"Kentucky\"\n            },\n            {\n                label: \"Louisiana\",\n                value: \"Louisiana\"\n            },\n            {\n                label: \"Maine\",\n                value: \"Maine\"\n            },\n            {\n                label: \"Maryland\",\n                value: \"Maryland\"\n            },\n            {\n                label: \"Massachusetts\",\n                value: \"Massachusetts\"\n            },\n            {\n                label: \"Michigan\",\n                value: \"Michigan\"\n            },\n            {\n                label: \"Minnesota\",\n                value: \"Minnesota\"\n            },\n            {\n                label: \"Mississippi\",\n                value: \"Mississippi\"\n            },\n            {\n                label: \"Missouri\",\n                value: \"Missouri\"\n            },\n            {\n                label: \"Montana\",\n                value: \"Montana\"\n            },\n            {\n                label: \"Nebraska\",\n                value: \"Nebraska\"\n            },\n            {\n                label: \"Nevada\",\n                value: \"Nevada\"\n            },\n            {\n                label: \"New Hampshire\",\n                value: \"New Hampshire\"\n            },\n            {\n                label: \"New Jersey\",\n                value: \"New Jersey\"\n            },\n            {\n                label: \"New Mexico\",\n                value: \"New Mexico\"\n            },\n            {\n                label: \"New York\",\n                value: \"New York\"\n            },\n            {\n                label: \"North Carolina\",\n                value: \"North Carolina\"\n            },\n            {\n                label: \"North Dakota\",\n                value: \"North Dakota\"\n            },\n            {\n                label: \"Ohio\",\n                value: \"Ohio\"\n            },\n            {\n                label: \"Oklahoma\",\n                value: \"Oklahoma\"\n            },\n            {\n                label: \"Oregon\",\n                value: \"Oregon\"\n            },\n            {\n                label: \"Pennsylvania\",\n                value: \"Pennsylvania\"\n            },\n            {\n                label: \"Rhode Island\",\n                value: \"Rhode Island\"\n            },\n            {\n                label: \"South Carolina\",\n                value: \"South Carolina\"\n            },\n            {\n                label: \"South Dakota\",\n                value: \"South Dakota\"\n            },\n            {\n                label: \"Tennessee\",\n                value: \"Tennessee\"\n            },\n            {\n                label: \"Texas\",\n                value: \"Texas\"\n            },\n            {\n                label: \"Utah\",\n                value: \"Utah\"\n            },\n            {\n                label: \"Vermont\",\n                value: \"Vermont\"\n            },\n            {\n                label: \"Virginia\",\n                value: \"Virginia\"\n            },\n            {\n                label: \"Washington\",\n                value: \"Washington\"\n            },\n            {\n                label: \"West Virginia\",\n                value: \"West Virginia\"\n            },\n            {\n                label: \"Wisconsin\",\n                value: \"Wisconsin\"\n            },\n            {\n                label: \"Wyoming\",\n                value: \"Wyoming\"\n            }\n        ]\n    } = props;\n\n    const [validationResult, setValidationResult] = useState(null);\n\n    const handleArrowBack = () => {\n\n    }\n\n    const handleSubmit = evt => {\n\n        evt.preventDefault();\n        const formData = getFromData(evt);\n\n        setValidationResult(formData.validationResult);\n\n        // if (!formData.validationResult) {\n\n        //     let data = formData.formData\n\n        //     if (dealer.id) {\n\n        //         data = { ...data, updated_email: data.email, updated_phone: data.phone }\n        //         updateDealer(history, data)\n        //     }\n        //     else {\n        //         addDealer(history, data)\n        //     }\n        // }\n    }\n\n    return (\n        <div className=\"dealer\">\n\n            { actionLoading && <Loader />}\n\n            <Header>\n                <HeaderLeft>\n                    <img src={IconArrowLeft} onClick={() => handleArrowBack()} alt=\"\" />\n                </HeaderLeft>\n                <HeaderCenter>\n                    <div className=\"header-main\">\n                        <img className=\"main-logo\" src={TCPLogo} alt=\"\" />\n                    </div>\n                </HeaderCenter>\n                <HeaderRight></HeaderRight>\n            </Header>\n\n            <div className=\"sub-header\">\n                <button>\n                    <img src={IconContactAcitve} alt=\"\"/> \n                    <span>Applicant(s) Details</span>\n                </button>\n            </div>\n\n            <form onSubmit={(e) => handleSubmit(e)} noValidate>\n                {dealer.id &&\n                    <Input\n                        name=\"id\"\n                        type=\"hidden\"\n                        value={dealer.id}\n                    />\n                }\n                <div className=\"container\">\n                    <div className=\"styled-form\">\n                        <Form.Group className=\"mb-18\">\n                            <Input\n                                name=\"first_name\"\n                                type=\"text\"\n                                // defaultValue={dealer.company_name}\n                                label=\"Applicant First Name\"\n                                defaultText=\"Applicant First Name\"\n                                required={true}\n                                error={{\n                                    'empty': \"Please enter Applicant First Name\"\n                                }}\n                                validationResult={validationResult}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-18\">\n                            <Input\n                                name=\"last_name\"\n                                type=\"text\"\n                                // defaultValue={dealer.company_name}\n                                label=\"Applicant Last Name\"\n                                defaultText=\"Applicant Last Name\"\n                                required={true}\n                                error={{\n                                    'empty': \"Please enter Applicant Last Name\"\n                                }}\n                                validationResult={validationResult}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-18\">\n                            <Input\n                                name=\"email\"\n                                type=\"email\"\n                                regex=\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\"\n                                // defaultValue={dealer.email}\n                                label=\"Email\"\n                                defaultText=\"Email\"\n                                required={true}\n                                error={{\n                                    'invalid': \"Please enter valid Email address\",\n                                    'empty': \"Please enter Email Address\"\n                                }}\n                                validationResult={validationResult}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-18\">\n                            <Input\n                                name=\"phone\"\n                                type=\"text\"\n                                // defaultValue={dealer.phone}\n                                label=\"Phone\"\n                                defaultText=\"999-999-9999\"\n                                regex=\"[0-9]{10}\"\n                                required={true}\n                                error={{\n                                    'invalid': \"Please enter 10 digit number\",\n                                    'empty': \"Please enter Phone number\"\n                                }}\n                                validationResult={validationResult}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-18\">\n                            <Input\n                                name=\"date_of_work\"\n                                type=\"date\"\n                                // defaultValue={dealer.phone}\n                                label=\"Phone\"\n                                defaultText=\"MM / DD / YYYY\"\n                                required={true}\n                                error={{\n                                    'empty': \"Please enter date of birth\"\n                                }}\n                                validationResult={validationResult}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-18\">\n                            <Input\n                                name=\"ssn\"\n                                type=\"text\"\n                                // defaultValue={dealer.company_name}\n                                label=\"SSN\"\n                                defaultText=\"SSN\"\n                                required={true}\n                                error={{\n                                    'empty': \"Please enter ssn number\"\n                                }}\n                                validationResult={validationResult}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-18\">\n                            <Input\n                                name=\"driver_license\"\n                                type=\"text\"\n                                // defaultValue={dealer.company_name}\n                                label=\"Driver License Number\"\n                                defaultText=\"Driver License Number\"\n                                required={true}\n                                error={{\n                                    'empty': \"Please enter Driver License Number\"\n                                }}\n                                validationResult={validationResult}\n                            />\n                        </Form.Group>\n\n\n\n\n\n\n\n\n\n\n                        <span className=\"divider\"></span>\n                        <span className=\"title\">ADDRESS</span>\n                        <Form.Group className=\"mb-18\">\n                            <Input\n                                name={dealer.id ? \"street\" : \"dealer_address_street\"}\n                                type=\"text\"\n                                defaultValue={dealer.street}\n                                label=\"Street\"\n                                defaultText=\"Street\"\n                                required={true}\n                                error={{\n                                    'empty': \"Please enter Street\"\n                                }}\n                                validationResult={validationResult}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-18\">\n                            <Input\n                                name={dealer.id ? \"city\" : \"dealer_address_city\"}\n                                type=\"text\"\n                                defaultValue={dealer.city}\n                                label=\"City\"\n                                defaultText=\"City\"\n                                required={true}\n                                error={{\n                                    'empty': \"Please enter city\"\n                                }}\n                                validationResult={validationResult}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-18\">\n                            <Dropdown\n                                name={dealer.state ? \"state\" : \"dealer_address_state\"}\n                                type=\"dropdown\"\n                                defaultValue={dealer.state ? dealer.state : ''}\n                                label=\"State\"\n                                defaultText=\"State\"\n                                required={true}\n                                options={dropdownList}\n                                error={{\n                                    'empty': \"Please enter state\"\n                                }}\n                                validationResult={validationResult}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-18\">\n                            <Input\n                                name={dealer.id ? \"zip\" : \"dealer_address_zipcode\"}\n                                type=\"number\"\n                                defaultValue={dealer.zip}\n                                regex=\"[0-9]{6}\"\n                                label=\"Zip Code\"\n                                defaultText=\"Zip Code\"\n                                maxLength={6}\n                                required={true}\n                                error={{\n                                    'invalid': \"Please enter 6 digit number\",\n                                    'empty': \"Please enter zip code\"\n                                }}\n                                validationResult={validationResult}\n                            />\n                        </Form.Group>\n                    </div>\n                </div>\n                <div className=\"footer-container\">\n                    <button className=\"secondary\" onClick={() => handleArrowBack()}>Cancel</button>\n                    <button className=\"secondary\" type=\"submit\">{dealer.id ? 'Update' : 'Add'}</button>\n                </div>\n            </form>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    dealer: state.admin.selectedDealer,\n    actionLoading: state.admin.actionLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n    addDealer: (history, data) => dispatch(addDealer(history, data)),\n    updateDealer: (history, data) => dispatch(updateDealer(history, data))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddDealer);"]},"metadata":{},"sourceType":"module"}