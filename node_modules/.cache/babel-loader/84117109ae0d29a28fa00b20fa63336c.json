{"ast":null,"code":"import { toast } from 'react-toastify';\nexport function pushNotification(msg, type, position, duration) {\n  if (type === 'info') {\n    return toast.info(msg, {\n      position: position ? toast.POSITION[position] : toast.POSITION.TOP_CENTER,\n      autoClose: duration ? duration : 3000,\n      pauseOnFocusLoss: true,\n      pauseOnHover: true,\n      newestOnTop: true\n    });\n  } else if (type === 'success') {\n    return toast.success(msg, {\n      position: position ? toast.POSITION[position] : toast.POSITION.TOP_CENTER,\n      autoClose: duration ? duration : 3000,\n      pauseOnFocusLoss: true,\n      pauseOnHover: false,\n      newestOnTop: true\n    });\n  } else if (type === 'warning') {\n    return toast.warn(msg, {\n      position: position ? toast.POSITION[position] : toast.POSITION.TOP_CENTER,\n      autoClose: duration ? duration : 3000,\n      pauseOnFocusLoss: true,\n      pauseOnHover: false,\n      newestOnTop: true\n    });\n  } else if (type === 'error') {\n    return toast.error(msg, {\n      position: position ? toast.POSITION[position] : toast.POSITION.TOP_CENTER,\n      autoClose: duration ? duration : 3000,\n      pauseOnFocusLoss: true,\n      pauseOnHover: false,\n      newestOnTop: true\n    });\n  } else {\n    return toast.info(msg, {\n      position: position ? toast.POSITION[position] : toast.POSITION.TOP_CENTER,\n      autoClose: duration ? duration : 3000,\n      pauseOnFocusLoss: true,\n      pauseOnHover: false,\n      newestOnTop: true\n    });\n  }\n}","map":{"version":3,"sources":["/home/freedom/Music/tcp-frontend/src/utils/notification.js"],"names":["toast","pushNotification","msg","type","position","duration","info","POSITION","TOP_CENTER","autoClose","pauseOnFocusLoss","pauseOnHover","newestOnTop","success","warn","error"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AAEA,OAAO,SAASC,gBAAT,CAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,QAArC,EAA+CC,QAA/C,EAAyD;AAC5D,MAAIF,IAAI,KAAK,MAAb,EAAqB;AACjB,WAAOH,KAAK,CAACM,IAAN,CAAWJ,GAAX,EAAgB;AACnBE,MAAAA,QAAQ,EAAEA,QAAQ,GAAGJ,KAAK,CAACO,QAAN,CAAgBH,QAAhB,CAAH,GAAgCJ,KAAK,CAACO,QAAN,CAAeC,UAD9C;AAEnBC,MAAAA,SAAS,EAAEJ,QAAQ,GAAGA,QAAH,GAAc,IAFd;AAGnBK,MAAAA,gBAAgB,EAAE,IAHC;AAInBC,MAAAA,YAAY,EAAE,IAJK;AAKnBC,MAAAA,WAAW,EAAE;AALM,KAAhB,CAAP;AAOH,GARD,MAQO,IAAIT,IAAI,KAAK,SAAb,EAAwB;AAC3B,WAAOH,KAAK,CAACa,OAAN,CAAcX,GAAd,EAAmB;AACtBE,MAAAA,QAAQ,EAAEA,QAAQ,GAAGJ,KAAK,CAACO,QAAN,CAAgBH,QAAhB,CAAH,GAAgCJ,KAAK,CAACO,QAAN,CAAeC,UAD3C;AAEtBC,MAAAA,SAAS,EAAEJ,QAAQ,GAAGA,QAAH,GAAc,IAFX;AAGtBK,MAAAA,gBAAgB,EAAE,IAHI;AAItBC,MAAAA,YAAY,EAAE,KAJQ;AAKtBC,MAAAA,WAAW,EAAE;AALS,KAAnB,CAAP;AAOH,GARM,MAQA,IAAIT,IAAI,KAAK,SAAb,EAAwB;AAC3B,WAAOH,KAAK,CAACc,IAAN,CAAWZ,GAAX,EAAgB;AACnBE,MAAAA,QAAQ,EAAEA,QAAQ,GAAGJ,KAAK,CAACO,QAAN,CAAgBH,QAAhB,CAAH,GAAgCJ,KAAK,CAACO,QAAN,CAAeC,UAD9C;AAEnBC,MAAAA,SAAS,EAAEJ,QAAQ,GAAGA,QAAH,GAAc,IAFd;AAGnBK,MAAAA,gBAAgB,EAAE,IAHC;AAInBC,MAAAA,YAAY,EAAE,KAJK;AAKnBC,MAAAA,WAAW,EAAE;AALM,KAAhB,CAAP;AAOH,GARM,MAQA,IAAIT,IAAI,KAAK,OAAb,EAAsB;AACzB,WAAOH,KAAK,CAACe,KAAN,CAAYb,GAAZ,EAAiB;AACpBE,MAAAA,QAAQ,EAAEA,QAAQ,GAAGJ,KAAK,CAACO,QAAN,CAAgBH,QAAhB,CAAH,GAAgCJ,KAAK,CAACO,QAAN,CAAeC,UAD7C;AAEpBC,MAAAA,SAAS,EAAEJ,QAAQ,GAAGA,QAAH,GAAc,IAFb;AAGpBK,MAAAA,gBAAgB,EAAE,IAHE;AAIpBC,MAAAA,YAAY,EAAE,KAJM;AAKpBC,MAAAA,WAAW,EAAE;AALO,KAAjB,CAAP;AAOH,GARM,MAQA;AACH,WAAOZ,KAAK,CAACM,IAAN,CAAWJ,GAAX,EAAgB;AACnBE,MAAAA,QAAQ,EAAEA,QAAQ,GAAGJ,KAAK,CAACO,QAAN,CAAgBH,QAAhB,CAAH,GAAgCJ,KAAK,CAACO,QAAN,CAAeC,UAD9C;AAEnBC,MAAAA,SAAS,EAAEJ,QAAQ,GAAGA,QAAH,GAAc,IAFd;AAGnBK,MAAAA,gBAAgB,EAAE,IAHC;AAInBC,MAAAA,YAAY,EAAE,KAJK;AAKnBC,MAAAA,WAAW,EAAE;AALM,KAAhB,CAAP;AAOH;AACJ","sourcesContent":["import { toast } from 'react-toastify'\n\nexport function pushNotification(msg, type, position, duration) {\n    if (type === 'info') {\n        return toast.info(msg, {\n            position: position ? toast.POSITION[ position ] : toast.POSITION.TOP_CENTER,\n            autoClose: duration ? duration : 3000,\n            pauseOnFocusLoss: true,\n            pauseOnHover: true,\n            newestOnTop: true\n        })\n    } else if (type === 'success') {\n        return toast.success(msg, {\n            position: position ? toast.POSITION[ position ] : toast.POSITION.TOP_CENTER,\n            autoClose: duration ? duration : 3000,\n            pauseOnFocusLoss: true,\n            pauseOnHover: false,\n            newestOnTop: true\n        })\n    } else if (type === 'warning') {\n        return toast.warn(msg, {\n            position: position ? toast.POSITION[ position ] : toast.POSITION.TOP_CENTER,\n            autoClose: duration ? duration : 3000,\n            pauseOnFocusLoss: true,\n            pauseOnHover: false,\n            newestOnTop: true\n        })\n    } else if (type === 'error') {\n        return toast.error(msg, {\n            position: position ? toast.POSITION[ position ] : toast.POSITION.TOP_CENTER,\n            autoClose: duration ? duration : 3000,\n            pauseOnFocusLoss: true,\n            pauseOnHover: false,\n            newestOnTop: true\n        })\n    } else {\n        return toast.info(msg, {\n            position: position ? toast.POSITION[ position ] : toast.POSITION.TOP_CENTER,\n            autoClose: duration ? duration : 3000,\n            pauseOnFocusLoss: true,\n            pauseOnHover: false,\n            newestOnTop: true\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}