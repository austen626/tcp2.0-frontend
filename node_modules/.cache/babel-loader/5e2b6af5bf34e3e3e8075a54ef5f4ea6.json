{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp2.0-frontend/src/NetworkDetector.js\";\nimport React, { Component } from 'react';\nimport { baseUrl } from './api';\nexport default function (ComposedComponent) {\n  class NetworkDetector extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        isDisconnected: false\n      };\n\n      this.handleConnectionChange = () => {\n        const condition = navigator.onLine ? 'online' : 'offline'; // if (condition === 'online') {\n        //   const webPing = setInterval(\n        //     () => {\n        //       fetch(baseUrl, {\n        //         mode: 'no-cors',\n        //         })\n        //       .then(() => {\n        //         this.setState({ isDisconnected: false }, () => {\n        //           return clearInterval(webPing)\n        //         });\n        //       }).catch(() => this.setState({ isDisconnected: true }) )\n        //     }, 2000);\n        //   return;\n        // }\n\n        return this.setState({\n          isDisconnected: true\n        });\n      };\n    }\n\n    componentDidMount() {\n      this.handleConnectionChange();\n      window.addEventListener('online', this.handleConnectionChange);\n      window.addEventListener('offline', this.handleConnectionChange);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('online', this.handleConnectionChange);\n      window.removeEventListener('offline', this.handleConnectionChange);\n    }\n\n    render() {\n      const {\n        isDisconnected\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"network-issue-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, isDisconnected && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"internet-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      }, \"Internet connection lost\")), /*#__PURE__*/React.createElement(ComposedComponent, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      })));\n    }\n\n  }\n\n  return NetworkDetector;\n}","map":{"version":3,"sources":["/home/freedom/Music/tcp2.0-frontend/src/NetworkDetector.js"],"names":["React","Component","baseUrl","ComposedComponent","NetworkDetector","state","isDisconnected","handleConnectionChange","condition","navigator","onLine","setState","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,eAAe,UAAUC,iBAAV,EAA6B;AAC1C,QAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AAAA;AAAA;AAAA,WACtCI,KADsC,GAC9B;AACNC,QAAAA,cAAc,EAAE;AADV,OAD8B;;AAAA,WAiBtCC,sBAjBsC,GAiBb,MAAM;AAC7B,cAAMC,SAAS,GAAGC,SAAS,CAACC,MAAV,GAAmB,QAAnB,GAA8B,SAAhD,CAD6B,CAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAO,KAAKC,QAAL,CAAc;AAAEL,UAAAA,cAAc,EAAE;AAAlB,SAAd,CAAP;AACD,OAnCqC;AAAA;;AAKtCM,IAAAA,iBAAiB,GAAG;AAClB,WAAKL,sBAAL;AACAM,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKP,sBAAvC;AACAM,MAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKP,sBAAxC;AACD;;AAEDQ,IAAAA,oBAAoB,GAAG;AACrBF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKT,sBAA1C;AACAM,MAAAA,MAAM,CAACG,mBAAP,CAA2B,SAA3B,EAAsC,KAAKT,sBAA3C;AACD;;AAuBDU,IAAAA,MAAM,GAAG;AACP,YAAM;AAAEX,QAAAA;AAAF,UAAqB,KAAKD,KAAhC;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIC,cAAc,iBAAK;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADiB,CADvB,eAKE,oBAAC,iBAAD,oBAAuB,KAAKY,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALF,CADF;AASD;;AAhDqC;;AAmDxC,SAAOd,eAAP;AACD","sourcesContent":["import React, { Component } from 'react';\nimport { baseUrl } from './api';\nexport default function (ComposedComponent) {\n  class NetworkDetector extends Component {\n    state = {\n      isDisconnected: false\n    }\n\n    componentDidMount() {\n      this.handleConnectionChange();\n      window.addEventListener('online', this.handleConnectionChange);\n      window.addEventListener('offline', this.handleConnectionChange);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('online', this.handleConnectionChange);\n      window.removeEventListener('offline', this.handleConnectionChange);\n    }\n\n\n    handleConnectionChange = () => {\n      const condition = navigator.onLine ? 'online' : 'offline';\n      // if (condition === 'online') {\n      //   const webPing = setInterval(\n      //     () => {\n      //       fetch(baseUrl, {\n      //         mode: 'no-cors',\n      //         })\n      //       .then(() => {\n      //         this.setState({ isDisconnected: false }, () => {\n      //           return clearInterval(webPing)\n      //         });\n      //       }).catch(() => this.setState({ isDisconnected: true }) )\n      //     }, 2000);\n      //   return;\n      // }\n\n      return this.setState({ isDisconnected: true });\n    }\n\n    render() {\n      const { isDisconnected } = this.state;\n      return (\n        <div className=\"network-issue-container\">\n          { isDisconnected && (<div className=\"internet-error\">\n              <p>Internet connection lost</p>\n            </div>)\n          }\n          <ComposedComponent {...this.props} />\n        </div>\n      );\n    }\n  }\n\n  return NetworkDetector;\n}"]},"metadata":{},"sourceType":"module"}