{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp2.0-frontend/src/screens/Dealer/2.0/AddStaff.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport Header, { HeaderLeft, HeaderCenter, HeaderRight } from '../../../components/Dealer/Header';\nimport { TCPLogo, IconArrowLeft } from '../../../assets/images';\nimport Input from '../../../components/commons/input';\nimport Dropdown from '../../../components/commons/dropdown';\nimport Loader from 'shared/Loader';\nimport { getFromData } from '../../../components/commons/utility';\nimport { updateStaff, addStaff } from '../../../redux/actions/dealer';\n\nfunction AddStaff(props) {\n  const {\n    history,\n    staff,\n    addStaff,\n    updateStaff,\n    actionLoading\n  } = props;\n  const [validationResult, setValidationResult] = useState(null);\n  const [showStaffTypeError, setShowStaffTypeError] = useState(false);\n\n  const handleArrowBack = () => {\n    history.push('/dealer/staff');\n  };\n\n  const hideError = () => {\n    setShowStaffTypeError(false);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const formData = getFromData(evt);\n    setValidationResult(formData.validationResult);\n    console.log(formData);\n\n    if (!formData.validationResult && formData.formData.role !== \"\") {\n      let data = formData.formData;\n\n      if (staff.id) {\n        data = { ...data,\n          role: [data.role]\n        };\n        updateStaff(history, data);\n      } else {\n        addStaff(history, data);\n      }\n    } else if (formData.formData.role === undefined) {\n      setShowStaffTypeError(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dealer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, actionLoading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HeaderLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: IconArrowLeft,\n    onClick: () => handleArrowBack(),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(HeaderCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"main-logo\",\n    src: TCPLogo,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(HeaderRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, staff.id && /*#__PURE__*/React.createElement(Input, {\n    name: \"id\",\n    type: \"hidden\",\n    value: staff.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"styled-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"first_name\",\n    type: \"text\",\n    defaultValue: staff.first_name,\n    label: \"First Name\",\n    defaultText: \"First Name\",\n    required: true,\n    error: {\n      'empty': \"Please enter First Name\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"last_name\",\n    type: \"text\",\n    defaultValue: staff.last_name,\n    label: \"Last Name\",\n    defaultText: \"Last Name\",\n    required: true,\n    error: {\n      'empty': \"Please enter Last Name\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    type: \"email\",\n    regex: \"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\",\n    defaultValue: staff.email,\n    label: \"Email\",\n    defaultText: \"Email\",\n    required: true,\n    error: {\n      'invalid': \"Please enter valid Email address\",\n      'empty': \"Please enter user Email\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box radio-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    class: \"form-label\",\n    style: {\n      marginRight: 45\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, \"Staff Type: \"), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18 radio-filed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"sales\",\n    name: \"role\",\n    type: \"radio\",\n    className: \"radio-width\",\n    defaultValue: \"sales\",\n    handleChange: () => hideError() // checked={staff.role && staff.role[0] == 'sales' ? true : ''}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"sales\",\n    class: \"form-label \",\n    id: \"sales-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }, \"Salesperson\")), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18 radio-filed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"dealer\",\n    name: \"role\",\n    type: \"radio\",\n    className: \"radio-width\",\n    defaultValue: \"dealer\",\n    handleChange: () => hideError(),\n    checked: staff.role && staff.role[0] == 'dealer' ? true : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"dealer\",\n    class: \"form-label \",\n    id: \"staff-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 33\n    }\n  }, \"Dealer\"))), /*#__PURE__*/React.createElement(\"div\", {\n    class: `error-label ${showStaffTypeError ? \"show\" : \"hide\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }, \"Please select staff type\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"secondary\",\n    onClick: () => handleArrowBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"secondary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, staff.id ? 'Update' : 'Add'))));\n}\n\nconst mapStateToProps = state => ({\n  staff: state.dealer.selectedStaff,\n  actionLoading: state.dealer.actionLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addStaff: (history, data) => dispatch(addStaff(history, data)),\n  updateStaff: (history, data) => dispatch(updateStaff(history, data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddStaff);","map":{"version":3,"sources":["/home/freedom/Music/tcp2.0-frontend/src/screens/Dealer/2.0/AddStaff.js"],"names":["React","useState","connect","Form","Header","HeaderLeft","HeaderCenter","HeaderRight","TCPLogo","IconArrowLeft","Input","Dropdown","Loader","getFromData","updateStaff","addStaff","AddStaff","props","history","staff","actionLoading","validationResult","setValidationResult","showStaffTypeError","setShowStaffTypeError","handleArrowBack","push","hideError","handleSubmit","evt","preventDefault","formData","console","log","role","data","id","undefined","e","first_name","last_name","email","marginRight","mapStateToProps","state","dealer","selectedStaff","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,EAA6BC,YAA7B,EAA2CC,WAA3C,QAA8D,mCAA9D;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,wBAAvC;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,+BAAtC;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,QAAM;AACFC,IAAAA,OADE;AAEFC,IAAAA,KAFE;AAGFJ,IAAAA,QAHE;AAIFD,IAAAA,WAJE;AAKFM,IAAAA;AALE,MAMFH,KANJ;AAQA,QAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0CrB,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAACsB,kBAAD,EAAqBC,qBAArB,IAA8CvB,QAAQ,CAAC,KAAD,CAA5D;;AAEA,QAAMwB,eAAe,GAAG,MAAM;AAC1BP,IAAAA,OAAO,CAACQ,IAAR,CAAa,eAAb;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AAEpBH,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH,GAHD;;AAKA,QAAMI,YAAY,GAAGC,GAAG,IAAI;AAExBA,IAAAA,GAAG,CAACC,cAAJ;AACA,UAAMC,QAAQ,GAAGlB,WAAW,CAACgB,GAAD,CAA5B;AAEAP,IAAAA,mBAAmB,CAACS,QAAQ,CAACV,gBAAV,CAAnB;AAEAW,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAEA,QAAG,CAACA,QAAQ,CAACV,gBAAV,IAA8BU,QAAQ,CAACA,QAAT,CAAkBG,IAAlB,KAA2B,EAA5D,EAAgE;AAE5D,UAAIC,IAAI,GAAGJ,QAAQ,CAACA,QAApB;;AAEA,UAAGZ,KAAK,CAACiB,EAAT,EAAa;AAETD,QAAAA,IAAI,GAAG,EAAC,GAAGA,IAAJ;AAAUD,UAAAA,IAAI,EAAE,CAACC,IAAI,CAACD,IAAN;AAAhB,SAAP;AACApB,QAAAA,WAAW,CAACI,OAAD,EAAUiB,IAAV,CAAX;AACH,OAJD,MAMA;AACIpB,QAAAA,QAAQ,CAACG,OAAD,EAAUiB,IAAV,CAAR;AACH;AACJ,KAbD,MAcK,IAAIJ,QAAQ,CAACA,QAAT,CAAkBG,IAAlB,KAA2BG,SAA/B,EAA0C;AAE3Cb,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACH;AACJ,GA3BD;;AA6BA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEMJ,aAAa,iBAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFvB,eAII,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEX,aAAV;AAAyB,IAAA,OAAO,EAAE,MAAMgB,eAAe,EAAvD;AAA2D,IAAA,GAAG,EAAC,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEjB,OAAhC;AAAyC,IAAA,GAAG,EAAC,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAJJ,eASI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAJJ,eAgBI;AAAM,IAAA,QAAQ,EAAG8B,CAAD,IAAOV,YAAY,CAACU,CAAD,CAAnC;AAAwC,IAAA,UAAU,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,KAAK,CAACiB,EAAN,iBACG,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,IADT;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,KAAK,EAAEjB,KAAK,CAACiB,EAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,eAQI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,YADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,YAAY,EAAEjB,KAAK,CAACoB,UAHxB;AAII,IAAA,KAAK,EAAC,YAJV;AAKI,IAAA,WAAW,EAAG,YALlB;AAMI,IAAA,QAAQ,EAAI,IANhB;AAOI,IAAA,KAAK,EAAI;AACL,eAAS;AADJ,KAPb;AAUI,IAAA,gBAAgB,EAAIlB,gBAVxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAeI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,WADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,YAAY,EAAEF,KAAK,CAACqB,SAHxB;AAII,IAAA,KAAK,EAAC,WAJV;AAKI,IAAA,WAAW,EAAG,WALlB;AAMI,IAAA,QAAQ,EAAI,IANhB;AAOI,IAAA,KAAK,EAAI;AACL,eAAS;AADJ,KAPb;AAUI,IAAA,gBAAgB,EAAInB,gBAVxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAfJ,eA6BI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAG,mCAHZ;AAII,IAAA,YAAY,EAAEF,KAAK,CAACsB,KAJxB;AAKI,IAAA,KAAK,EAAC,OALV;AAMI,IAAA,WAAW,EAAG,OANlB;AAOI,IAAA,QAAQ,EAAI,IAPhB;AAQI,IAAA,KAAK,EAAI;AACL,iBAAW,kCADN;AAEL,eAAS;AAFJ,KARb;AAYI,IAAA,gBAAgB,EAAIpB,gBAZxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA7BJ,eA6CI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,KAAK,EAAC,YAAb;AAA0B,IAAA,KAAK,EAAE;AAACqB,MAAAA,WAAW,EAAE;AAAd,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,EAAE,EAAE,OADR;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,SAAS,EAAC,aAJd;AAKI,IAAA,YAAY,EAAC,OALjB;AAMI,IAAA,YAAY,EAAE,MAAMf,SAAS,EANjC,CAOI;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAUI;AAAO,IAAA,GAAG,EAAC,OAAX;AAAmB,IAAA,KAAK,EAAC,aAAzB;AAAuC,IAAA,EAAE,EAAC,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVJ,CAFJ,eAcI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,EAAE,EAAE,QADR;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,SAAS,EAAC,aAJd;AAKI,IAAA,YAAY,EAAC,QALjB;AAMI,IAAA,YAAY,EAAE,MAAMA,SAAS,EANjC;AAOI,IAAA,OAAO,EAAER,KAAK,CAACe,IAAN,IAAcf,KAAK,CAACe,IAAN,CAAW,CAAX,KAAiB,QAA/B,GAA0C,IAA1C,GAAiD,EAP9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAUI;AAAO,IAAA,GAAG,EAAC,QAAX;AAAoB,IAAA,KAAK,EAAC,aAA1B;AAAwC,IAAA,EAAE,EAAC,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,CAdJ,CA7CJ,eAwEI;AAAK,IAAA,KAAK,EAAG,eAAcX,kBAAkB,GAAG,MAAH,GAAY,MAAO,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAxEJ,CADJ,CARJ,eAoFI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,OAAO,EAAE,MAAME,eAAe,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CN,KAAK,CAACiB,EAAN,GAAW,QAAX,GAAsB,KAAnE,CAFJ,CApFJ,CAhBJ,CADJ;AA6GH;;AAED,MAAMO,eAAe,GAAGC,KAAK,KAAK;AAC9BzB,EAAAA,KAAK,EAAEyB,KAAK,CAACC,MAAN,CAAaC,aADU;AAE9B1B,EAAAA,aAAa,EAAEwB,KAAK,CAACC,MAAN,CAAazB;AAFE,CAAL,CAA7B;;AAKA,MAAM2B,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjC,EAAAA,QAAQ,EAAE,CAACG,OAAD,EAAUiB,IAAV,KAAmBa,QAAQ,CAACjC,QAAQ,CAACG,OAAD,EAAUiB,IAAV,CAAT,CADD;AAEpCrB,EAAAA,WAAW,EAAE,CAACI,OAAD,EAAUiB,IAAV,KAAmBa,QAAQ,CAAClC,WAAW,CAACI,OAAD,EAAUiB,IAAV,CAAZ;AAFJ,CAAL,CAAnC;;AAKA,eAAejC,OAAO,CAClByC,eADkB,EAElBI,kBAFkB,CAAP,CAGb/B,QAHa,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport Header, { HeaderLeft, HeaderCenter, HeaderRight } from '../../../components/Dealer/Header';\nimport { TCPLogo, IconArrowLeft } from '../../../assets/images';\nimport Input from '../../../components/commons/input';\nimport Dropdown from '../../../components/commons/dropdown';\nimport Loader from 'shared/Loader';\n\nimport { getFromData } from '../../../components/commons/utility';\nimport { updateStaff, addStaff } from '../../../redux/actions/dealer';\n\nfunction AddStaff(props) {\n\n    const {\n        history,\n        staff,\n        addStaff,\n        updateStaff,\n        actionLoading\n    } = props;\n\n    const [validationResult, setValidationResult] = useState(null);\n    const [showStaffTypeError, setShowStaffTypeError] = useState(false);\n\n    const handleArrowBack = () => {\n        history.push('/dealer/staff')\n    }\n\n    const hideError = () => {\n\n        setShowStaffTypeError(false);\n    }\n\n    const handleSubmit = evt => {\n        \n        evt.preventDefault();\n        const formData = getFromData(evt);\n\n        setValidationResult(formData.validationResult);\n\n        console.log(formData)\n\n        if(!formData.validationResult && formData.formData.role !== \"\") {\n\n            let data = formData.formData\n\n            if(staff.id) {\n\n                data = {...data, role: [data.role]}\n                updateStaff(history, data)\n            }\n            else\n            {\n                addStaff(history, data)\n            }\n        }\n        else if (formData.formData.role === undefined) {\n\n            setShowStaffTypeError(true);\n        }\n    }\n\n    return (\n        <div className=\"dealer\">\n\n            { actionLoading && <Loader /> }\n\n            <Header>\n                <HeaderLeft>\n                    <img src={IconArrowLeft} onClick={() => handleArrowBack()} alt=\"\" />\n                </HeaderLeft>\n                <HeaderCenter>\n                    <div className=\"header-main\">\n                        <img className=\"main-logo\" src={TCPLogo} alt=\"\" />\n                    </div>\n                </HeaderCenter>\n                <HeaderRight></HeaderRight>\n            </Header>\n\n            <form onSubmit={(e) => handleSubmit(e)} noValidate>\n                {staff.id && \n                    <Input \n                        name=\"id\" \n                        type=\"hidden\"\n                        value={staff.id} \n                    />\n                }\n                <div className=\"container\">\n                    <div className=\"styled-form\">\n                        <Form.Group className=\"mb-18\">\n                            <Input \n                                name=\"first_name\"\n                                type=\"text\" \n                                defaultValue={staff.first_name} \n                                label=\"First Name\"\n                                defaultText = \"First Name\"\n                                required = {true}\n                                error = {{\n                                    'empty': \"Please enter First Name\"\n                                }}\n                                validationResult = {validationResult}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-18\">\n                            <Input \n                                name=\"last_name\" \n                                type=\"text\" \n                                defaultValue={staff.last_name} \n                                label=\"Last Name\"\n                                defaultText = \"Last Name\"\n                                required = {true}\n                                error = {{\n                                    'empty': \"Please enter Last Name\"\n                                }}\n                                validationResult = {validationResult}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-18\">\n                            <Input \n                                name=\"email\"\n                                type=\"email\"\n                                regex = \"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\"\n                                defaultValue={staff.email} \n                                label=\"Email\"\n                                defaultText = \"Email\"\n                                required = {true}\n                                error = {{\n                                    'invalid': \"Please enter valid Email address\",\n                                    'empty': \"Please enter user Email\"\n                                }}\n                                validationResult = {validationResult}\n                            />\n                        </Form.Group>\n                        <div className=\"box radio-box\">\n                            <label class=\"form-label\" style={{marginRight: 45}}>Staff Type: </label>\n                            <Form.Group className=\"mb-18 radio-filed\">\n                                <Input \n                                    id =\"sales\"\n                                    name=\"role\"\n                                    type=\"radio\"\n                                    className=\"radio-width\"\n                                    defaultValue=\"sales\"\n                                    handleChange={() => hideError()}\n                                    // checked={staff.role && staff.role[0] == 'sales' ? true : ''}\n                                />\n                                <label for=\"sales\" class=\"form-label \" id=\"sales-label\">Salesperson</label>  \n                            </Form.Group>\n                            <Form.Group className=\"mb-18 radio-filed\">\n                                <Input \n                                    id =\"dealer\"\n                                    name=\"role\"\n                                    type=\"radio\"\n                                    className=\"radio-width\"\n                                    defaultValue=\"dealer\"\n                                    handleChange={() => hideError()}\n                                    checked={staff.role && staff.role[0] == 'dealer' ? true : ''}\n                                />\n                                <label for=\"dealer\" class=\"form-label \" id=\"staff-label\">Dealer</label>\n                            </Form.Group>\n                        </div>\n                        <div class={`error-label ${showStaffTypeError ? \"show\" : \"hide\"}`}>Please select staff type</div>\n                    </div>\n                </div>\n                <div className=\"footer-container\">\n                    <button className=\"secondary\" onClick={() => handleArrowBack()}>Cancel</button>\n                    <button className=\"secondary\" type=\"submit\">{staff.id ? 'Update' : 'Add'}</button>\n                </div>\n            </form>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    staff: state.dealer.selectedStaff,\n    actionLoading: state.dealer.actionLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n    addStaff: (history, data) => dispatch(addStaff(history, data)),\n    updateStaff: (history, data) => dispatch(updateStaff(history, data))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddStaff);"]},"metadata":{},"sourceType":"module"}