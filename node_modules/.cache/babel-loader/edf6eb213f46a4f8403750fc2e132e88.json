{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp2.0-frontend/src/screens/Admin/2.0/AddDealer.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport { getFromData } from '../../../components/commons/utility';\nimport Header, { HeaderLeft, HeaderCenter, HeaderRight } from '../../../components/Dealer/Header';\nimport { TCPLogo, IconDownArrow, IconArrowLeft } from '../../../assets/images';\nimport { updateDealer } from '../../../redux/actions/admin';\nimport Input from '../../../components/commons/input';\n\nfunction AddDealer(props) {\n  const {\n    history,\n    selectedDealer\n  } = props;\n  const emptyObj = {\n    id: null,\n    company_name: null,\n    email: null,\n    contact_email: null,\n    phone: null,\n    street: null,\n    city: null,\n    state: null,\n    zip: null\n  };\n  const [dealer, setDealer] = useState(selectedDealer ? selectedDealer : emptyObj);\n  const [validationResult, setValidationResult] = useState(null);\n\n  const handleArrowBack = () => {\n    history.push('/admin/dealers');\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const formData = getFromData(evt);\n    console.log(formData);\n    setValidationResult(formData.validationResult);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dealer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HeaderLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: IconArrowLeft,\n    onClick: () => handleArrowBack(),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(HeaderCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"main-logo\",\n    src: TCPLogo,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(HeaderRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, dealer.id && /*#__PURE__*/React.createElement(Input, {\n    name: \"id\",\n    type: \"hidden\",\n    value: dealer.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"styled-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"company_name\",\n    type: \"text\",\n    value: dealer.company_name,\n    label: \"Dealer Name\",\n    defaultText: \"Dealer Name\",\n    required: true,\n    error: {\n      'empty': \"Please enter Dealer Name\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    type: \"email\",\n    regex: \"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\",\n    value: dealer.email,\n    label: \"Main Dealer User Email\",\n    defaultText: \"Main Dealer User Email\",\n    required: true,\n    error: {\n      'invalid': \"Please enter valid Email address\",\n      'empty': \"Please enter Main Dealer User Email\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"contact_email\",\n    type: \"email\",\n    regex: \"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\",\n    value: dealer.contact_email,\n    label: \"Dealer Contact Email\",\n    defaultText: \"Dealer Contact Email\",\n    required: true,\n    error: {\n      'invalid': \"Please enter valid Email address\",\n      'empty': \"Please enter Dealer Contact Email\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"phone\",\n    type: \"number\",\n    value: dealer.phone,\n    label: \"Phone\",\n    defaultText: \"Phone\",\n    maxLength: 10,\n    required: true,\n    error: {\n      'invalid': \"Please enter number only\",\n      'empty': \"Please enter Phone number\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }, \"ADDRESS\"), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"street\",\n    type: \"text\",\n    value: dealer.street,\n    label: \"Street\",\n    defaultText: \"Street\",\n    required: true,\n    error: {\n      'empty': \"Please enter Street\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"City\",\n    type: \"text\",\n    value: dealer.city,\n    label: \"City\",\n    defaultText: \"City\",\n    required: true,\n    error: {\n      'empty': \"Please enter city\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 29\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: dealer.state,\n    placeholder: \"State\",\n    onChange: e => setDealer({ ...dealer,\n      state: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 33\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"dummy_test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  }, \"dummy_test\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"dummy_test_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  }, \"dummy_test_1\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"dummy_test_2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 33\n    }\n  }, \"dummy_test_2\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"select-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"main-logo\",\n    src: IconDownArrow,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"zip\",\n    type: \"number\",\n    value: dealer.zip,\n    label: \"Zip Code\",\n    defaultText: \"Zip Code\",\n    maxLength: 6,\n    required: true,\n    error: {\n      'empty': \"Please enter zip code\"\n    },\n    validationResult: validationResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"secondary\",\n    onClick: () => handleArrowBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"secondary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, dealer.id ? 'Update' : 'Add'))));\n}\n\nconst mapStateToProps = state => ({\n  selectedDealer: state.admin.selectedDealer\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateDealer: () => dispatch(updateDealer())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddDealer);","map":{"version":3,"sources":["/home/freedom/Music/tcp2.0-frontend/src/screens/Admin/2.0/AddDealer.js"],"names":["React","useState","connect","Form","getFromData","Header","HeaderLeft","HeaderCenter","HeaderRight","TCPLogo","IconDownArrow","IconArrowLeft","updateDealer","Input","AddDealer","props","history","selectedDealer","emptyObj","id","company_name","email","contact_email","phone","street","city","state","zip","dealer","setDealer","validationResult","setValidationResult","handleArrowBack","push","handleSubmit","evt","preventDefault","formData","console","log","e","target","value","mapStateToProps","admin","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport { getFromData } from '../../../components/commons/utility';\nimport Header, { HeaderLeft, HeaderCenter, HeaderRight } from '../../../components/Dealer/Header';\nimport { TCPLogo, IconDownArrow, IconArrowLeft } from '../../../assets/images';\nimport { updateDealer } from '../../../redux/actions/admin';\nimport Input from '../../../components/commons/input';\n\nfunction AddDealer(props) {\n\n    const {\n        history,\n        selectedDealer\n    } = props;\n\n    const emptyObj = {\n        id: null,\n        company_name: null,\n        email: null,\n        contact_email: null,\n        phone: null,\n        street: null,\n        city: null,\n        state: null,\n        zip: null,\n    }\n\n    const [dealer, setDealer] = useState(selectedDealer ? selectedDealer : emptyObj);\n    const [validationResult, setValidationResult] = useState(null);\n\n    const handleArrowBack = () => {\n        history.push('/admin/dealers')\n    }\n\n    const handleSubmit = evt => {\n        \n        evt.preventDefault();\n        const formData = getFromData(evt);\n\n        console.log(formData);\n\n        setValidationResult(formData.validationResult);\n\n    }\n\n    return (\n        <div className=\"dealer\">\n\n            <Header>\n                <HeaderLeft>\n                    <img src={IconArrowLeft} onClick={() => handleArrowBack()} alt=\"\" />\n                </HeaderLeft>\n                <HeaderCenter>\n                    <div className=\"header-main\">\n                        <img className=\"main-logo\" src={TCPLogo} alt=\"\" />\n                    </div>\n                </HeaderCenter>\n                <HeaderRight></HeaderRight>\n            </Header>\n\n            <form onSubmit={(e) => handleSubmit(e)} noValidate>\n                {dealer.id && \n                    <Input \n                        name=\"id\" \n                        type=\"hidden\"\n                        value={dealer.id} \n                    />\n                }\n                <div className=\"container\">\n                    <div className=\"styled-form\">\n                        <Form.Group className=\"mb-18\">\n                            <Input \n                                name=\"company_name\" \n                                type=\"text\" \n                                value={dealer.company_name} \n                                label=\"Dealer Name\"\n                                defaultText = \"Dealer Name\"\n                                required = {true}\n                                error = {{\n                                    'empty': \"Please enter Dealer Name\"\n                                }}\n                                validationResult = {validationResult}\n                            />\n                        </Form.Group>\n                        <div className=\"box\">\n                            <Form.Group className=\"mb-18\">\n                                <Input \n                                    name=\"email\" \n                                    type=\"email\"\n                                    regex = \"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\"\n                                    value={dealer.email} \n                                    label=\"Main Dealer User Email\"\n                                    defaultText = \"Main Dealer User Email\"\n                                    required = {true}\n                                    error = {{\n                                        'invalid': \"Please enter valid Email address\",\n                                        'empty': \"Please enter Main Dealer User Email\"\n                                    }}\n                                    validationResult = {validationResult}\n                                />\n                            </Form.Group>\n                            <Form.Group className=\"mb-18\">\n                                <Input \n                                    name=\"contact_email\" \n                                    type=\"email\"\n                                    regex = \"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\"\n                                    value={dealer.contact_email} \n                                    label=\"Dealer Contact Email\"\n                                    defaultText = \"Dealer Contact Email\"\n                                    required = {true}\n                                    error = {{\n                                        'invalid': \"Please enter valid Email address\",\n                                        'empty': \"Please enter Dealer Contact Email\"\n                                    }}\n                                    validationResult = {validationResult}\n                                />\n                            </Form.Group>\n                        </div>\n                        <Form.Group className=\"mb-18\">\n                            <Input \n                                name=\"phone\" \n                                type=\"number\"\n                                value={dealer.phone} \n                                label=\"Phone\"\n                                defaultText = \"Phone\"\n                                maxLength = {10}\n                                required = {true}\n                                error = {{\n                                    'invalid': \"Please enter number only\",\n                                    'empty': \"Please enter Phone number\"\n                                }}\n                                validationResult = {validationResult}\n                            />\n                        </Form.Group>\n                        <span className=\"divider\"></span>\n                        <span className=\"title\">ADDRESS</span>\n                        <Form.Group className=\"mb-18\">\n                            <Input \n                                name=\"street\" \n                                type=\"text\"\n                                value={dealer.street} \n                                label=\"Street\"\n                                defaultText = \"Street\"\n                                required = {true}\n                                error = {{\n                                    'empty': \"Please enter Street\"\n                                }}\n                                validationResult = {validationResult}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-18\">\n                            <Input \n                                name=\"City\" \n                                type=\"text\"\n                                value={dealer.city} \n                                label=\"City\"\n                                defaultText = \"City\"\n                                required = {true}\n                                error = {{\n                                    'empty': \"Please enter city\"\n                                }}\n                                validationResult = {validationResult}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-18\">\n                            <Form.Label>State</Form.Label>\n                            <select value={dealer.state} placeholder=\"State\" onChange={(e) => setDealer({ ...dealer, state: e.target.value })}>\n                                <option value=\"\" disabled selected>State</option>\n                                <option value=\"dummy_test\">dummy_test</option>\n                                <option value=\"dummy_test_1\">dummy_test_1</option>\n                                <option value=\"dummy_test_2\">dummy_test_2</option>\n                            </select>\n                            <span className=\"select-dropdown\">\n                                <img className=\"main-logo\" src={IconDownArrow} alt=\"\" />\n                            </span>\n                        </Form.Group>\n                        <Form.Group className=\"mb-18\">\n                            <Input \n                                name=\"zip\" \n                                type=\"number\"\n                                value={dealer.zip} \n                                label=\"Zip Code\"\n                                defaultText = \"Zip Code\"\n                                maxLength = {6}\n                                required = {true}\n                                error = {{\n                                    'empty': \"Please enter zip code\"\n                                }}\n                                validationResult = {validationResult}\n                            />\n                        </Form.Group>\n                    </div>\n                </div>\n                <div className=\"footer-container\">\n                    <button className=\"secondary\" onClick={() => handleArrowBack()}>Cancel</button>\n                    <button className=\"secondary\" type=\"submit\">{dealer.id ? 'Update' : 'Add'}</button>\n                </div>\n            </form>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    selectedDealer: state.admin.selectedDealer\n});\n\nconst mapDispatchToProps = dispatch => ({\n    updateDealer: () => dispatch(updateDealer())\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddDealer);"]},"metadata":{},"sourceType":"module"}