{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp2.0-frontend/src/screens/Sales/Summary.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Row, Col, Modal } from 'react-bootstrap';\nimport Header from '../../components/Sales/Header';\nimport Footer from '../../components/Sales/Footer';\nimport Header2 from '../../components/Sales/Header2';\nimport { product_options } from '../../assets/options';\nimport { IconHome, IconDelete, IconEnvelops } from '../../assets/images';\nimport { clearCustomer, sendAll, removeProduct, addProduct, changeCustomer, emailValidateRequest, resentSuccessRequest } from '../../redux/actions/customer';\nimport Loader from 'shared/Loader';\n\nclass SummaryScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      backModal: false,\n      sentModal: false,\n      confirmModal: false\n    };\n\n    this.onDeleteProduct = index => {\n      this.props.removeProduct(index);\n    };\n\n    this.onAddSlip = () => {\n      const {\n        products\n      } = this.props.customer;\n      const count = products.length;\n\n      if (count >= 2) {\n        return;\n      }\n\n      this.props.addProduct();\n      this.props.history.replace(`/product/${count}`);\n    };\n\n    this.handleModalShow = () => {\n      this.setState({\n        sentModal: true\n      });\n    };\n\n    this.handleModalClose = () => {\n      this.setState({\n        sentModal: false\n      }); // this.props.clearCustomer();\n      // this.props.history.replace('/');\n    };\n\n    this.handleBackModalClose = () => {\n      this.setState({\n        backModal: false\n      });\n    };\n\n    this.handleBackModalYes = () => {\n      this.props.clearCustomer();\n      this.props.history.replace('/');\n    };\n\n    this.handleBackConfirmModalNo = () => {\n      this.setState({\n        confirmModal: false\n      });\n    };\n\n    this.handleBackConfirmModalYes = () => {\n      const {\n        history,\n        changeCustomer\n      } = this.props;\n      this.handleBackConfirmModalNo();\n      const {\n        contact,\n        products\n      } = this.props.customer;\n      let data = {\n        contact: contact,\n        products: products\n      };\n      this.props.sendAll(data, this.handleModalShow, 'new-customer', history, {\n        changeCustomer: changeCustomer,\n        sentFirstTimeTrue: this.sentFirstTimeTrue\n      }); // this.handleModalShow();\n      // this.props.changeCustomer({ sent: true });\n    };\n\n    this.sentFirstTimeTrue = () => {\n      const {\n        resentSuccessRequest\n      } = this.props;\n      resentSuccessRequest(); // this.setState({\n      //     sentOneTime: true\n      // })\n    };\n\n    this.renderModals = () => {\n      const {\n        sent,\n        order_type\n      } = this.props.customer.contact;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n        show: this.state.backModal,\n        onHide: this.handleBackModalClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      }, sent ? \"Returning to the Start Screen will prevent you from making additional changes and re-sending these documents.\" : \"Returning to the Start Screen will cause you to lose all progress on this customer.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }, \"Do you wish to continue?\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.handleBackModalClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }\n      }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.handleBackModalYes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }\n      }, \"Yes\"))), /*#__PURE__*/React.createElement(Modal, {\n        show: this.state.confirmModal,\n        onHide: this.handleBackConfirmModalNo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }, order_type === 1 ? \"Would you like to send the credit application and sales slip(s) to the customer to be signed?\" : \"Would you like to send the sales slip(s) to the customer to be signed?\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.handleBackConfirmModalNo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }\n      }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.handleBackConfirmModalYes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }\n      }, \"Yes\"))), /*#__PURE__*/React.createElement(Modal, {\n        show: this.state.sentModal,\n        onHide: this.handleModalClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }\n      }, \"Customer has been sent the documents associated with this order. To edit these documents, please make the desired changes and press the send to customer button again. To start a new order, please press the home button.\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.handleModalClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }\n      }, \"Close\"))));\n    };\n  }\n\n  componentDidMount() {\n    const {\n      emailValidateRequest,\n      customer\n    } = this.props;\n    const emailCheck = emailValidateRequest({\n      email: customer.contact.main_app.email\n    });\n    emailCheck.then(() => {\n      if (customer.contact.co_enabled) {\n        emailValidateRequest({\n          email: customer.contact.co_app.email\n        });\n      }\n    }); // if (this.props.customer.contact.name === '') {\n    //     this.props.history.replace('/');\n    // }\n  }\n\n  eventChangeCustomer() {\n    this.props.changeCustomer({\n      sent: true\n    });\n  }\n\n  render() {\n    const {\n      contact,\n      products,\n      isCustomerFormLoading,\n      isEmailNotValid,\n      isEmailCheckLoading,\n      sentOneTime\n    } = this.props.customer;\n    const {\n      order_type,\n      main_app,\n      sent\n    } = contact;\n    const {\n      name,\n      street,\n      city,\n      state,\n      email,\n      zip,\n      cell_phone\n    } = main_app;\n    const unsaved = products.filter(product => product.saved === false).length > 0;\n    let buttonClassValue = unsaved ? \"button product-button\" : \"button product-button active\";\n    buttonClassValue = isEmailCheckLoading || isEmailNotValid ? `${buttonClassValue} not-allowed` : buttonClassValue;\n    let ifBalanceZero = false;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sales\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, isCustomerFormLoading && /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 44\n      }\n    }), this.renderModals(), /*#__PURE__*/React.createElement(Header, {\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: IconHome,\n      alt: \"home\",\n      className: \"icon-home\",\n      onClick: () => this.setState({\n        backModal: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"summary-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header2, {\n      id: -2,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"key\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 37\n      }\n    }, \"Name:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 37\n      }\n    }, name)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"key\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 37\n      }\n    }, \"Street:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 37\n      }\n    }, street), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"key\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 37\n      }\n    }, \"City:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 37\n      }\n    }, city)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"key\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 37\n      }\n    }, \"State:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 37\n      }\n    }, state)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"key\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 37\n      }\n    }, \"Zip:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 37\n      }\n    }, zip)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"key\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 37\n      }\n    }, \"Email:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 37\n      }\n    }, email)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"key\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 37\n      }\n    }, \"Phone:\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 37\n      }\n    }, cell_phone)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 33\n      }\n    }, isEmailCheckLoading && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 65\n      }\n    }, \"Email is verifying\"), !isEmailCheckLoading && isEmailNotValid && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 41\n      }\n    }, \"Please check email address\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"documents\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }, \"Your Order Includes the Following Documents\"), order_type === 1 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 37\n      }\n    }, \"1.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 37\n      }\n    }, \"Credit Application\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"split\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 33\n      }\n    })), products.map((product, index) => {\n      const {\n        product_type,\n        price,\n        tax,\n        coupon,\n        total_discount,\n        add_discount,\n        finance_period,\n        check,\n        cash_credit\n      } = product;\n      const net_price = parseFloat(price) * (100 - parseFloat(total_discount)) / 100 - parseFloat(add_discount) - parseInt(coupon);\n      const balance = net_price + parseFloat(tax);\n      const down_payment = parseFloat(cash_credit) + parseFloat(check);\n      const unpaid_balance = balance - down_payment;\n\n      if (unpaid_balance.toFixed(2) < 0 || balance.toFixed(2) <= 0) {\n        ifBalanceZero = true;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"app-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 41\n        }\n      }, order_type === 1 ? index + 2 : index + 1, \".\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 49\n        }\n      }, product_options[product_type], \" - $\", balance.toFixed(2)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"subtitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 49\n        }\n      }, finance_period, \" months\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"delete-btn\",\n        onClick: () => this.onDeleteProduct(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: IconDelete,\n        alt: \"view\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 53\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"split\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 37\n        }\n      }));\n    }), unsaved && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 29\n      }\n    }, \"This order includes incomplete Sales Slips that have not been added to this order. Please Cancel unwanted Sales Slips or complete and add them to the order to continue.\"), sent && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 29\n      }\n    }, \"Documents have been sent to Customer.\"))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: products.length < 2 ? \"button product-button active\" : \"button product-button\",\n      onClick: this.onAddSlip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 34\n      }\n    }, \"Add New Sales Slip\"))), /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: buttonClassValue,\n      onClick: () => {\n        if (!(isEmailCheckLoading || isEmailNotValid || ifBalanceZero)) {\n          if (unsaved) {\n            return;\n          }\n\n          this.setState({\n            confirmModal: true\n          });\n        }\n      },\n      disabled: isEmailCheckLoading || isEmailNotValid || ifBalanceZero,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: IconEnvelops,\n      alt: \"send\",\n      style: {\n        width: 26,\n        height: 21\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 33\n      }\n    }, ifBalanceZero ? 'Please check balance' : isEmailCheckLoading || isEmailNotValid ? 'Email is not valid' : sentOneTime ? 'Re-send to Customer' : 'Send to Customer'))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  customer: state.customer\n});\n\nexport default connect(mapStateToProps, {\n  clearCustomer,\n  sendAll,\n  removeProduct,\n  addProduct,\n  changeCustomer,\n  emailValidateRequest,\n  resentSuccessRequest\n})(SummaryScreen);","map":{"version":3,"sources":["/home/freedom/Music/tcp2.0-frontend/src/screens/Sales/Summary.js"],"names":["React","Component","connect","Button","Row","Col","Modal","Header","Footer","Header2","product_options","IconHome","IconDelete","IconEnvelops","clearCustomer","sendAll","removeProduct","addProduct","changeCustomer","emailValidateRequest","resentSuccessRequest","Loader","SummaryScreen","state","backModal","sentModal","confirmModal","onDeleteProduct","index","props","onAddSlip","products","customer","count","length","history","replace","handleModalShow","setState","handleModalClose","handleBackModalClose","handleBackModalYes","handleBackConfirmModalNo","handleBackConfirmModalYes","contact","data","sentFirstTimeTrue","renderModals","sent","order_type","componentDidMount","emailCheck","email","main_app","then","co_enabled","co_app","eventChangeCustomer","render","isCustomerFormLoading","isEmailNotValid","isEmailCheckLoading","sentOneTime","name","street","city","zip","cell_phone","unsaved","filter","product","saved","buttonClassValue","ifBalanceZero","map","product_type","price","tax","coupon","total_discount","add_discount","finance_period","check","cash_credit","net_price","parseFloat","parseInt","balance","down_payment","unpaid_balance","toFixed","width","height","marginLeft","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Row, Col, Modal } from 'react-bootstrap';\n\nimport Header from '../../components/Sales/Header';\nimport Footer from '../../components/Sales/Footer';\nimport Header2 from '../../components/Sales/Header2';\n\nimport { product_options } from '../../assets/options';\nimport { IconHome, IconDelete, IconEnvelops } from '../../assets/images';\n\nimport { \n    clearCustomer, \n    sendAll, \n    removeProduct,\n    addProduct, \n    changeCustomer,\n    emailValidateRequest,\n    resentSuccessRequest\n} from '../../redux/actions/customer';\nimport Loader from 'shared/Loader';\n\nclass SummaryScreen extends Component {\n\n    state = {\n        backModal: false,\n        sentModal: false,\n        confirmModal: false,\n    }\n\n    componentDidMount() {\n        const { emailValidateRequest, customer } = this.props;\n        const emailCheck = emailValidateRequest({ email: customer.contact.main_app.email });\n        emailCheck.then(() => {\n            if(customer.contact.co_enabled) {\n                emailValidateRequest({ email: customer.contact.co_app.email });\n            }\n        })\n        \n        \n        // if (this.props.customer.contact.name === '') {\n        //     this.props.history.replace('/');\n        // }\n    }\n\n    onDeleteProduct = (index) => {\n        this.props.removeProduct(index);\n    }\n\n    onAddSlip = () => {\n        const { products } = this.props.customer;\n        const count = products.length;\n        if (count >= 2) {\n            return;\n        }\n\n        this.props.addProduct();\n        this.props.history.replace(`/product/${count}`);\n    }\n\n    handleModalShow = () => {\n        this.setState({ sentModal: true });\n    }\n\n    handleModalClose = () => {\n        this.setState({ sentModal: false });\n        // this.props.clearCustomer();\n        // this.props.history.replace('/');\n    }\n\n    handleBackModalClose = () => {\n        this.setState({ backModal: false });\n    }\n\n    handleBackModalYes = () => {\n        this.props.clearCustomer();\n        this.props.history.replace('/');\n    }\n\n    handleBackConfirmModalNo = () => {\n        this.setState({ confirmModal: false });\n    }\n\n    eventChangeCustomer() {\n        this.props.changeCustomer({ sent: true });\n    }\n\n    handleBackConfirmModalYes = () => {\n        const { history, changeCustomer } = this.props;\n        this.handleBackConfirmModalNo();\n        const { contact, products } = this.props.customer;\n        let data = {\n            contact: contact,\n            products: products\n        };\n\n        this.props.sendAll(data, this.handleModalShow, 'new-customer', history, { changeCustomer: changeCustomer, sentFirstTimeTrue: this.sentFirstTimeTrue});\n        // this.handleModalShow();\n       // this.props.changeCustomer({ sent: true });\n    }\n\n    sentFirstTimeTrue = () => {\n        const { resentSuccessRequest } = this.props;\n        resentSuccessRequest();\n        // this.setState({\n        //     sentOneTime: true\n        // })\n    }\n\n    renderModals = () => {\n        const { sent, order_type } = this.props.customer.contact;\n        return (\n            <>\n                <Modal show={this.state.backModal} onHide={this.handleBackModalClose}>\n                    <Modal.Header closeButton></Modal.Header>\n                    <Modal.Body>\n                        <p>{sent ? \"Returning to the Start Screen will prevent you from making additional changes and re-sending these documents.\" : \"Returning to the Start Screen will cause you to lose all progress on this customer.\" }</p>\n                        <p>Do you wish to continue?</p>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleBackModalClose}>\n                            No\n                        </Button>\n                        <Button variant=\"primary\" onClick={this.handleBackModalYes}>\n                            Yes\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n                \n                <Modal show={this.state.confirmModal} onHide={this.handleBackConfirmModalNo}>\n                    <Modal.Header closeButton></Modal.Header>\n                    <Modal.Body>\n                        { order_type === 1 ?\n                            \"Would you like to send the credit application and sales slip(s) to the customer to be signed?\" :\n                            \"Would you like to send the sales slip(s) to the customer to be signed?\" }\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleBackConfirmModalNo}>\n                            No\n                        </Button>\n                        <Button variant=\"primary\" onClick={this.handleBackConfirmModalYes}>\n                            Yes\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Modal show={this.state.sentModal} onHide={this.handleModalClose}>\n                    <Modal.Header closeButton></Modal.Header>\n                    <Modal.Body>Customer has been sent the documents associated with this order. To edit these documents, please make the desired changes and press the send to customer button again. To start a new order, please press the home button.</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleModalClose}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        )\n    }\n\n    render() {\n        const { contact, products, isCustomerFormLoading, isEmailNotValid, isEmailCheckLoading, sentOneTime } = this.props.customer;\n        const { order_type, main_app , sent } = contact;\n        const { name, street, city, state, email, zip, cell_phone } = main_app;\n      \n        const unsaved = products.filter(product => product.saved === false).length > 0;\n        let buttonClassValue = unsaved ? \"button product-button\" : \"button product-button active\";\n        buttonClassValue = (isEmailCheckLoading || isEmailNotValid) ? `${buttonClassValue} not-allowed` : buttonClassValue;\n        let ifBalanceZero = false;\n        return (\n            <div className=\"sales\">\n                { isCustomerFormLoading && <Loader /> }\n                { this.renderModals() }  \n                <Header history={this.props.history}>\n                    <img src={IconHome} alt=\"home\" className=\"icon-home\" onClick={() => this.setState({ backModal: true })} />\n                </Header>\n                <div className=\"summary-page\">\n                    <Header2\n                        id={-2}\n                        history={this.props.history}\n                    />\n                    <div className=\"contact\">\n                        <div className=\"wrapper\">\n                            <div>\n                                <div>\n                                    <span className=\"key\">Name:</span>\n                                    <span className=\"value\">{name}</span>\n                                </div>\n                                <div>\n                                    <span className=\"key\">Street:</span>\n                                    <span className=\"value\">{street}</span>\n                                    <span className=\"key\">City:</span>\n                                    <span className=\"value\">{city}</span>\n                                </div>\n                                <div>\n                                    <span className=\"key\">State:</span>\n                                    <span className=\"value\">{state}</span>\n                                </div>\n                                <div>\n                                    <span className=\"key\">Zip:</span>\n                                    <span className=\"value\">{zip}</span>\n                                </div>\n                                <div>\n                                    <span className=\"key\">Email:</span>\n                                    <span className=\"value\">{email}</span>\n                                </div>\n                                <div>\n                                    <span className=\"key\">Phone:</span>\n                                    <span className=\"value\">{cell_phone}</span>\n                                </div>\n                                <div>\n                                    {\n                                        isEmailCheckLoading &&  <span className=\"text-danger\">Email is verifying</span>\n                                    }\n                                    {   !isEmailCheckLoading && isEmailNotValid &&\n                                        <span className=\"text-danger\">Please check email address</span>\n                                    }\n                                </div>\n\n                            </div>\n                            {/* { co_enabled && (\n                                <div className=\"summary-contact-co\">\n                                    <div style={{ marginLeft: 10, marginBottom: 3 }}>Co-applicant</div>\n                                    <div className=\"split\"></div>\n                                    { co_separate && (\n                                        <div>\n                                            <div style={{ marginTop: 10 }}>- Applicant completing form for co-applicant</div>\n                                            <div style={{ marginTop: 5 }}>- Co-applicant does not have seperate email address</div>\n                                        </div>\n                                    ) }\n                                    { !co_separate && (\n                                        <div>\n                                            <div className=\"email\">\n                                                <span className=\"email-label\">Email:</span>\n                                                <span>{co_email}</span>\n                                            </div>\n                                            \n                                            { co_complete ? (\n                                                <div className=\"description\">Applicant completing form for co-applicant (other than signatures)</div>\n                                            ) : (\n                                                <div className=\"description\">Applicant and co-applicant will each complete their own sections of each form</div>\n                                            )}\n                                        </div>\n                                    ) }\n                                </div>\n                            ) } */}\n                        </div>\n                    </div>\n                    <div className=\"documents\">\n                        <div className=\"title\">Your Order Includes the Following Documents</div>\n                        { order_type === 1 && (\n                            <>\n                                <div className=\"app-item\">\n                                    <span className=\"number\">1.</span>\n                                    <div className=\"details\">\n                                        Credit Application\n                                    </div>\n                                </div>\n                                <div className=\"split\"></div>\n                            </>\n                        ) }\n                        { products.map((product, index) => {\n                            const { \n                                product_type, price, tax,\n                                coupon, total_discount, add_discount,\n                                finance_period,\n                                check,\n                                cash_credit\n                            } = product;\n                            const net_price = parseFloat(price) * (100 - parseFloat(total_discount)) / 100 - parseFloat(add_discount) - parseInt(coupon)\n                            const balance = net_price + parseFloat(tax);\n                            const down_payment = parseFloat(cash_credit) + parseFloat(check);\n                            const unpaid_balance = balance - down_payment;\n                            if(unpaid_balance.toFixed(2) < 0 || balance.toFixed(2) <= 0 ) {\n                                ifBalanceZero = true;\n                            }\n                            \n                            return (\n                                <div key={index}>\n                                    <div className=\"app-item\">\n                                        <span className=\"number\">{ order_type === 1 ? index+2 : index+1}.</span>\n                                        <div className=\"details\">\n                                            <div className=\"item\">\n                                                <div>{product_options[product_type]} - ${balance.toFixed(2)}</div>\n                                                <div className=\"subtitle\">{finance_period} months</div>\n                                                <div className=\"delete-btn\" onClick={() => this.onDeleteProduct(index)}>\n                                                    <img src={IconDelete} alt=\"view\"></img>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"split\"></div>\n                                </div>\n                            )\n                        }) }\n                       \n                        {/* <div className=\"total\">\n                            <div>Total:</div>\n                            <div>Price: ${total_price.toFixed(2)}</div>\n                            <div>Unpaid Balance: ${total_unpaid.toFixed(2)}</div>\n                            <div>Monthly: ${total_monthly.toFixed(2)}</div>\n                        </div> */}\n\n                        { unsaved && (\n                            <div className=\"warning\">\n                                This order includes incomplete Sales Slips that have not been added to this order. Please Cancel unwanted Sales Slips or complete and add them to the order to continue.\n                            </div>\n                        ) }\n\n                        { sent && (\n                            <div className=\"info\">\n                                Documents have been sent to Customer.\n                            </div>\n                        )}\n                    </div>\n                </div>\n                <Footer>\n                    <Row>\n                        <Col xs={6}>\n                            <Button className={products.length < 2 ? \"button product-button active\" : \"button product-button\"} onClick={this.onAddSlip}>\n                                 <span>Add New Sales Slip</span>\n                            </Button>\n                        </Col>\n                        <Col xs={6}>\n                            <Button\n                                className={ buttonClassValue }\n                                onClick={() => {\n                                    if(!(isEmailCheckLoading || isEmailNotValid || ifBalanceZero)) {\n                                        if (unsaved) {\n                                            return;\n                                        }\n                                        this.setState({ confirmModal: true })\n                                    }                                  \n                                }}\n                                disabled={ ((isEmailCheckLoading || isEmailNotValid || ifBalanceZero)) }>\n                                <img src={IconEnvelops} alt=\"send\" style={{ width: 26, height: 21 }} />\n                                <span style={{ marginLeft: 10 }}>{\n                                    ifBalanceZero ? 'Please check balance' :\n                                ((isEmailCheckLoading || isEmailNotValid)) ? 'Email is not valid' : (sentOneTime ? 'Re-send to Customer': 'Send to Customer') }</span>\n                            </Button>\n                        </Col>\n                    </Row>\n                </Footer>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    customer: state.customer\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearCustomer,\n        sendAll,\n        removeProduct,\n        addProduct,\n        changeCustomer,\n        emailValidateRequest,\n        resentSuccessRequest\n    }\n)(SummaryScreen);"]},"metadata":{},"sourceType":"module"}