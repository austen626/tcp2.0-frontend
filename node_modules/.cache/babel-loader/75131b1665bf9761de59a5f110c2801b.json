{"ast":null,"code":"import API from '../../api';\nexport const SET_AVATAR = \"SET_AVATAR\";\nexport function login(body) {\n  return async function (dispatch) {\n    try {\n      const response = await API.post('accounts/login', body);\n      return response.data;\n    } catch (error) {\n      return error.response.data;\n    }\n  };\n}\nexport function loginVerify(body) {\n  return async function (dispatch) {\n    try {\n      const response = await API.post('accounts/login-verify', body);\n      return response.data;\n    } catch (error) {\n      return error.response.data;\n    }\n  };\n}\nexport function sendAgain(body) {\n  return async function (dispatch) {\n    try {\n      const response = await API.post('accounts/send-again', body);\n      return response.data;\n    } catch (error) {\n      return error.response.data;\n    }\n  };\n}\nexport function register(body) {\n  return async function (dispatch) {\n    try {\n      const response = await API.post('accounts/invite-register', body);\n      return response.data;\n    } catch (error) {\n      return error.response.data;\n    }\n  };\n}\nexport function registerVerify(body) {\n  return async function (dispatch) {\n    try {\n      const response = await API.post('accounts/register-verify', body);\n      return response.data;\n    } catch (error) {\n      return error.response.data;\n    }\n  };\n}\nexport function codeVerify(body) {\n  return async function (dispatch) {\n    try {\n      const response = await API.post('accounts/code-verify', body);\n      return response.data;\n    } catch (error) {\n      return error.response.data;\n    }\n  };\n}\nexport function forgotCodeVerify(body) {\n  return async function (dispatch) {\n    try {\n      const response = await API.post('accounts/code-verify-forgot', body);\n      return response.data;\n    } catch (error) {\n      return error.response.data;\n    }\n  };\n}\nexport function forgotPassword(body) {\n  return async function (dispatch) {\n    try {\n      const response = await API.post('accounts/reset', body);\n      return response.data;\n    } catch (error) {\n      return error.response.data;\n    }\n  };\n}\nexport function resetPassword(body) {\n  return async function (dispatch) {\n    try {\n      const response = await API.post('accounts/reset-password', body);\n      return response.data;\n    } catch (error) {\n      return error.response.data;\n    }\n  };\n}\nexport function getMe() {\n  return async function (dispatch) {\n    try {\n      const response = await API.get('accounts/me');\n      dispatch({\n        type: SET_AVATAR,\n        payload: response.data.avatar\n      });\n    } catch (error) {// return error.response.data;\n    }\n  };\n}","map":{"version":3,"sources":["/home/freedom/Music/tcp-frontend/src/redux/actions/auth.js"],"names":["API","SET_AVATAR","login","body","dispatch","response","post","data","error","loginVerify","sendAgain","register","registerVerify","codeVerify","forgotCodeVerify","forgotPassword","resetPassword","getMe","get","type","payload","avatar"],"mappings":"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","sourcesContent":["import API from '../../api';\n\nexport const SET_AVATAR = \"SET_AVATAR\";\n\nexport function login(body) {\n    return async function(dispatch) {\n        try {\n            const response = await API.post('accounts/login', body);\n            return response.data\n        } catch (error) {\n            return error.response.data;\n        }\n    }\n}\n\nexport function loginVerify(body) {\n    return async function(dispatch) {\n        try {\n            const response = await API.post('accounts/login-verify', body);\n            return response.data\n        } catch (error) {\n            return error.response.data;\n        }\n    }\n}\n\nexport function sendAgain(body) {\n    return async function(dispatch) {\n        try {\n            const response = await API.post('accounts/send-again', body);\n            return response.data\n        } catch (error) {\n            return error.response.data;\n        }\n    }   \n}\n\nexport function register(body) {\n    return async function(dispatch) {\n        try {\n            const response = await API.post('accounts/invite-register', body);\n            return response.data\n        } catch (error) {\n            return error.response.data;\n        }\n    }   \n}\n\nexport function registerVerify(body) {\n    return async function(dispatch) {\n        try {\n            const response = await API.post('accounts/register-verify', body);\n            return response.data\n        } catch (error) {\n            return error.response.data;\n        }\n    }\n}\n\nexport function codeVerify(body) {\n    return async function(dispatch) {\n        try {\n            const response = await API.post('accounts/code-verify', body);\n            return response.data\n        } catch (error) {\n            return error.response.data;\n        }\n    }\n}\n\nexport function forgotCodeVerify(body) {\n    return async function(dispatch) {\n        try {\n            const response = await API.post('accounts/code-verify-forgot', body);\n            return response.data\n        } catch (error) {\n            return error.response.data;\n        }\n    }\n}\n\nexport function forgotPassword(body) {\n    return async function(dispatch) {\n        try {\n            const response = await API.post('accounts/reset', body);\n            return response.data\n        } catch (error) {\n            return error.response.data;\n        }\n    }\n}\n\nexport function resetPassword(body) {\n    return async function(dispatch) {\n        try {\n            const response = await API.post('accounts/reset-password', body);\n            return response.data\n        } catch (error) {\n            return error.response.data;\n        }\n    }\n}\n\nexport function getMe() {\n    return async function(dispatch) {\n        try {\n            const response = await API.get('accounts/me');\n            dispatch({\n                type: SET_AVATAR,\n                payload: response.data.avatar\n            });\n        } catch (error) {\n            // return error.response.data;\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}