{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp2.0-frontend/src/screens/Admin/2.0/AddDealer.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport Header, { HeaderLeft, HeaderCenter, HeaderRight } from '../../../components/Dealer/Header';\nimport { TCPLogo, IconDownArrow, IconArrowLeft } from '../../../assets/images';\nimport { updateDealer } from '../../../redux/actions/admin';\n\nfunction AddDealer(props) {\n  const {\n    history,\n    selectedDealer\n  } = props;\n  const [dealer, setDealer] = useState({\n    id: null,\n    company_name: null,\n    email: null,\n    contact_email: null,\n    phone: null,\n    street: null,\n    city: null,\n    state: null,\n    zip: null\n  }); // state = {\n  //     id: this.props.selectedDealer.id,\n  //     company_name: this.props.selectedDealer.company_name,\n  //     email: this.props.selectedDealer.email,\n  //     contact_email: this.props.selectedDealer.contact_email,\n  //     phone: this.props.selectedDealer.phone,\n  //     street: this.props.selectedDealer.street,\n  //     city: this.props.selectedDealer.city,\n  //     state: this.props.selectedDealer.state,\n  //     zip: this.props.selectedDealer.zip,\n  // }\n\n  const handleArrowBack = () => {\n    history.push('/admin/dealers');\n  }; // handleAddUpdateDealer = () => {    \n  //     const data = {\n  //         id: this.state.id,\n  //         company_name: this.state.company_name,\n  //         email: this.state.email,\n  //         contact_email: this.state.contact_email,\n  //         phone: this.state.phone,\n  //         street: this.state.street,\n  //         city: this.state.city,\n  //         state: this.state.state,\n  //         zip: this.state.zip,\n  //     }\n  //     this.props.updateDealer(data)\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dealer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HeaderLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: IconArrowLeft,\n    onClick: () => handleArrowBack(),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(HeaderCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"main-logo\",\n    src: TCPLogo,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(HeaderRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"styled-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: this.handleSearchClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, \"Dealer Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    value: dealer.company_name,\n    placeholder: \"Dealer Name\",\n    onChange: e => setDealer({ ...dealer,\n      company_name: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"secondary\",\n    onClick: this.handleArrowBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"secondary\",\n    onClick: this.handleAddUpdateDealer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, id ? 'Update' : 'Add')));\n}\n\nconst mapStateToProps = state => ({\n  selectedDealer: state.admin.selectedDealer\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateDealer: () => dispatch(updateDealer())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddDealer);","map":{"version":3,"sources":["/home/freedom/Music/tcp2.0-frontend/src/screens/Admin/2.0/AddDealer.js"],"names":["React","useState","useEffect","connect","Form","Header","HeaderLeft","HeaderCenter","HeaderRight","TCPLogo","IconDownArrow","IconArrowLeft","updateDealer","AddDealer","props","history","selectedDealer","dealer","setDealer","id","company_name","email","contact_email","phone","street","city","state","zip","handleArrowBack","push","handleSearchClick","e","target","value","handleAddUpdateDealer","mapStateToProps","admin","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport Header, { HeaderLeft, HeaderCenter, HeaderRight } from '../../../components/Dealer/Header';\nimport { TCPLogo, IconDownArrow, IconArrowLeft } from '../../../assets/images';\nimport { updateDealer } from '../../../redux/actions/admin';\n\nfunction AddDealer(props) {\n\n    const {\n        history,\n        selectedDealer\n    } = props;\n\n    const [dealer, setDealer] = useState({\n        id: null,\n        company_name: null,\n        email: null,\n        contact_email: null,\n        phone: null,\n        street: null,\n        city: null,\n        state: null,\n        zip: null,\n    });\n\n    // state = {\n    //     id: this.props.selectedDealer.id,\n    //     company_name: this.props.selectedDealer.company_name,\n    //     email: this.props.selectedDealer.email,\n    //     contact_email: this.props.selectedDealer.contact_email,\n    //     phone: this.props.selectedDealer.phone,\n    //     street: this.props.selectedDealer.street,\n    //     city: this.props.selectedDealer.city,\n    //     state: this.props.selectedDealer.state,\n    //     zip: this.props.selectedDealer.zip,\n    // }\n\n    const handleArrowBack = () => {       \n        history.push('/admin/dealers')\n    }\n\n    // handleAddUpdateDealer = () => {    \n        \n    //     const data = {\n    //         id: this.state.id,\n    //         company_name: this.state.company_name,\n    //         email: this.state.email,\n    //         contact_email: this.state.contact_email,\n    //         phone: this.state.phone,\n    //         street: this.state.street,\n    //         city: this.state.city,\n    //         state: this.state.state,\n    //         zip: this.state.zip,\n    //     }\n\n    //     this.props.updateDealer(data)\n    // }\n    \n    return (\n        <div className=\"dealer\">\n\n            <Header>\n                <HeaderLeft>\n                    <img src={IconArrowLeft} onClick={() => handleArrowBack()} alt=\"\"/>\n                </HeaderLeft>\n                <HeaderCenter>\n                    <div className=\"header-main\">\n                        <img className=\"main-logo\" src={TCPLogo} alt=\"\"/>\n                    </div>\n                </HeaderCenter>\n                <HeaderRight></HeaderRight>\n            </Header>\n\n            <div className=\"container\">                    \n                <div className=\"styled-form\">\n                    <Form onSubmit={this.handleSearchClick}>\n                        <Form.Group className=\"mb-18\">\n                            <Form.Label>Dealer Name</Form.Label>\n                            <Form.Control value={dealer.company_name} placeholder=\"Dealer Name\" onChange={(e) => setDealer({...dealer, company_name: e.target.value })}></Form.Control>\n                        </Form.Group>\n                        {/* <div className=\"box\">\n                            <Form.Group className=\"mb-18\">\n                                <Form.Label>Main Dealer User Email</Form.Label>\n                                <Form.Control value={email} placeholder=\"Main Dealer User Email\" onChange={(e) => this.setState({ email: e.target.value })}></Form.Control>\n                            </Form.Group>\n                            <Form.Group className=\"mb-18\">\n                                <Form.Label>Dealer Contact Email</Form.Label>\n                                <Form.Control value={contact_email} placeholder=\"Dealer Contact Email\" onChange={(e) => this.setState({ contact_email: e.target.value })}></Form.Control>\n                            </Form.Group>\n                        </div>\n                        <Form.Group className=\"mb-18\">\n                            <Form.Label>Phone</Form.Label>\n                            <Form.Control value={phone} placeholder=\"Phone\" onChange={(e) => this.setState({ phone: e.target.value })}></Form.Control>\n                        </Form.Group>\n                        <span className=\"divider\"></span>\n                        <span className=\"title\">ADDRESS</span>\n                        <Form.Group className=\"mb-18\">\n                            <Form.Label>Street</Form.Label>\n                            <Form.Control value={street} placeholder=\"Street\" onChange={(e) => this.setState({ street: e.target.value })}></Form.Control>\n                        </Form.Group>\n                        <Form.Group className=\"mb-18\">\n                            <Form.Label>City</Form.Label>\n                            <Form.Control value={city} placeholder=\"City\" onChange={(e) => this.setState({ city: e.target.value })}></Form.Control>\n                        </Form.Group>\n                        <Form.Group className=\"mb-18\">\n                            <Form.Label>State</Form.Label>\n                            <select value={state} placeholder=\"State\" onChange={(e) => this.setState({ state: e.target.value })}>\n                                <option value=\"\" disabled selected>State</option>\n                                <option value=\"dummy_test\">dummy_test</option>\n                                <option value=\"dummy_test_1\">dummy_test_1</option>\n                                <option value=\"dummy_test_2\">dummy_test_2</option>\n                            </select>\n                            <span className=\"select-dropdown\">\n                                <img className=\"main-logo\" src={IconDownArrow} alt=\"\"/>\n                            </span>\n                        </Form.Group>\n                        <Form.Group className=\"mb-18\">\n                            <Form.Label>Zip Code</Form.Label>\n                            <Form.Control value={zip} placeholder=\"Zip Code\" onChange={(e) => this.setState({ zip: e.target.value })}></Form.Control>\n                        </Form.Group>\n                        <button type=\"submit\" style={{\"display\": \"none\"}} /> */}\n                    </Form>\n                </div>\n            </div>\n\n            <div className=\"footer-container\"> \n                <button className=\"secondary\" onClick={this.handleArrowBack}>Cancel</button>\n                <button className=\"secondary\" onClick={this.handleAddUpdateDealer}>{id ? 'Update' : 'Add'}</button>\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    selectedDealer: state.admin.selectedDealer\n});\n\nconst mapDispatchToProps = dispatch => ({\n    updateDealer: () => dispatch(updateDealer())\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddDealer);"]},"metadata":{},"sourceType":"module"}