{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp-frontend/src/screens/Admin/AdminPreApprovalItem.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport { Button, Modal, Form } from 'react-bootstrap';\nimport Header, { HeaderLeft, HeaderCenter, HeaderRight } from '../../components/Dealer/Header';\nimport { setApplianceFlag } from 'utils/helper';\nimport { IconArrowLeft } from '../../assets/images';\nimport { message as ConstMessage } from 'shared/constant';\nimport { changeSelectedPreApprovalStatus } from '../../redux/actions/admin';\nimport { applianceMap, adminPreapprovalTypes } from './constant';\nimport { ApproveSubmitContainer, ApproveSubmitInnerContainer, CalendarContainer, AgainRequestBlock, AdminProductCheckBlock } from './style';\nimport Loader from 'shared/Loader';\n\nclass PreApprovalItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: null,\n      declinedModalShow: false,\n      deliveryDate: null,\n      approveClicked: false,\n      applianceValue: ConstMessage.NO_CREDIT_CHECK_TEXT,\n      product_type: this.props.item.product_type || 'food',\n      firstType: null,\n      secondType: null,\n      typeSelectionError: '',\n      firstMessage: '',\n      secondMessage: '',\n      finalMessage: this.props.item.message || ''\n    };\n\n    this.handleArrowBack = () => {\n      this.props.history.goBack();\n    };\n\n    this.handleApproveClick = () => {\n      const typeCheckAvailable = this.finalProductType();\n\n      if (typeCheckAvailable) {\n        this.setState({\n          approveClicked: true\n        });\n      } else {\n        this.setState({\n          typeSelectionError: 'Please select atleast one Type'\n        });\n      } // this.props.history.push(`/admin/preapprovals`);\n\n    };\n\n    this.finalProductType = () => {\n      const {\n        firstType,\n        secondType\n      } = this.state;\n      let product_type = null;\n\n      if (firstType === 'yes' && secondType === 'yes') {\n        product_type = 'food, appliance';\n      } else if (firstType === 'yes' && (secondType === 'no' || !secondType)) {\n        product_type = 'food';\n      } else if ((!firstType || firstType === 'no') && secondType === 'yes') {\n        product_type = 'appliance';\n      } else if ((!firstType || firstType === 'no') && (!secondType || secondType === 'no')) {\n        product_type = 'food';\n      }\n\n      return product_type;\n    };\n\n    this.finalMessageCheck = () => {\n      let messageType = '';\n      const {\n        firstMessage,\n        secondMessage\n      } = this.state;\n\n      if (firstMessage !== '' && secondMessage !== '') {\n        messageType = firstMessage + \" #\" + secondMessage;\n      } else if (firstMessage !== '' && secondMessage === '') {\n        messageType = firstMessage + \" #\";\n      } else if (firstMessage === '' && secondMessage !== '') {\n        messageType = \"# \" + secondMessage;\n      }\n\n      return messageType;\n    };\n\n    this.handleDeclineClick = () => {\n      if (this.state.message !== null) {\n        const {\n          history\n        } = this.props;\n        this.props.changeSelectedPreApprovalStatus(this.props.item.id, 2, this.state.message, history, '/admin/preapprovals', {\n          appliance: \"\",\n          earliest_delivery_date: null\n        }); // this.props.history.push(`/admin/preapprovals`);\n      }\n    };\n\n    this.handleModalClose = () => {\n      this.setState({\n        declinedModalShow: false\n      });\n    };\n\n    this.submitPreApproval = () => {\n      const {\n        history\n      } = this.props;\n      const {\n        applianceValue,\n        deliveryDate,\n        firstType,\n        secondType\n      } = this.state;\n      const typeCheckAvailable = this.finalProductType();\n      const messageAvailable = this.finalMessageCheck();\n      console.log(secondType);\n      let statusApproved = 0;\n\n      if (firstType === 'yes' || secondType === 'yes') {\n        statusApproved = 1;\n      } else {\n        statusApproved = 2;\n      }\n\n      const finalDate = deliveryDate ? moment(deliveryDate).format('YYYY-MM-DD') : null;\n      this.props.changeSelectedPreApprovalStatus(this.props.item.id, statusApproved, messageAvailable, history, '/admin/preapprovals', {\n        appliance: applianceValue,\n        earliest_delivery_date: finalDate,\n        product_type: typeCheckAvailable\n      });\n    };\n  }\n\n  componentDidMount() {\n    const checkBoxMeasure = {\n      firstTempCheck: '',\n      secondTempCheck: ''\n    };\n    const productTypeTemp = this.props.item.product_type;\n\n    if (productTypeTemp === \"food\") {\n      checkBoxMeasure.firstTempCheck = 'yes';\n      checkBoxMeasure.secondTempCheck = 'no';\n    } else if (productTypeTemp === \"food, appliance\") {\n      checkBoxMeasure.firstTempCheck = 'yes';\n      checkBoxMeasure.secondTempCheck = 'yes';\n    } else if (productTypeTemp === \"appliance\") {\n      checkBoxMeasure.firstTempCheck = 'no';\n      checkBoxMeasure.secondTempCheck = 'yes';\n    } // this.setState({\n    //     firstType: checkBoxMeasure.firstTempCheck,\n    //     secondType: checkBoxMeasure.secondTempCheck,\n    // })\n\n\n    const productMessage = this.props.item.message;\n    const splitMountMessage = productMessage && productMessage.split(\"#\");\n\n    if (splitMountMessage && splitMountMessage[0]) {\n      this.setState({\n        firstMessage: splitMountMessage[0]\n      });\n    }\n\n    if (splitMountMessage && splitMountMessage[1]) {\n      this.setState({\n        secondMessage: splitMountMessage[1]\n      });\n    }\n  } // componentDidUpdate(prevProps) {\n  //     console.log(this.props)\n  //     console.log(prevProps)\n  //    console.log(this.props.match.params.id, prevProps.match.params.id)\n  // }\n\n\n  render() {\n    const {\n      item,\n      isLoading\n    } = this.props; // if (Object.keys(item).length === 0) {\n    //     return (\n    //         <div>\n    //         </div>\n    //     )\n    // }\n\n    const {\n      customer,\n      created_at,\n      status,\n      earliest_delivery_date,\n      pre_approvals_request_id\n    } = item;\n    const createdDate = moment(created_at, 'YYYY-MM-DD').format('MM/DD/yyyy');\n    const earliestDate = earliest_delivery_date ? moment(earliest_delivery_date, 'YYYY-MM-DD').format('MM/DD/yyyy') : null;\n    const {\n      product_type,\n      firstType,\n      secondType,\n      firstMessage,\n      secondMessage,\n      typeSelectionError,\n      finalMessage\n    } = this.state;\n    const splitMessage = finalMessage && finalMessage.split(\"#\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dealer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, isLoading && /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HeaderLeft, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: IconArrowLeft,\n      onClick: this.handleArrowBack,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(HeaderCenter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }, customer === null || customer === void 0 ? void 0 : customer.name)), /*#__PURE__*/React.createElement(HeaderRight, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"customer-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contact-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 33\n      }\n    }, \"PreApproval Created At: \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 33\n      }\n    }, createdDate)), (customer === null || customer === void 0 ? void 0 : customer.email) && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 37\n      }\n    }, \"Customer Email: \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 37\n      }\n    }, customer.email)), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 37\n      }\n    }, status === 0 ? 'Requested For:' : 'Product Type:', \" \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 37\n      }\n    }, setApplianceFlag(product_type))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 37\n      }\n    }, \"Delivery Date: \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 37\n      }\n    }, earliestDate || \"Not Mentioned\")), splitMessage && splitMessage[0] && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 41\n      }\n    }, \"Food Message: \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 41\n      }\n    }, splitMessage[0])), splitMessage && splitMessage[1] && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 41\n      }\n    }, \"Appliance Message: \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 41\n      }\n    }, splitMessage[1]))), status === 0 && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(AdminProductCheckBlock, {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 no-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"product-check-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"product-check-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 53\n      }\n    }, \"Food\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => {\n        this.setState({\n          firstType: e.target.value,\n          typeSelectionError: ''\n        });\n      },\n      checked: firstType === 'yes',\n      type: \"radio\",\n      name: \"foodCheck\",\n      value: \"yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 61\n      }\n    }, \"Yes\")), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => {\n        this.setState({\n          firstType: e.target.value,\n          typeSelectionError: ''\n        });\n      },\n      checked: firstType === 'no',\n      type: \"radio\",\n      name: \"foodCheck\",\n      value: \"no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 61\n      }\n    }, \"No\")))), this.state.firstType === \"yes\" ? /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"mt-2 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 57\n      }\n    }, \"Earliest Delivery Date: \"), /*#__PURE__*/React.createElement(CalendarContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.deliveryDate,\n      onChange: date => this.setState({\n        deliveryDate: date\n      }),\n      minDate: new Date(),\n      className: \"calendar-approve\",\n      dateFormat: \"MM/dd/yyyy\",\n      placeholderText: \"MM/DD/YYYY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 61\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      onChange: e => this.setState({\n        'firstMessage': e.target.value\n      }),\n      value: firstMessage,\n      name: \"food-message\",\n      style: {\n        'width': '65%'\n      },\n      placeHolder: \"Food message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 57\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 no-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"product-check-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"product-check-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 53\n      }\n    }, \"Appliance\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => {\n        this.setState({\n          secondType: e.target.value,\n          typeSelectionError: ''\n        });\n      },\n      checked: secondType === 'yes',\n      type: \"radio\",\n      name: \"appCheck\",\n      value: \"yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 61\n      }\n    }, \"Yes\")), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => {\n        this.setState({\n          secondType: e.target.value,\n          typeSelectionError: ''\n        });\n      },\n      checked: secondType === 'no',\n      type: \"radio\",\n      name: \"appCheck\",\n      value: \"no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 61\n      }\n    }, \"No\")))), this.state.secondType === 'yes' ? /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"applience cal-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 57\n      }\n    }, \"Appliance: \"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"none\",\n      as: \"select\",\n      style: {\n        'border': '1px solid #3a5b77'\n      },\n      value: this.state.applianceValue,\n      onChange: e => {\n        this.setState({\n          applianceValue: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 57\n      }\n    }, applianceMap.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        selected: this.state.applianceValue === item.value,\n        value: item.value,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 73\n        }\n      }, item.label);\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      onChange: e => this.setState({\n        'secondMessage': e.target.value\n      }),\n      value: secondMessage,\n      name: \"food-message\",\n      style: {\n        'width': '65%'\n      },\n      placeHolder: \"Appliance message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 57\n      }\n    })))), typeSelectionError !== '' && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 45\n      }\n    }, typeSelectionError))), status === 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      style: {\n        'marginTop': '20px',\n        'marginLeft': '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: !firstType || /^\\s*$/.test(firstType) || !secondType || /^\\s*$/.test(secondType),\n      style: {\n        marginRight: 20\n      },\n      variant: \"success\",\n      onClick: this.submitPreApproval,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 37\n      }\n    }, \"SUBMIT\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 29\n      }\n    }, status === 1 && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: '#009e87',\n        fontSize: 16,\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 37\n      }\n    }, \"Preapproval accepted\"), status === 2 && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: '#d81740',\n        fontSize: 16,\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 37\n      }\n    }, \"Preapproval declined\")), pre_approvals_request_id === 1 && /*#__PURE__*/React.createElement(AgainRequestBlock, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 68\n      }\n    }, \" Request Again By Client\"), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.declinedModalShow,\n      onHide: this.handleModalClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 37\n      }\n    }, \"Reason*\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"text-area\",\n      onChange: e => this.setState({\n        message: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleModalClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 37\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => {\n        this.handleDeclineClick();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 37\n      }\n    }, \"Yes\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  item: state.admin.selectedPreapproval,\n  isLoading: state.admin.submitPreapprovalLoading\n});\n\nexport default connect(mapStateToProps, {\n  changeSelectedPreApprovalStatus\n})(PreApprovalItem);","map":{"version":3,"sources":["/home/freedom/Music/tcp-frontend/src/screens/Admin/AdminPreApprovalItem.js"],"names":["React","Component","connect","moment","DatePicker","Button","Modal","Form","Header","HeaderLeft","HeaderCenter","HeaderRight","setApplianceFlag","IconArrowLeft","message","ConstMessage","changeSelectedPreApprovalStatus","applianceMap","adminPreapprovalTypes","ApproveSubmitContainer","ApproveSubmitInnerContainer","CalendarContainer","AgainRequestBlock","AdminProductCheckBlock","Loader","PreApprovalItem","state","declinedModalShow","deliveryDate","approveClicked","applianceValue","NO_CREDIT_CHECK_TEXT","product_type","props","item","firstType","secondType","typeSelectionError","firstMessage","secondMessage","finalMessage","handleArrowBack","history","goBack","handleApproveClick","typeCheckAvailable","finalProductType","setState","finalMessageCheck","messageType","handleDeclineClick","id","appliance","earliest_delivery_date","handleModalClose","submitPreApproval","messageAvailable","console","log","statusApproved","finalDate","format","componentDidMount","checkBoxMeasure","firstTempCheck","secondTempCheck","productTypeTemp","productMessage","splitMountMessage","split","render","isLoading","customer","created_at","status","pre_approvals_request_id","createdDate","earliestDate","splitMessage","name","email","marginTop","display","alignItems","justifyContent","e","target","value","date","Date","map","index","label","test","marginRight","color","fontSize","fontWeight","mapStateToProps","admin","selectedPreapproval","submitPreapprovalLoading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport { Button, Modal, Form } from 'react-bootstrap';\nimport Header, { HeaderLeft, HeaderCenter, HeaderRight } from '../../components/Dealer/Header';\nimport { setApplianceFlag } from 'utils/helper';\nimport { IconArrowLeft } from '../../assets/images';\nimport { message as ConstMessage } from 'shared/constant';\nimport { changeSelectedPreApprovalStatus } from '../../redux/actions/admin';\nimport { applianceMap, adminPreapprovalTypes } from './constant';\nimport { ApproveSubmitContainer, ApproveSubmitInnerContainer, CalendarContainer, AgainRequestBlock, AdminProductCheckBlock } from './style';\nimport Loader from 'shared/Loader';\nclass PreApprovalItem extends Component {\n\n    state = {\n        message: null,\n        declinedModalShow: false,\n        deliveryDate: null,\n        approveClicked: false,\n        applianceValue: ConstMessage.NO_CREDIT_CHECK_TEXT,\n        product_type: this.props.item.product_type || 'food',\n        firstType: null,\n        secondType: null,\n        typeSelectionError: '',\n        firstMessage: '',\n        secondMessage: '',\n        finalMessage: this.props.item.message || '',\n\n    }\n\n    componentDidMount () {\n        const checkBoxMeasure = {\n            firstTempCheck : '',\n            secondTempCheck : '',\n        }\n        const productTypeTemp = this.props.item.product_type;\n        if(productTypeTemp === \"food\") {\n            checkBoxMeasure.firstTempCheck = 'yes';\n            checkBoxMeasure.secondTempCheck = 'no';\n        } else if(productTypeTemp === \"food, appliance\") {\n            checkBoxMeasure.firstTempCheck = 'yes';\n            checkBoxMeasure.secondTempCheck = 'yes';\n\n        } else if(productTypeTemp === \"appliance\") {\n            checkBoxMeasure.firstTempCheck = 'no';\n            checkBoxMeasure.secondTempCheck = 'yes';\n        }\n        // this.setState({\n        //     firstType: checkBoxMeasure.firstTempCheck,\n        //     secondType: checkBoxMeasure.secondTempCheck,\n        // })\n        const productMessage = this.props.item.message;\n        const splitMountMessage = productMessage && productMessage.split(\"#\");\n        if(splitMountMessage && splitMountMessage[0]) {\n            this.setState({\n                firstMessage: splitMountMessage[0]\n            })\n        }\n        if(splitMountMessage && splitMountMessage[1]) {\n            this.setState({\n                secondMessage: splitMountMessage[1]\n            })\n        }\n      \n    }\n    // componentDidUpdate(prevProps) {\n    //     console.log(this.props)\n    //     console.log(prevProps)\n    //    console.log(this.props.match.params.id, prevProps.match.params.id)\n    // }\n\n    handleArrowBack = () => {\n        this.props.history.goBack();\n    }\n\n    handleApproveClick = () => {\n        const typeCheckAvailable = this.finalProductType();\n        if(typeCheckAvailable) {\n            this.setState({\n                approveClicked: true\n            })\n        } else {\n            this.setState({\n                typeSelectionError: 'Please select atleast one Type'\n            })\n        }\n        \n        // this.props.history.push(`/admin/preapprovals`);\n    }\n\n    finalProductType = () => {\n        const { firstType, secondType } = this.state;\n        let product_type = null;\n        if(firstType === 'yes' && secondType === 'yes') {\n            product_type = 'food, appliance';\n        } else if(firstType === 'yes' && (secondType === 'no' || !secondType)) {\n            product_type = 'food';\n        } else if((!firstType || firstType === 'no') && secondType === 'yes') {\n            product_type = 'appliance';\n        }\n        else if((!firstType || firstType === 'no') && (!secondType || secondType === 'no')) {\n            product_type = 'food';\n        }\n\n        return product_type;\n    }\n\n    finalMessageCheck = () => {\n        let messageType = '';\n        const { firstMessage, secondMessage }  = this.state;\n        if(firstMessage !== '' &&  secondMessage !== '') {\n            messageType = firstMessage + \" #\" + secondMessage;\n        } else if(firstMessage !== '' &&  secondMessage === '') {\n            messageType = firstMessage + \" #\";\n        } else if(firstMessage === '' &&  secondMessage !== '') {\n            messageType = \"# \" + secondMessage;\n        }\n        return messageType;\n    }\n    handleDeclineClick = () => {\n        if(this.state.message !== null) {\n            const { history } = this.props;\n            this.props.changeSelectedPreApprovalStatus(this.props.item.id, 2, this.state.message, history, '/admin/preapprovals', { appliance: \"\", earliest_delivery_date: null});\n            // this.props.history.push(`/admin/preapprovals`);\n        }\n    }\n\n    handleModalClose = () => {\n        this.setState({ declinedModalShow: false });\n    }\n\n    submitPreApproval = () => {\n        const { history } = this.props;\n        const { applianceValue,  deliveryDate, firstType, secondType  } = this.state;\n        const typeCheckAvailable = this.finalProductType();\n        const messageAvailable = this.finalMessageCheck();\n        console.log(secondType)\n        let statusApproved = 0;\n        if(firstType === 'yes' || secondType === 'yes') {\n            statusApproved = 1;\n\n        } else {\n            statusApproved = 2;\n        }\n        const finalDate = deliveryDate ? moment(deliveryDate).format('YYYY-MM-DD'): null;\n        this.props.changeSelectedPreApprovalStatus(this.props.item.id, statusApproved, messageAvailable, history, '/admin/preapprovals', { appliance: applianceValue, earliest_delivery_date: finalDate, product_type: typeCheckAvailable});\n    }\n\n    render() {\n        const { item, isLoading } = this.props;\n        // if (Object.keys(item).length === 0) {\n        //     return (\n        //         <div>\n\n        //         </div>\n        //     )\n        // }\n        const { customer, created_at, status, earliest_delivery_date, pre_approvals_request_id } = item;\n        const createdDate = moment(created_at, 'YYYY-MM-DD').format('MM/DD/yyyy');\n        const earliestDate = earliest_delivery_date ? moment(earliest_delivery_date, 'YYYY-MM-DD').format('MM/DD/yyyy'): null;\n        const { product_type, firstType, secondType, firstMessage, secondMessage, typeSelectionError, finalMessage } = this.state;\n        const splitMessage = finalMessage && finalMessage.split(\"#\");\n        return (\n            <div className=\"dealer\">\n                { isLoading && <Loader />}\n                <Header>\n                    <HeaderLeft>\n                        <img src={IconArrowLeft} onClick={this.handleArrowBack} alt=\"\"/>\n                    </HeaderLeft>\n                    <HeaderCenter>\n                        <span>{customer?.name}</span>\n                    </HeaderCenter>\n                    <HeaderRight>\n                        \n                    </HeaderRight>\n                </Header>\n                <div className=\"main\">\n                    <div className=\"customer-details\">\n                        <div className=\"contact-info\">\n                            <div>\n                                <strong>PreApproval Created At: </strong>\n                                <span>{createdDate}</span>\n                            </div>\n                            { customer?.email && (\n                                <div>\n                                    <strong>Customer Email: </strong>\n                                    <span>{customer.email}</span>\n                                </div>\n                            ) }\n                            <>\n                               \n                                <div>\n                                    <strong>{ status === 0 ? 'Requested For:' : 'Product Type:' } </strong>\n                                    <span>{ setApplianceFlag(product_type) }</span>\n                                </div>\n                               \n                                <div>\n                                    <strong>Delivery Date: </strong>\n                                    <span>{earliestDate || \"Not Mentioned\"}</span>\n                                </div>\n                                {\n                                    splitMessage && splitMessage[0] &&\n                                    <div>\n                                        <strong>Food Message: </strong>\n                                        <span>{ splitMessage[0] }</span>\n                                    </div>\n\n                                }\n                                  {\n                                    splitMessage && splitMessage[1] &&\n                                    <div>\n                                        <strong>Appliance Message: </strong>\n                                        <span>{ splitMessage[1] }</span>\n                                    </div>\n\n                                }\n                            </>\n                            {\n                                status === 0 &&\n                                <div style={{ marginTop: 20, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                    <AdminProductCheckBlock className=\"\">\n                                        <div className=\"row\">\n                                            <div className=\"col-md-12 no-padding\">\n                                                <div className=\"product-check-top\">\n                                                    <p className=\"product-check-left\">Food</p>\n                                                    <p className=\"d-flex\">\n                                                        <label>\n                                                            <input onChange={ (e) => {\n                                                                this.setState({\n                                                                    firstType: e.target.value,\n                                                                    typeSelectionError: ''\n                                                                })\n                                                            }}\n                                                            checked={ firstType === 'yes'}\n                                                             type=\"radio\" name=\"foodCheck\" value=\"yes\"/>\n                                                            <span className=\"ml-2\">Yes</span>\n                                                        </label>\n                                                        <label>\n                                                            <input onChange={ (e) => {\n                                                                this.setState({\n                                                                    firstType: e.target.value,\n                                                                    typeSelectionError: ''\n                                                                })\n                                                            }}\n                                                            checked={ firstType === 'no'}\n                                                             type=\"radio\" name=\"foodCheck\" value=\"no\"/>\n                                                            <span className=\"ml-2\">No</span>\n                                                        </label>\n                                                    </p>\n                                                </div>\n                                                {\n                                                    this.state.firstType === \"yes\" ? \n                                                    <Form.Group className=\"mt-2 mb-3\">\n                                                        <Form.Label>Earliest Delivery Date: </Form.Label>\n                                                        <CalendarContainer>\n                                                            <DatePicker \n                                                                selected={this.state.deliveryDate} \n                                                                onChange={date => this.setState({\n                                                                    deliveryDate: date })}\n                                                                minDate={new Date()}\n                                                                className=\"calendar-approve\"\n                                                                dateFormat=\"MM/dd/yyyy\"\n                                                                placeholderText=\"MM/DD/YYYY\" />\n                                                        </CalendarContainer>\n                                                        \n                                                    </Form.Group>\n                                                    :\n                                                    <div className=\"mt-3 mb-3\">\n                                                        <textarea onChange={ e => this.setState({\n                                                            'firstMessage': e.target.value\n                                                        })} value={ firstMessage } name=\"food-message\" style={ { 'width' : '65%' }} placeHolder=\"Food message\"></textarea> \n                                                    </div>\n                                                }\n                                            </div>\n                                            <div className=\"col-md-12 no-padding\">\n                                                <div className=\"product-check-top\">\n                                                    <p className=\"product-check-left\">Appliance</p>\n                                                    <p className=\"d-flex\">\n                                                        <label>\n                                                            <input onChange={ (e) => {\n                                                                this.setState({\n                                                                    secondType: e.target.value,\n                                                                    typeSelectionError: ''\n                                                                })\n                                                            }}\n                                                            checked={ secondType === 'yes'}\n                                                            type=\"radio\" name=\"appCheck\" value=\"yes\"/>\n                                                            <span className=\"ml-2\">Yes</span>\n                                                        </label>\n                                                        <label>\n                                                            <input onChange={ (e) => {\n                                                                this.setState({\n                                                                    secondType: e.target.value,\n                                                                    typeSelectionError: ''\n                                                                })\n                                                            }}\n                                                            checked={ secondType === 'no'}\n                                                            type=\"radio\" name=\"appCheck\" value=\"no\"/>\n                                                            <span className=\"ml-2\">No</span>\n                                                        </label>\n                                                    </p>\n                                                </div>\n                                                {\n                                                    this.state.secondType === 'yes' ?\n                                                    <Form.Group className=\"applience cal-inner\">\n                                                        <Form.Label>Appliance: </Form.Label>\n                                                        <Form.Control\n                                                            required\n                                                            autoComplete=\"none\"\n                                                            as=\"select\"\n                                                            style={{ 'border': '1px solid #3a5b77'}}\n                                                            value={this.state.applianceValue}\n                                                            onChange={e => \n                                                                {\n                                                                \n                                                                    this.setState({\n                                                                        applianceValue: e.target.value\n                                                                    }) \n                                                                }}\n                                                        >\n                                                        {\n                                                            applianceMap.map((item, index) => {\n                                                                return (<option selected={ this.state.applianceValue === item.value} value={item.value} key={index}>{item.label}</option>)\n                                                            })\n                                                        }\n                                                    \n                                                        </Form.Control>\n                                                    </Form.Group>\n                                                : \n                                                    <div className=\"mt-3 mb-3\">\n                                                        <textarea onChange={ e => this.setState({\n                                                            'secondMessage': e.target.value\n                                                        })} value={ secondMessage } name=\"food-message\" style={ { 'width' : '65%' }} placeHolder=\"Appliance message\"></textarea>\n                                                    </div>\n                                                }\n                                            </div>\n                                        </div>\n                                        {\n                                            typeSelectionError !== '' &&\n                                            <p className=\"text-error\">{ typeSelectionError }</p>\n                                        }\n                                    </AdminProductCheckBlock>\n                                </div>\n                            }\n                            {\n                                status === 0 &&                                \n                                <div className=\"text-center\" style={{ 'marginTop': '20px', 'marginLeft': '20px'}}>\n                                    <Button disabled={ (!firstType || /^\\s*$/.test(firstType)) || (!secondType || /^\\s*$/.test(secondType)) } style={{ marginRight: 20 }} variant=\"success\" onClick={this.submitPreApproval}>SUBMIT</Button>\n                                </div>  \n\n                            }\n                            <div style={{ marginTop: 20, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                                {/* { status === 0 && !this.state.approveClicked && (\n                                    <>\n                                        <Button\n                                            style={{ marginRight: 20 }}\n                                            variant=\"success\"\n                                            onClick={this.handleApproveClick}\n                                        >\n                                            Approve\n                                        </Button>\n                                        <Button\n                                            variant=\"danger\"\n                                            onClick={() => this.setState({ declinedModalShow: true })}\n                                        >\n                                            Decline\n                                        </Button>\n                                    </>\n                                ) } */}\n\n                                { status === 1 && (\n                                    <div style={{ color: '#009e87', fontSize: 16, fontWeight: 'bold' }}>\n                                        Preapproval accepted\n                                    </div>\n                                ) }\n\n                                { status === 2 && (\n                                    <div style={{ color: '#d81740', fontSize: 16, fontWeight: 'bold' }}>\n                                        Preapproval declined\n                                    </div>\n                                ) }\n                            \n                            </div>\n                            {/* {\n                                status === 0 && this.state.approveClicked &&\n                                <ApproveSubmitContainer>\n                                    <ApproveSubmitInnerContainer>                                        \n                                        {\n                                            this.state.firstType === 'yes' && \n                                            <Form.Group >\n                                                <Form.Label>Earliest Delivery Date: </Form.Label>\n                                                <CalendarContainer>\n                                                    <DatePicker \n                                                        selected={this.state.deliveryDate} \n                                                        onChange={date => this.setState({\n                                                            deliveryDate: date })}\n                                                        minDate={new Date()}\n                                                        className=\"calendar-approve\"\n                                                        dateFormat=\"MM/dd/yyyy\"\n                                                        placeholderText=\"MM/DD/YYYY\" />\n                                                </CalendarContainer>\n                                                \n                                            </Form.Group>\n                                        }\n                                        {\n                                            this.state.secondType === 'yes' && \n                                            <Form.Group className=\"applience cal-inner\">\n                                                <Form.Label>Appliance: </Form.Label>\n                                                <Form.Control\n                                                    required\n                                                    autoComplete=\"none\"\n                                                    as=\"select\"\n                                                    style={{ 'border': '1px solid #3a5b77'}}\n                                                    value={this.state.applianceValue}\n                                                    onChange={e => \n                                                        {\n                                                        \n                                                            this.setState({\n                                                                applianceValue: e.target.value\n                                                            }) \n                                                        }}\n                                                >\n                                                {\n                                                    applianceMap.map((item, index) => {\n                                                        return (<option selected={ this.state.applianceValue === item.value} value={item.value} key={index}>{item.label}</option>)\n                                                    })\n                                                }\n                                            \n                                                </Form.Control>\n                                            </Form.Group>\n                                        }\n                                    </ApproveSubmitInnerContainer>\n                                    <div className=\"text-center\" style={{ 'marginTop': '22px', 'marginLeft': '20px'}}>\n                                        <Button style={{ marginRight: 20 }} variant=\"success\" onClick={this.submitPreApproval}>SUBMIT</Button>\n                                    </div>  \n                                </ApproveSubmitContainer>\n                            } */}\n                            {\n                                pre_approvals_request_id === 1 &&  <AgainRequestBlock> Request Again By Client</AgainRequestBlock>\n                            }\n                           \n                            <Modal show={this.state.declinedModalShow} onHide={this.handleModalClose}>\n                                <Modal.Header closeButton></Modal.Header>\n                                <Modal.Body>\n                                    <label>Reason*</label>\n                                    <br />\n                                    <textarea className=\"text-area\" onChange={(e) => this.setState({ message: e.target.value })}></textarea>\n                                </Modal.Body>\n                                <Modal.Footer>\n                                    <Button variant=\"secondary\" onClick={this.handleModalClose}>\n                                        No\n                                    </Button>\n                                    <Button variant=\"primary\" onClick={() => {this.handleDeclineClick()}}>\n                                        Yes\n                                    </Button>\n                                </Modal.Footer>\n                            </Modal>\n\n                        </div>                        \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    item: state.admin.selectedPreapproval,\n    isLoading: state.admin.submitPreapprovalLoading\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        changeSelectedPreApprovalStatus\n    }\n)(PreApprovalItem);"]},"metadata":{},"sourceType":"module"}