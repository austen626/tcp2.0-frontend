{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp-frontend/src/screens/Dealer/DealerPreApprovals.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport Header, { HeaderLeft, HeaderCenter, HeaderRight } from '../../components/Dealer/Header';\nimport Footer from '../../components/Dealer/Footer';\nimport { IconStatusWaiting, IconStatusConfirmed, IconHome, IconPreapprovalWaiting, IconPreapprovalDeclined, IconSortInActive, IconSortActive, IconSearchInActive, IconSearchActive, IconFilterActive, IconFilterInActive } from '../../assets/images';\nimport { getSalesList, getAppDetailById } from '../../redux/actions/sales';\nimport { getPreapprovals } from '../../redux/actions/admin';\n\nclass DealerPreApprovals extends Component {\n  constructor(...args) {\n    super(...args);\n    this.sidebarRef = React.createRef();\n    this.state = {\n      sortClicked: false,\n      searchClicked: false,\n      filterClicked: false,\n      sidebarOpen: \"\",\n      sortBy: \"date-new\",\n      filterStatus: \"all\",\n      filterPerson: \"all\",\n      filterCategory: \"all\",\n      searchVal: \"\"\n    };\n\n    this.handleClickOutside = event => {\n      if (this.sidebarRef && this.sidebarRef.current && !this.sidebarRef.current.contains(event.target)) {\n        this.setState({\n          sidebarOpen: \"\"\n        });\n      }\n    };\n\n    this.handleArrowBack = () => {\n      this.props.history.goBack();\n    };\n\n    this.handleSortClick = () => {\n      this.setState({\n        sidebarOpen: \"sort\"\n      });\n    };\n\n    this.handleFilterClick = () => {\n      this.setState({\n        sidebarOpen: \"filter\"\n      });\n    };\n\n    this.handleSearchClick = () => {\n      this.setState({\n        searchClicked: !this.state.searchClicked\n      });\n    };\n\n    this.handleSearchRowClick = cifno => {\n      this.props.history.push(`/customer/${cifno}`);\n    };\n\n    this.handleSideBarApply = () => {\n      const {\n        sidebarOpen\n      } = this.state;\n\n      if (sidebarOpen === \"sort\") {\n        this.setState({\n          sidebarOpen: \"\",\n          sortClicked: true\n        });\n      } else if (sidebarOpen === \"search\") {\n        this.setState({\n          sidebarOpen: \"\",\n          searchClicked: true\n        });\n      } else if (sidebarOpen === \"filter\") {\n        this.setState({\n          sidebarOpen: \"\",\n          filterClicked: true\n        });\n      }\n    };\n\n    this.handleSideBarClear = () => {\n      const {\n        sidebarOpen\n      } = this.state;\n\n      if (sidebarOpen === \"sort\") {\n        this.setState({\n          sidebarOpen: \"\",\n          sortClicked: false,\n          sortBy: \"date-new\"\n        });\n      } else if (sidebarOpen === \"search\") {\n        this.setState({\n          sidebarOpen: \"\",\n          searchClicked: false\n        });\n      } else if (sidebarOpen === \"filter\") {\n        this.setState({\n          sidebarOpen: \"\",\n          filterClicked: false,\n          filterStatus: \"all\",\n          filterPerson: \"all\",\n          filterCategory: \"all\"\n        });\n      }\n    };\n\n    this.renderSideBarOptions = () => {\n      const {\n        sidebarOpen,\n        sortBy,\n        filterStatus,\n        filterPerson,\n        filterCategory\n      } = this.state;\n      const names = this.props.apps.map(app => app.name);\n\n      if (sidebarOpen === \"sort\") {\n        return /*#__PURE__*/React.createElement(Form.Control, {\n          as: \"select\",\n          value: sortBy,\n          onChange: e => this.setState({\n            sortBy: e.target.value\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"date-new\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }\n        }, \"Date: newest\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"date-old\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }\n        }, \"Date: oldest\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"name-ascending\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }\n        }, \"Name: A-Z\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"date-descending\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }\n        }, \"Name: Z-A\"));\n      }\n\n      if (sidebarOpen === \"filter\") {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Control, {\n          as: \"select\",\n          value: filterStatus,\n          onChange: e => this.setState({\n            filterStatus: e.target.value\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"all\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }\n        }, \"Status\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"approved\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }\n        }, \"Approved\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"waiting\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }\n        }, \"Waiting\")), /*#__PURE__*/React.createElement(Form.Control, {\n          as: \"select\",\n          value: filterPerson,\n          onChange: e => this.setState({\n            filterPerson: e.target.value\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          key: \"all\",\n          value: \"all\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }\n        }, \"Salesperson Name\"), names.filter((name, index) => names.indexOf(name) === index).map(name => /*#__PURE__*/React.createElement(\"option\", {\n          key: name,\n          value: name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }\n        }, name))), /*#__PURE__*/React.createElement(Form.Control, {\n          as: \"select\",\n          value: filterCategory,\n          onChange: e => this.setState({\n            filterCategory: e.target.value\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"all\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }\n        }, \"Category\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"food\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }\n        }, \"FOOD\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"fsp\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }\n        }, \"FSP\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"app\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }\n        }, \"APP\")));\n      }\n    };\n\n    this.renderSideBar = () => {\n      const {\n        sidebarOpen\n      } = this.state;\n\n      if (sidebarOpen === \"\") {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.sidebarRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sidebar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }, this.renderSideBarOptions()), /*#__PURE__*/React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleSideBarApply,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 29\n        }\n      }, \"APPLY\")), /*#__PURE__*/React.createElement(Col, {\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleSideBarClear,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }\n      }, \"CLEAR\")))));\n    };\n\n    this.handleAppClick = appId => {\n      this.props.getAppDetailById(appId);\n      this.props.history.push(`/app-details/${appId}`);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getPreapprovals();\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  render() {\n    const {\n      sortClicked,\n      searchClicked,\n      filterClicked,\n      searchVal\n    } = this.state;\n    let apps = this.props.apps;\n    console.log(apps); // if (searchClicked && searchVal !== '') {\n    //     apps = apps.filter(app => app.name.toLowerCase().includes(searchVal.toLowerCase())) \n    // }\n    // if (filterClicked) {\n    //     const { filterStatus, filterPerson, filterCategory } = this.state;\n    //     if (filterStatus !== \"all\") {\n    //         apps = apps.filter(app => app.status.toLowerCase() === filterStatus);\n    //     }\n    //     if (filterPerson !== \"all\") {\n    //         apps = apps.filter(app => app.name === filterPerson);\n    //     }\n    //     if (filterCategory !== \"all\") {\n    //         apps = apps.filter(app => app.products.find(product => product.type.toLowerCase() === filterCategory.toLowerCase()) !== undefined)\n    //     }\n    // }\n    // if (sortClicked) {\n    //     const { sortBy } = this.state;\n    //     if (sortBy === \"name-ascending\") {\n    //         apps = apps.sort((a, b) => a.name > b.name ? 1 : -1)\n    //     }\n    //     else if (sortBy === \"date-descending\") {\n    //         apps = apps.sort((a, b) => a.name < b.name ? 1 : -1)\n    //     }\n    //     else if (sortBy === \"date-new\") {\n    //         apps = apps.sort((a, b) => a.created_at > b.created_at ? 1 : -1)\n    //     }\n    //     else if (sortBy === \"date-old\") {\n    //         apps = apps.sort((a, b) => a.created_at < b.created_at ? 1 : -1)\n    //     }\n    // }\n    // apps = apps.filter(a => (a.status === 'waiting' || a.status === 'approved' || a.status === 'declined'));   \n    // return (\n    //     <div className=\"dealer\">\n    //         <Header>\n    //             <HeaderLeft>\n    //                 <img src={IconHome} onClick={this.handleArrowBack} height=\"28\"/>\n    //                 <img src={sortClicked ? IconSortActive : IconSortInActive} onClick={this.handleSortClick} />\n    //             </HeaderLeft>\n    //             <HeaderCenter>\n    //                 <span>PREAPPROVAL REQUEST</span>\n    //             </HeaderCenter>\n    //             <HeaderRight>\n    //                 <img src={searchClicked ? IconSearchActive : IconSearchInActive} onClick={this.handleSearchClick} />\n    //                 <img src={filterClicked ? IconFilterActive : IconFilterInActive} onClick={this.handleFilterClick} />\n    //             </HeaderRight>\n    //         </Header>\n    //         <div className=\"preapproval-main\">\n    //             { searchClicked && (\n    //                 <div className=\"dealer-list-search\">\n    //                     <Form.Control\n    //                         placeholder=\"Search\"\n    //                         value={this.state.searchVal}\n    //                         onChange={(e) => this.setState({ searchVal: e.target.value })}\n    //                     />\n    //                 </div>\n    //             ) }\n    //             <div className=\"dealer-list\">\n    //                 { apps.map((app, index) => (\n    //                     <div className={`request-row ${index%2 === 0 && \"dark\"}`}>\n    //                         <Row onClick={() => {app.status !== 'waiting' && this.handleSearchRowClick(app.id)}}>\n    //                             <Col xs={6} md={4} className=\"data\">\n    //                                 <div className=\"title\">{ app.name }</div>\n    //                                 <div className=\"sub-title\">{ app.street } { app.city } <br/> { app.zip } { app.state }</div>\n    //                             </Col>\n    //                             <Col xs={3} md={4} className=\"data text-center\">\n    //                                 <div className=\"date\">R: MM/DD/YY</div>\n    //                                 <div className=\"date\">A: MM/DD/YY</div>\n    //                             </Col>\n    //                             <Col xs={3} md={4} className=\"data text-center\">\n    //                                 { app.status === 'waiting' ? \n    //                                     <img src={IconPreapprovalWaiting} /> : app.status !== \"approved\" ? \n    //                                     <img src={IconPreapprovalDeclined} /> : \n    //                                     <Button> GENERATE ORDER </Button> }\n    //                             </Col>\n    //                         </Row>\n    //                     </div>\n    //                 ))}\n    //             </div>\n    //         </div>\n    //         { this.renderSideBar() }              \n    //     </div>\n    // )\n\n    \"\";\n  }\n\n}\n\n{\n  /* <Row>\n  <Col xs={4}>{ app.name }</Col>\n  <Col xs={4}>\n     { app.products.map(product => (\n         <div key={product.id}>{ product.type }, ${product.balance}</div>\n     )) }\n  </Col>\n  <Col xs={4}>\n     { app.status === 'waiting' ? \n         <img src={IconStatusWaiting} /> :\n         <img src={IconStatusConfirmed} /> }\n  </Col>\n  </Row> */\n}\n\nconst mapStateToProps = state => ({\n  // apps: state.sales.apps\n  apps: state.admin.preapprovals\n});\n\nexport default connect(mapStateToProps, {\n  getPreapprovals,\n  getAppDetailById\n})(DealerPreApprovals);","map":{"version":3,"sources":["/home/freedom/Music/tcp-frontend/src/screens/Dealer/DealerPreApprovals.js"],"names":["React","Component","connect","Form","Row","Col","Button","Header","HeaderLeft","HeaderCenter","HeaderRight","Footer","IconStatusWaiting","IconStatusConfirmed","IconHome","IconPreapprovalWaiting","IconPreapprovalDeclined","IconSortInActive","IconSortActive","IconSearchInActive","IconSearchActive","IconFilterActive","IconFilterInActive","getSalesList","getAppDetailById","getPreapprovals","DealerPreApprovals","sidebarRef","createRef","state","sortClicked","searchClicked","filterClicked","sidebarOpen","sortBy","filterStatus","filterPerson","filterCategory","searchVal","handleClickOutside","event","current","contains","target","setState","handleArrowBack","props","history","goBack","handleSortClick","handleFilterClick","handleSearchClick","handleSearchRowClick","cifno","push","handleSideBarApply","handleSideBarClear","renderSideBarOptions","names","apps","map","app","name","e","value","filter","index","indexOf","renderSideBar","handleAppClick","appId","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","console","log","mapStateToProps","admin","preapprovals"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport Header, { HeaderLeft, HeaderCenter, HeaderRight } from '../../components/Dealer/Header';\nimport Footer from '../../components/Dealer/Footer';\nimport { IconStatusWaiting, IconStatusConfirmed, IconHome, IconPreapprovalWaiting, IconPreapprovalDeclined, IconSortInActive, IconSortActive, IconSearchInActive, IconSearchActive, IconFilterActive, IconFilterInActive } from '../../assets/images';\nimport { getSalesList, getAppDetailById } from '../../redux/actions/sales';\nimport { getPreapprovals } from '../../redux/actions/admin';\n\nclass DealerPreApprovals extends Component {\n\n    sidebarRef = React.createRef();\n\n    state = {\n        sortClicked: false,\n        searchClicked: false,\n        filterClicked: false,\n\n        sidebarOpen: \"\",\n\n        sortBy: \"date-new\",\n        filterStatus: \"all\",\n        filterPerson: \"all\",\n        filterCategory: \"all\",\n\n        searchVal: \"\"\n    }\n\n    componentDidMount() {\n        this.props.getPreapprovals();\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"mousedown\", this.handleClickOutside);\n    }\n\n    handleClickOutside = (event) => {\n        if (this.sidebarRef && this.sidebarRef.current && !this.sidebarRef.current.contains(event.target)) {\n            this.setState({ sidebarOpen: \"\" });\n        }\n    }\n\n    handleArrowBack = () => {\n        this.props.history.goBack();\n    }\n\n    handleSortClick = () => {\n        this.setState({ sidebarOpen: \"sort\" });\n    }\n\n    handleFilterClick = () => {\n        this.setState({ sidebarOpen: \"filter\" });\n    }\n\n    handleSearchClick = () => {\n        this.setState({ searchClicked: !this.state.searchClicked });\n    }\n\n    handleSearchRowClick = (cifno) => {\n        this.props.history.push(`/customer/${cifno}`);\n    }\n\n    handleSideBarApply = () => {\n        const { sidebarOpen } = this.state;\n        if (sidebarOpen === \"sort\") {\n            this.setState({ sidebarOpen: \"\", sortClicked: true });\n        } else if (sidebarOpen === \"search\") {\n            this.setState({ sidebarOpen: \"\", searchClicked: true });\n        } else if (sidebarOpen === \"filter\") {\n            this.setState({ sidebarOpen: \"\", filterClicked: true });\n        }\n    }\n\n    handleSideBarClear = () => {\n        const { sidebarOpen } = this.state;\n        if (sidebarOpen === \"sort\") {\n            this.setState({ sidebarOpen: \"\", sortClicked: false, sortBy: \"date-new\" });\n        } else if (sidebarOpen === \"search\") {\n            this.setState({ sidebarOpen: \"\", searchClicked: false });\n        } else if (sidebarOpen === \"filter\") {\n            this.setState({ sidebarOpen: \"\", filterClicked: false, filterStatus: \"all\", filterPerson: \"all\", filterCategory: \"all\" });\n        }\n    }\n\n    renderSideBarOptions = () => {\n        const { sidebarOpen, sortBy, filterStatus, filterPerson, filterCategory } = this.state;\n\n        const names = this.props.apps.map(app => app.name);\n\n        if (sidebarOpen === \"sort\") {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    value={sortBy}\n                    onChange={(e) => this.setState({ sortBy: e.target.value })}\n                >\n                    <option value=\"date-new\">Date: newest</option>\n                    <option value=\"date-old\">Date: oldest</option>\n                    <option value=\"name-ascending\">Name: A-Z</option>\n                    <option value=\"date-descending\">Name: Z-A</option>\n                </Form.Control>\n            )   \n        }\n\n        if (sidebarOpen === \"filter\") {\n            return (\n                <>\n                    <Form.Control\n                        as=\"select\"\n                        value={filterStatus}\n                        onChange={(e) => this.setState({ filterStatus: e.target.value })}\n                    >\n                        <option value=\"all\">Status</option>\n                        <option value=\"approved\">Approved</option>\n                        <option value=\"waiting\">Waiting</option>\n                    </Form.Control>\n\n                    <Form.Control\n                        as=\"select\"\n                        value={filterPerson}\n                        onChange={(e) => this.setState({ filterPerson: e.target.value })}\n                    >\n                        <option key=\"all\" value=\"all\">Salesperson Name</option>\n                        { names.filter((name, index) => names.indexOf(name) === index).map(name => (\n                            <option key={name} value={name}>{name}</option>\n                        )) }\n                    </Form.Control>\n\n                    <Form.Control\n                        as=\"select\"\n                        value={filterCategory}\n                        onChange={(e) => this.setState({ filterCategory: e.target.value })}\n                    >\n                        <option value=\"all\">Category</option>\n                        <option value=\"food\">FOOD</option>\n                        <option value=\"fsp\">FSP</option>\n                        <option value=\"app\">APP</option>\n                    </Form.Control>\n\n                    {/* <Form.Label>Value range</Form.Label>\n\n                    <div className=\"value-range\">\n                        <Form.Control placeholder=\"$600\" />\n                        <Form.Label>-</Form.Label>\n                        <Form.Control placeholder=\"$3990\" />\n                    </div> */}\n                </>\n            )\n        }\n\n    }\n\n    renderSideBar = () => {\n        const { sidebarOpen } = this.state;\n\n        if (sidebarOpen === \"\") {\n            return null;\n        }\n\n        return (\n            <div ref={this.sidebarRef}>\n                <div  className=\"sidebar\">\n                    { this.renderSideBarOptions() }\n                </div>\n                <Footer>\n                    <Row>\n                        <Col xs={6}>\n                            <Button onClick={this.handleSideBarApply}>APPLY</Button>\n                        </Col>\n                        <Col xs={6}>\n                            <Button onClick={this.handleSideBarClear}>CLEAR</Button>\n                        </Col>\n                    </Row>\n                </Footer>\n            </div>\n        )\n    }\n\n    handleAppClick = (appId) => {\n        this.props.getAppDetailById(appId);\n        this.props.history.push(`/app-details/${appId}`);\n    }\n\n    render() {\n        const { sortClicked, searchClicked, filterClicked, searchVal } = this.state;\n        let apps = this.props.apps;\n\n        console.log(apps)\n\n        // if (searchClicked && searchVal !== '') {\n        //     apps = apps.filter(app => app.name.toLowerCase().includes(searchVal.toLowerCase())) \n        // }\n        // if (filterClicked) {\n        //     const { filterStatus, filterPerson, filterCategory } = this.state;\n        //     if (filterStatus !== \"all\") {\n        //         apps = apps.filter(app => app.status.toLowerCase() === filterStatus);\n        //     }\n        //     if (filterPerson !== \"all\") {\n        //         apps = apps.filter(app => app.name === filterPerson);\n        //     }\n        //     if (filterCategory !== \"all\") {\n        //         apps = apps.filter(app => app.products.find(product => product.type.toLowerCase() === filterCategory.toLowerCase()) !== undefined)\n        //     }\n        // }\n        // if (sortClicked) {\n        //     const { sortBy } = this.state;\n        //     if (sortBy === \"name-ascending\") {\n        //         apps = apps.sort((a, b) => a.name > b.name ? 1 : -1)\n        //     }\n        //     else if (sortBy === \"date-descending\") {\n        //         apps = apps.sort((a, b) => a.name < b.name ? 1 : -1)\n        //     }\n        //     else if (sortBy === \"date-new\") {\n        //         apps = apps.sort((a, b) => a.created_at > b.created_at ? 1 : -1)\n        //     }\n        //     else if (sortBy === \"date-old\") {\n        //         apps = apps.sort((a, b) => a.created_at < b.created_at ? 1 : -1)\n        //     }\n        // }\n\n        // apps = apps.filter(a => (a.status === 'waiting' || a.status === 'approved' || a.status === 'declined'));   \n\n        // return (\n        //     <div className=\"dealer\">\n        //         <Header>\n        //             <HeaderLeft>\n        //                 <img src={IconHome} onClick={this.handleArrowBack} height=\"28\"/>\n        //                 <img src={sortClicked ? IconSortActive : IconSortInActive} onClick={this.handleSortClick} />\n        //             </HeaderLeft>\n        //             <HeaderCenter>\n        //                 <span>PREAPPROVAL REQUEST</span>\n        //             </HeaderCenter>\n        //             <HeaderRight>\n        //                 <img src={searchClicked ? IconSearchActive : IconSearchInActive} onClick={this.handleSearchClick} />\n        //                 <img src={filterClicked ? IconFilterActive : IconFilterInActive} onClick={this.handleFilterClick} />\n        //             </HeaderRight>\n        //         </Header>\n        //         <div className=\"preapproval-main\">\n        //             { searchClicked && (\n        //                 <div className=\"dealer-list-search\">\n        //                     <Form.Control\n        //                         placeholder=\"Search\"\n        //                         value={this.state.searchVal}\n        //                         onChange={(e) => this.setState({ searchVal: e.target.value })}\n        //                     />\n        //                 </div>\n        //             ) }\n        //             <div className=\"dealer-list\">\n        //                 { apps.map((app, index) => (\n        //                     <div className={`request-row ${index%2 === 0 && \"dark\"}`}>\n        //                         <Row onClick={() => {app.status !== 'waiting' && this.handleSearchRowClick(app.id)}}>\n        //                             <Col xs={6} md={4} className=\"data\">\n        //                                 <div className=\"title\">{ app.name }</div>\n        //                                 <div className=\"sub-title\">{ app.street } { app.city } <br/> { app.zip } { app.state }</div>\n        //                             </Col>\n        //                             <Col xs={3} md={4} className=\"data text-center\">\n        //                                 <div className=\"date\">R: MM/DD/YY</div>\n        //                                 <div className=\"date\">A: MM/DD/YY</div>\n        //                             </Col>\n        //                             <Col xs={3} md={4} className=\"data text-center\">\n        //                                 { app.status === 'waiting' ? \n        //                                     <img src={IconPreapprovalWaiting} /> : app.status !== \"approved\" ? \n        //                                     <img src={IconPreapprovalDeclined} /> : \n        //                                     <Button> GENERATE ORDER </Button> }\n        //                             </Col>\n        //                         </Row>\n        //                     </div>\n        //                 ))}\n        //             </div>\n        //         </div>\n\n        //         { this.renderSideBar() }              \n        //     </div>\n        // )\n\n        \"\"\n    }\n}\n\n\n{/* <Row>\n<Col xs={4}>{ app.name }</Col>\n<Col xs={4}>\n    { app.products.map(product => (\n        <div key={product.id}>{ product.type }, ${product.balance}</div>\n    )) }\n</Col>\n<Col xs={4}>\n    { app.status === 'waiting' ? \n        <img src={IconStatusWaiting} /> :\n        <img src={IconStatusConfirmed} /> }\n</Col>\n</Row> */}\n\n\nconst mapStateToProps = state => ({\n    // apps: state.sales.apps\n    apps: state.admin.preapprovals\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        getPreapprovals,\n        getAppDetailById\n    }\n)(DealerPreApprovals);"]},"metadata":{},"sourceType":"module"}