{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp-frontend/src/screens/Auth/TwoFA.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport { codeVerify, sendAgain } from '../../redux/actions/auth';\nimport AuthContainer from '../../components/AuthContainer';\nimport { AuthCheckbox } from '../../components/Checkbox';\n\nclass TwoFAScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      code: '',\n      error: '',\n      codeError: false,\n      checkAskAgain: true,\n      resend: false\n    };\n\n    this.sendAgain = async () => {\n      this.setState({\n        resend: false\n      });\n      const result = await this.props.sendAgain({\n        authy_id: this.props.location.state.authy_id\n      });\n\n      if (result.ok) {\n        this.setState({\n          resend: true\n        });\n      }\n    };\n\n    this.onVerify = async () => {\n      if (this.state.code === '' || this.state.code.length !== 6) {\n        this.setState({\n          error: 'Code needs to be 6 length'\n        });\n        return;\n      }\n\n      this.setState({\n        error: ''\n      });\n      const result = await this.props.codeVerify({\n        authy_id: this.props.location.state.authy_id,\n        code: this.state.code\n      });\n\n      if (result.ok) {\n        localStorage.setItem('token', result.token);\n        localStorage.setItem('role', result.role);\n\n        if (this.props.location.state.screen === 'forgot') {\n          this.props.history.replace('reset-password');\n        } else {\n          // if (result.roles && result.roles.indexOf('dealer') > 0) \n          // {\n          //     this.props.history.replace('/dealerHome');\n          // }\n          // else if (result.roles && result.roles.indexOf('sales') > 0) \n          // {\n          //     this.props.history.replace('/sales');\n          // }\n          // else if (result.roles && result.roles.indexOf('admin') > 0) \n          // {\n          //     this.props.history.replace('/admin');\n          // }\n          // else\n          // {\n          this.props.history.replace('/login'); // }\n        }\n      } else {\n        this.setState({\n          error: result.error\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.location.state || !this.props.location.state.authy_id) {\n      this.props.history.replace('/login');\n      return;\n    }\n  }\n\n  render() {\n    const endCode = this.props.location.state && this.props.location.state.ending ? this.props.location.state.ending : '';\n    return /*#__PURE__*/React.createElement(AuthContainer, {\n      title: \"2-Step Verification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"twofa-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, \"A text message with your code has been sent\\xA0to a number ending \", endCode), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, \"Code\"), /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"input input-code\",\n      value: this.state.code,\n      onChange: e => this.setState({\n        code: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    })), this.state.error && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, this.state.error), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onVerify,\n      className: \"button-action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, \"VERIFY\"), /*#__PURE__*/React.createElement(AuthCheckbox, {\n      label: \"Don't ask again on this device\",\n      checked: this.state.checkAskAgain,\n      onClick: () => this.setState({\n        checkAskAgain: !this.state.checkAskAgain\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sms-come\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }, \"SMS didn't come?\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"send-again noselect\",\n      onClick: this.sendAgain,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }, \"Send again\")), this.state.resend && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"resend-sms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 48\n      }\n    }, \"SMS has been sent again\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mfa-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, \"Choose another \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"way-of\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, \"way of verification\"))));\n  }\n\n}\n\nexport default connect(null, {\n  codeVerify,\n  sendAgain\n})(TwoFAScreen);","map":{"version":3,"sources":["/home/freedom/Music/tcp-frontend/src/screens/Auth/TwoFA.js"],"names":["React","Component","connect","Form","Button","codeVerify","sendAgain","AuthContainer","AuthCheckbox","TwoFAScreen","state","code","error","codeError","checkAskAgain","resend","setState","result","props","authy_id","location","ok","onVerify","length","localStorage","setItem","token","role","screen","history","replace","componentDidMount","render","endCode","ending","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AAEA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,0BAAtC;AAEA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAASC,YAAT,QAA6B,2BAA7B;;AAEA,MAAMC,WAAN,SAA0BR,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCS,KADgC,GACxB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAIJC,MAAAA,SAAS,EAAE,KAJP;AAMJC,MAAAA,aAAa,EAAE,IANX;AAOJC,MAAAA,MAAM,EAAE;AAPJ,KADwB;;AAAA,SAkBhCT,SAlBgC,GAkBpB,YAAY;AACpB,WAAKU,QAAL,CAAc;AAAED,QAAAA,MAAM,EAAE;AAAV,OAAd;AACA,YAAME,MAAM,GAAG,MAAM,KAAKC,KAAL,CAAWZ,SAAX,CAAqB;AACtCa,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAAX,CAAoBV,KAApB,CAA0BS;AADE,OAArB,CAArB;;AAGA,UAAIF,MAAM,CAACI,EAAX,EAAe;AACX,aAAKL,QAAL,CAAc;AAAED,UAAAA,MAAM,EAAE;AAAV,SAAd;AACH;AACJ,KA1B+B;;AAAA,SA4BhCO,QA5BgC,GA4BrB,YAAY;AACnB,UAAI,KAAKZ,KAAL,CAAWC,IAAX,KAAoB,EAApB,IAA0B,KAAKD,KAAL,CAAWC,IAAX,CAAgBY,MAAhB,KAA2B,CAAzD,EAA4D;AACxD,aAAKP,QAAL,CAAc;AAAEJ,UAAAA,KAAK,EAAE;AAAT,SAAd;AACA;AACH;;AACD,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAAd;AACA,YAAMK,MAAM,GAAG,MAAM,KAAKC,KAAL,CAAWb,UAAX,CAAsB;AACvCc,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAAX,CAAoBV,KAApB,CAA0BS,QADG;AAEvCR,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC;AAFsB,OAAtB,CAArB;;AAKA,UAAIM,MAAM,CAACI,EAAX,EAAe;AACXG,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BR,MAAM,CAACS,KAArC;AACAF,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BR,MAAM,CAACU,IAApC;;AACA,YAAI,KAAKT,KAAL,CAAWE,QAAX,CAAoBV,KAApB,CAA0BkB,MAA1B,KAAqC,QAAzC,EACA;AACI,eAAKV,KAAL,CAAWW,OAAX,CAAmBC,OAAnB,CAA2B,gBAA3B;AACH,SAHD,MAKA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,eAAKZ,KAAL,CAAWW,OAAX,CAAmBC,OAAnB,CAA2B,QAA3B,EAfR,CAgBI;AACH;AACJ,OA1BD,MA0BO;AACH,aAAKd,QAAL,CAAc;AAAEJ,UAAAA,KAAK,EAAEK,MAAM,CAACL;AAAhB,SAAd;AACH;AACJ,KApE+B;AAAA;;AAWhCmB,EAAAA,iBAAiB,GAAG;AAChB,QAAI,CAAC,KAAKb,KAAL,CAAWE,QAAX,CAAoBV,KAArB,IAA8B,CAAC,KAAKQ,KAAL,CAAWE,QAAX,CAAoBV,KAApB,CAA0BS,QAA7D,EAAuE;AACnE,WAAKD,KAAL,CAAWW,OAAX,CAAmBC,OAAnB,CAA2B,QAA3B;AACA;AACH;AACJ;;AAsDDE,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG,KAAKf,KAAL,CAAWE,QAAX,CAAoBV,KAApB,IAA6B,KAAKQ,KAAL,CAAWE,QAAX,CAAoBV,KAApB,CAA0BwB,MAAvD,GAAgE,KAAKhB,KAAL,CAAWE,QAAX,CAAoBV,KAApB,CAA0BwB,MAA1F,GAAmG,EAAnH;AACA,wBACI,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EACoED,OADpE,CADJ,eAKI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,SAAS,EAAC,kBADd;AAEI,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWC,IAFtB;AAGI,MAAA,QAAQ,EAAEwB,CAAC,IAAI,KAAKnB,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAEwB,CAAC,CAACC,MAAF,CAASC;AAAjB,OAAd,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CALJ,EAcM,KAAK3B,KAAL,CAAWE,KAAX,iBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAWE,KADhB,CAfR,eAoBI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKU,QAAtB;AAAgC,MAAA,SAAS,EAAC,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBJ,eAsBI,oBAAC,YAAD;AACI,MAAA,KAAK,EAAC,gCADV;AAEI,MAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWI,aAFxB;AAGI,MAAA,OAAO,EAAE,MAAM,KAAKE,QAAL,CAAc;AAAEF,QAAAA,aAAa,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AAA7B,OAAd,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBJ,eA2BI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAsC,MAAA,OAAO,EAAE,KAAKR,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CA3BJ,EA+BM,KAAKI,KAAL,CAAWK,MAAX,iBAAqB;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCA/B3B,CADJ,eAkCI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,CAlCJ,CADJ,CADJ;AA2CH;;AAnH+B;;AAsHpC,eAAeb,OAAO,CAClB,IADkB,EAElB;AACIG,EAAAA,UADJ;AAEIC,EAAAA;AAFJ,CAFkB,CAAP,CAMbG,WANa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\n\nimport { codeVerify, sendAgain } from '../../redux/actions/auth';\n\nimport AuthContainer from '../../components/AuthContainer';\nimport { AuthCheckbox } from '../../components/Checkbox';\n\nclass TwoFAScreen extends Component {\n    state = {\n        code: '',\n        error: '',\n\n        codeError: false,\n\n        checkAskAgain: true,\n        resend: false\n    };\n\n    componentDidMount() {\n        if (!this.props.location.state || !this.props.location.state.authy_id) {\n            this.props.history.replace('/login');\n            return;\n        }\n    }\n\n    sendAgain = async () => {\n        this.setState({ resend: false });\n        const result = await this.props.sendAgain({\n            authy_id: this.props.location.state.authy_id\n        });\n        if (result.ok) {\n            this.setState({ resend: true });\n        }\n    }\n\n    onVerify = async () => {\n        if (this.state.code === '' || this.state.code.length !== 6) {\n            this.setState({ error: 'Code needs to be 6 length' });\n            return;\n        }\n        this.setState({ error: '' });\n        const result = await this.props.codeVerify({\n            authy_id: this.props.location.state.authy_id,\n            code: this.state.code\n        });\n\n        if (result.ok) {\n            localStorage.setItem('token', result.token);\n            localStorage.setItem('role', result.role);\n            if (this.props.location.state.screen === 'forgot') \n            {\n                this.props.history.replace('reset-password');\n            } \n            else \n            {\n                // if (result.roles && result.roles.indexOf('dealer') > 0) \n                // {\n                //     this.props.history.replace('/dealerHome');\n                // }\n                // else if (result.roles && result.roles.indexOf('sales') > 0) \n                // {\n                //     this.props.history.replace('/sales');\n                // }\n                // else if (result.roles && result.roles.indexOf('admin') > 0) \n                // {\n                //     this.props.history.replace('/admin');\n                // }\n                // else\n                // {\n                    this.props.history.replace('/login');\n                // }\n            }\n        } else {\n            this.setState({ error: result.error });\n        }\n    }\n\n    render() {\n        const endCode = this.props.location.state && this.props.location.state.ending ? this.props.location.state.ending : '';\n        return (\n            <AuthContainer title=\"2-Step Verification\">\n                <div className=\"twofa-page\">\n                    <div className=\"wrapper\">\n                        <div className=\"tip\">\n                            A text message with your code has been sent to a number ending {endCode}\n                        </div>\n\n                        <div className=\"inputs\">\n                            <div className=\"title\">Code</div>\n                            <Form.Control\n                                className=\"input input-code\"\n                                value={this.state.code}\n                                onChange={e => this.setState({ code: e.target.value }) }\n                            />\n                        </div>\n\n                        { this.state.error && (\n                            <div className=\"error\">\n                                {this.state.error}\n                            </div>\n                        )}\n                        \n                        <Button onClick={this.onVerify} className=\"button-action\">VERIFY</Button>\n\n                        <AuthCheckbox\n                            label=\"Don't ask again on this device\"\n                            checked={this.state.checkAskAgain}\n                            onClick={() => this.setState({ checkAskAgain: !this.state.checkAskAgain })}\n                        />\n                        <div className=\"sms-come\">\n                            <span>SMS didn't come?</span>\n                            <span className=\"send-again noselect\" onClick={this.sendAgain}>Send again</span>\n                        </div>\n                        { this.state.resend && <div className=\"resend-sms\">SMS has been sent again</div> }\n                    </div>\n                    <div className=\"mfa-footer\">\n                        <span>Choose another </span>\n                        <span className=\"way-of\">way of verification</span>\n                    </div>\n                </div>\n            </AuthContainer>\n        )\n    }\n}\n\nexport default connect(\n    null,\n    {\n        codeVerify,\n        sendAgain\n    }\n)(TwoFAScreen);"]},"metadata":{},"sourceType":"module"}