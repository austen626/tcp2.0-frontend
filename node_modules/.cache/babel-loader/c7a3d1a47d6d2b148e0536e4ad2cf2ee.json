{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp2.0-frontend/src/screens/Dealer/Sales.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport queryString from 'query-string';\nimport { Form, Row, Col, Button, Modal } from 'react-bootstrap';\nimport { setApplianceFlag } from 'utils/helper';\nimport Header, { HeaderLeft, HeaderCenter, HeaderRight } from '../../components/Dealer/Header';\nimport Footer from '../../components/Dealer/Footer';\nimport { IconDashboardPending, IconStatusConfirmed, IconDashboardFunded, IconDashboardCanceled, IconDashboardDeclined, IconArrowLeft, IconSortInActive, IconSortActive, IconSearchInActive, IconSearchActive, IconFilterActive, IconFilterInActive, IconTrash, IconDashboardIncomplete } from '../../assets/images';\nimport { getSalesList, getAppDetailById, changeApplicationStatus } from '../../redux/actions/sales';\nimport Loader from 'shared/Loader';\nimport { salesType } from './constant';\nimport { TrashContainer } from './style';\n\nclass SalesScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.sidebarRef = React.createRef();\n    this.state = {\n      sortClicked: false,\n      searchClicked: true,\n      filterClicked: false,\n      sidebarOpen: \"\",\n      sortBy: \"date-new\",\n      filterStatus: \"all\",\n      filterPerson: \"all\",\n      filterCategory: \"all\",\n      searchVal: \"\",\n      deleteId: '',\n      backModal: false\n    };\n\n    this.handleArrowBack = () => {\n      this.props.history.goBack();\n    };\n\n    this.handleSortClick = () => {\n      this.setState({\n        sidebarOpen: \"sort\"\n      });\n    };\n\n    this.handleFilterClick = () => {\n      this.setState({\n        sidebarOpen: \"filter\"\n      });\n    };\n\n    this.handleSearchClick = () => {\n      // this.setState({ searchClicked: !this.state.searchClicked });\n      this.setState({\n        searchClicked: true\n      });\n    };\n\n    this.handleAppDetails = appId => {\n      this.props.getAppDetailById(appId);\n      this.props.history.push(`/application-details/${appId}`);\n    };\n\n    this.handleSideBarApply = () => {\n      const {\n        sidebarOpen\n      } = this.state;\n\n      if (sidebarOpen === \"sort\") {\n        this.setState({\n          sidebarOpen: \"\",\n          sortClicked: true\n        });\n      } else if (sidebarOpen === \"search\") {\n        this.setState({\n          sidebarOpen: \"\",\n          searchClicked: true\n        });\n      } else if (sidebarOpen === \"filter\") {\n        this.setState({\n          sidebarOpen: \"\",\n          filterClicked: true\n        });\n      }\n    };\n\n    this.handleSideBarClear = () => {\n      const {\n        sidebarOpen\n      } = this.state;\n\n      if (sidebarOpen === \"sort\") {\n        this.setState({\n          sidebarOpen: \"\",\n          sortClicked: false,\n          sortBy: \"date-new\"\n        });\n      } else if (sidebarOpen === \"search\") {\n        this.setState({\n          sidebarOpen: \"\",\n          searchClicked: false\n        });\n      } else if (sidebarOpen === \"filter\") {\n        this.setState({\n          sidebarOpen: \"\",\n          filterClicked: false,\n          filterStatus: \"all\",\n          filterPerson: \"all\",\n          filterCategory: \"all\"\n        });\n      }\n    };\n\n    this.renderSideBarOptions = () => {\n      const {\n        sidebarOpen,\n        sortBy,\n        filterPerson,\n        filterCategory\n      } = this.state; // const names = this.props.apps.map(app => app.name);\n\n      const salesPersonEmail = this.props.apps.map(app => app.salesperson_email);\n\n      if (sidebarOpen === \"sort\") {\n        return /*#__PURE__*/React.createElement(Form.Control, {\n          as: \"select\",\n          value: sortBy,\n          onChange: e => {\n            this.setState({\n              sortBy: e.target.value\n            });\n            this.setState({\n              sortClicked: true\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"date-new\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }\n        }, \"Date: newest\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"date-old\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }\n        }, \"Date: oldest\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"name-ascending\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }\n        }, \"Name: A-Z\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"date-descending\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }\n        }, \"Name: Z-A\"));\n      }\n\n      if (sidebarOpen === \"filter\") {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Control, {\n          as: \"select\",\n          value: filterPerson,\n          onChange: e => {\n            this.setState({\n              filterPerson: e.target.value\n            });\n            this.setState({\n              filterClicked: true\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          key: \"all\",\n          value: \"all\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }\n        }, \"Salesperson Name\"), salesPersonEmail.filter((name, index) => salesPersonEmail.indexOf(name) === index).map(name => /*#__PURE__*/React.createElement(\"option\", {\n          key: name,\n          value: name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }\n        }, name))), /*#__PURE__*/React.createElement(Form.Control, {\n          as: \"select\",\n          value: filterCategory,\n          onChange: e => {\n            this.setState({\n              filterCategory: e.target.value\n            });\n            this.setState({\n              filterClicked: true\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"all\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }\n        }, \"Category\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"food\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }\n        }, \"FOOD\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"fsp\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }\n        }, \"FSP\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"app\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }\n        }, \"APP\")));\n      }\n    };\n\n    this.renderSideBar = () => {\n      const {\n        sidebarOpen\n      } = this.state;\n\n      if (sidebarOpen === \"\") {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.sidebarRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sidebar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }\n      }, this.renderSideBarOptions()), /*#__PURE__*/React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleSideBarApply,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 29\n        }\n      }, \"CLOSE\")), /*#__PURE__*/React.createElement(Col, {\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleSideBarClear,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 29\n        }\n      }, \"CLEAR\")))));\n    };\n\n    this.handleAppClick = appId => {\n      this.props.getAppDetailById(appId);\n      this.props.history.push(`/app-details/${appId}`);\n    };\n\n    this.deleteSales = (deleteId, id) => {\n      this.setState({\n        deleteId: id,\n        backModal: true\n      });\n    };\n\n    this.handleBackModalClose = () => {\n      this.setState({\n        backModal: false\n      });\n    };\n\n    this.handleBackModalYes = () => {\n      const {\n        deleteId\n      } = this.state;\n      this.setState({\n        backModal: false\n      });\n      const {\n        changeApplicationStatus,\n        getSalesList,\n        location\n      } = this.props;\n      const paramsQuery = queryString.parse(location.search);\n      const pageStatus = this.props.match.params.status;\n      changeApplicationStatus({\n        deleteDivId: deleteId,\n        getSalesList: getSalesList,\n        pageStatus: pageStatus,\n        id: deleteId,\n        status: 'deleted',\n        email: paramsQuery.salesId && paramsQuery.salesId\n      });\n    };\n  }\n\n  componentDidMount() {\n    const status = this.props.match.params.status;\n    const {\n      location\n    } = this.props;\n    const paramsQuery = queryString.parse(location.search);\n    this.props.getSalesList(status, paramsQuery.salesId); // document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {// document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  } // handleClickOutside = (event) => {\n  //     if (this.sidebarRef && this.sidebarRef.current && !this.sidebarRef.current.contains(event.target)) {\n  //         this.setState({ sidebarOpen: \"\" });\n  //     }\n  // }\n\n\n  render() {\n    const {\n      sortClicked,\n      searchClicked,\n      filterClicked,\n      searchVal\n    } = this.state;\n    const {\n      salesData,\n      match\n    } = this.props;\n    let apps = this.props.apps;\n\n    if (searchClicked && searchVal !== '') {\n      apps = apps.filter(app => app.name.toLowerCase().includes(searchVal.toLowerCase()));\n    }\n\n    if (filterClicked) {\n      const {\n        filterStatus,\n        filterPerson,\n        filterCategory\n      } = this.state;\n\n      if (filterStatus !== \"all\") {\n        apps = apps.filter(app => app.status.toLowerCase() === filterStatus);\n      }\n\n      if (filterPerson !== \"all\") {\n        apps = apps.filter(app => app.salesperson_email === filterPerson);\n      }\n\n      if (filterCategory !== \"all\") {\n        apps = apps.filter(app => app.products.find(product => product.type.toLowerCase() === filterCategory.toLowerCase()) !== undefined);\n      }\n    }\n\n    if (sortClicked) {\n      const {\n        sortBy\n      } = this.state;\n\n      if (sortBy === \"name-ascending\") {\n        apps = apps.sort((a, b) => a.name > b.name ? 1 : -1);\n      } else if (sortBy === \"date-descending\") {\n        apps = apps.sort((a, b) => a.name < b.name ? 1 : -1);\n      } else if (sortBy === \"date-new\") {\n        apps = apps.sort((a, b) => moment(new Date(b.updated_at)).format(\"X\") - moment(new Date(a.updated_at)).format(\"X\"));\n      } else if (sortBy === \"date-old\") {\n        apps = apps.sort((a, b) => moment(new Date(a.updated_at)).format(\"X\") - moment(new Date(b.updated_at)).format(\"X\"));\n      }\n    } // apps = apps.filter(a => a.hello_sign && a.hello_sign.length > 0 && a.hello_sign[0].status_code === \"signed\");\n    // if(this.props.match.params.status === \"waiting\") \n    // {\n    //     apps = apps.filter(a => a.status === 'waiting');\n    // } \n    // else if(this.props.match.params.status === \"declined\") \n    // {\n    //     apps = apps.filter(a => a.status === 'declined');\n    // } \n    // else if(this.props.match.params.status === \"approved\") \n    // {\n    //     apps = apps.filter(a => a.status === 'approved');\n    // } \n    // else if(this.props.match.params.status === \"funded\") \n    // {\n    //     apps = apps.filter(a => a.status === 'funded');\n    // } \n    // else if(this.props.match.params.status === \"canceled\") \n    // {\n    //     apps = apps.filter(a => a.status === 'canceled');\n    // }\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dealer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }\n    }, salesData.getListLoading && /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 47\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.backModal,\n      onHide: this.handleBackModalClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 25\n      }\n    }, \"Are you sure you want to delete this item from the system? You will not be able to access this record again.\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleBackModalClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 25\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.handleBackModalYes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 25\n      }\n    }, \"Yes\"))), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HeaderLeft, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: IconArrowLeft,\n      onClick: this.handleArrowBack,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: sortClicked ? IconSortActive : IconSortInActive,\n      onClick: this.handleSortClick,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(HeaderCenter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 25\n      }\n    }, \"SALES\")), /*#__PURE__*/React.createElement(HeaderRight, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: searchClicked ? IconSearchActive : IconSearchInActive,\n      onClick: this.handleSearchClick,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: filterClicked ? IconFilterActive : IconFilterInActive,\n      onClick: this.handleFilterClick,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sales-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sales-list-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Search\",\n      value: this.state.searchVal,\n      onChange: e => this.setState({\n        searchVal: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sales-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }\n    }, apps.map((app, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        id: `sales${app.id}`,\n        className: `request-row ${index % 2 === 0 && \"dark\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 6,\n        md: 5,\n        className: \"data\",\n        onClick: () => {\n          app.status !== 'waiting1' && this.handleAppDetails(app.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 41\n        }\n      }, app.name, app.co_customer && app.co_name && /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 45\n        }\n      }, ` and ${app.co_name}`))), /*#__PURE__*/React.createElement(Col, {\n        xs: 4,\n        md: 4,\n        className: \"data text-left\",\n        onClick: () => {\n          app.status !== 'waiting1' && this.handleAppDetails(app.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 37\n        }\n      }, app.status === \"approved\" && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"date-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 74\n        }\n      }, \"TIER-\", app.rating || 0), app.products.map(product => /*#__PURE__*/React.createElement(\"div\", {\n        key: product.id,\n        className: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 45\n        }\n      }, setApplianceFlag(product.type.toLowerCase()), \": $\", product.balance)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 41\n        }\n      }, moment(app.created_at, 'YYYY/MM/DD').format('MM/DD/YYYY'))), /*#__PURE__*/React.createElement(Col, {\n        xs: 2,\n        md: 3,\n        className: \"data text-center d-flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 37\n        }\n      }, app.status === \"pending\" && /*#__PURE__*/React.createElement(\"img\", {\n        src: IconDashboardPending,\n        width: \"39\",\n        height: \"39\",\n        style: {\n          borderRadius: \"50%\"\n        },\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 71\n        }\n      }), app.status === \"waiting\" && /*#__PURE__*/React.createElement(\"img\", {\n        src: IconDashboardIncomplete,\n        width: \"39\",\n        height: \"39\",\n        style: {\n          borderRadius: \"50%\"\n        },\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 71\n        }\n      }), app.status === \"approved\" && /*#__PURE__*/React.createElement(\"img\", {\n        src: IconStatusConfirmed,\n        width: \"39\",\n        height: \"39\",\n        style: {\n          borderRadius: \"50%\"\n        },\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 72\n        }\n      }), app.status === \"declined\" && /*#__PURE__*/React.createElement(\"img\", {\n        src: IconDashboardDeclined,\n        width: \"39\",\n        height: \"39\",\n        style: {\n          borderRadius: \"50%\"\n        },\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 72\n        }\n      }), app.status === \"cancelled\" && /*#__PURE__*/React.createElement(\"img\", {\n        src: IconDashboardCanceled,\n        width: \"39\",\n        height: \"39\",\n        style: {\n          borderRadius: \"50%\"\n        },\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 73\n        }\n      }), app.status === \"funded\" && /*#__PURE__*/React.createElement(\"img\", {\n        src: IconDashboardFunded,\n        width: \"39\",\n        height: \"39\",\n        style: {\n          borderRadius: \"50%\"\n        },\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 70\n        }\n      }), /*#__PURE__*/React.createElement(TrashContainer, {\n        onClick: () => this.deleteSales(`sales${app.id}`, app.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: IconTrash,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 49\n        }\n      })))));\n    }), !salesData.getListLoading && apps && apps.length === 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"request-row dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"d-flex justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 37\n      }\n    }, \"There are no \", salesType[match.params.status] || 'List', \" Items in the Queue\"))))), this.renderSideBar());\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  apps: state.sales.apps,\n  salesData: state.sales\n});\n\nexport default connect(mapStateToProps, {\n  getSalesList,\n  getAppDetailById,\n  changeApplicationStatus\n})(SalesScreen);","map":{"version":3,"sources":["/home/freedom/Music/tcp2.0-frontend/src/screens/Dealer/Sales.js"],"names":["React","Component","connect","moment","queryString","Form","Row","Col","Button","Modal","setApplianceFlag","Header","HeaderLeft","HeaderCenter","HeaderRight","Footer","IconDashboardPending","IconStatusConfirmed","IconDashboardFunded","IconDashboardCanceled","IconDashboardDeclined","IconArrowLeft","IconSortInActive","IconSortActive","IconSearchInActive","IconSearchActive","IconFilterActive","IconFilterInActive","IconTrash","IconDashboardIncomplete","getSalesList","getAppDetailById","changeApplicationStatus","Loader","salesType","TrashContainer","SalesScreen","sidebarRef","createRef","state","sortClicked","searchClicked","filterClicked","sidebarOpen","sortBy","filterStatus","filterPerson","filterCategory","searchVal","deleteId","backModal","handleArrowBack","props","history","goBack","handleSortClick","setState","handleFilterClick","handleSearchClick","handleAppDetails","appId","push","handleSideBarApply","handleSideBarClear","renderSideBarOptions","salesPersonEmail","apps","map","app","salesperson_email","e","target","value","filter","name","index","indexOf","renderSideBar","handleAppClick","deleteSales","id","handleBackModalClose","handleBackModalYes","location","paramsQuery","parse","search","pageStatus","match","params","status","deleteDivId","email","salesId","componentDidMount","componentWillUnmount","render","salesData","toLowerCase","includes","products","find","product","type","undefined","sort","a","b","Date","updated_at","format","getListLoading","co_customer","co_name","rating","balance","created_at","borderRadius","length","mapStateToProps","sales"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment'\nimport queryString from 'query-string';\nimport { Form, Row, Col, Button, Modal } from 'react-bootstrap';\nimport { setApplianceFlag } from 'utils/helper';\nimport Header, { HeaderLeft, HeaderCenter, HeaderRight } from '../../components/Dealer/Header';\nimport Footer from '../../components/Dealer/Footer';\nimport { IconDashboardPending, IconStatusConfirmed, IconDashboardFunded, IconDashboardCanceled, IconDashboardDeclined, IconArrowLeft, IconSortInActive, IconSortActive, IconSearchInActive, IconSearchActive, IconFilterActive, IconFilterInActive, IconTrash, IconDashboardIncomplete } from '../../assets/images';\nimport { getSalesList, getAppDetailById, changeApplicationStatus } from '../../redux/actions/sales';\nimport Loader from 'shared/Loader';\nimport { salesType } from './constant';\nimport { TrashContainer } from './style';\nclass SalesScreen extends Component {\n\n    sidebarRef = React.createRef();\n\n    state = {\n        sortClicked: false,\n        searchClicked: true,\n        filterClicked: false,\n\n        sidebarOpen: \"\",\n\n        sortBy: \"date-new\",\n        filterStatus: \"all\",\n        filterPerson: \"all\",\n        filterCategory: \"all\",\n\n        searchVal: \"\",\n        deleteId: '',\n        backModal: false\n    }\n\n    componentDidMount() {\n        const status = this.props.match.params.status;\n        const { location } = this.props;\n        const paramsQuery = queryString.parse(location.search);\n        this.props.getSalesList(status, paramsQuery.salesId);\n        // document.addEventListener(\"mousedown\", this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        // document.removeEventListener(\"mousedown\", this.handleClickOutside);\n    }\n\n    // handleClickOutside = (event) => {\n    //     if (this.sidebarRef && this.sidebarRef.current && !this.sidebarRef.current.contains(event.target)) {\n    //         this.setState({ sidebarOpen: \"\" });\n    //     }\n    // }\n\n    handleArrowBack = () => {\n        this.props.history.goBack();\n    }\n\n    handleSortClick = () => {\n        this.setState({ sidebarOpen: \"sort\" });\n    }\n\n    handleFilterClick = () => {\n        this.setState({ sidebarOpen: \"filter\" });\n    }\n\n    handleSearchClick = () => {\n        // this.setState({ searchClicked: !this.state.searchClicked });\n        this.setState({ searchClicked: true})\n    }\n\n    handleAppDetails = (appId) => {\n        this.props.getAppDetailById(appId);\n        this.props.history.push(`/application-details/${appId}`);\n    }\n\n    handleSideBarApply = () => {\n        const { sidebarOpen } = this.state;\n        if (sidebarOpen === \"sort\") {\n            this.setState({ sidebarOpen: \"\", sortClicked: true });\n        } else if (sidebarOpen === \"search\") {\n            this.setState({ sidebarOpen: \"\", searchClicked: true });\n        } else if (sidebarOpen === \"filter\") {\n            this.setState({ sidebarOpen: \"\", filterClicked: true });\n        }\n    }\n\n    handleSideBarClear = () => {\n        const { sidebarOpen } = this.state;\n        if (sidebarOpen === \"sort\") {\n            this.setState({ sidebarOpen: \"\", sortClicked: false, sortBy: \"date-new\" });\n        } else if (sidebarOpen === \"search\") {\n            this.setState({ sidebarOpen: \"\", searchClicked: false });\n        } else if (sidebarOpen === \"filter\") {\n            this.setState({ sidebarOpen: \"\", filterClicked: false, filterStatus: \"all\", filterPerson: \"all\", filterCategory: \"all\" });\n        }\n    }\n\n    renderSideBarOptions = () => {\n        const { sidebarOpen, sortBy, filterPerson, filterCategory } = this.state;\n\n        // const names = this.props.apps.map(app => app.name);\n        const salesPersonEmail = this.props.apps.map(app => app.salesperson_email);\n        if (sidebarOpen === \"sort\") {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    value={sortBy}\n                    onChange={(e) => {\n                        this.setState({ sortBy: e.target.value })\n                        this.setState({\n                            sortClicked: true,\n                        })  \n                    } }\n                >\n                    <option value=\"date-new\">Date: newest</option>\n                    <option value=\"date-old\">Date: oldest</option>\n                    <option value=\"name-ascending\">Name: A-Z</option>\n                    <option value=\"date-descending\">Name: Z-A</option>\n                </Form.Control>\n            )   \n        }\n\n        if (sidebarOpen === \"filter\") {\n            return (\n                <>\n                    {/* <Form.Control\n                        as=\"select\"\n                        value={filterStatus}\n                        onChange={(e) => this.setState({ filterStatus: e.target.value })}\n                    >\n                        <option value=\"all\">Status</option>\n                        <option value=\"approved\">Approved</option>\n                        <option value=\"waiting\">Waiting</option>\n                    </Form.Control> */}\n\n                    <Form.Control\n                        as=\"select\"\n                        value={filterPerson}\n                        onChange={(e) => {\n                            this.setState({ filterPerson: e.target.value })\n                            this.setState({\n                                filterClicked: true,\n                            })   \n                        }}\n                    >\n                        <option key=\"all\" value=\"all\">Salesperson Name</option>\n                        { salesPersonEmail.filter((name, index) => salesPersonEmail.indexOf(name) === index).map(name => (\n                            <option key={name} value={name}>{name}</option>\n                        )) }\n                    </Form.Control>\n\n                    <Form.Control\n                        as=\"select\"\n                        value={filterCategory}\n                        onChange={(e) => {\n                            this.setState({ filterCategory: e.target.value })\n                            this.setState({\n                                filterClicked: true,\n                            })  \n                        } }\n                    >\n                        <option value=\"all\">Category</option>\n                        <option value=\"food\">FOOD</option>\n                        <option value=\"fsp\">FSP</option>\n                        <option value=\"app\">APP</option>\n                    </Form.Control>\n\n                    {/* <Form.Label>Value range</Form.Label>\n\n                    <div className=\"value-range\">\n                        <Form.Control placeholder=\"$600\" />\n                        <Form.Label>-</Form.Label>\n                        <Form.Control placeholder=\"$3990\" />\n                    </div> */}\n                </>\n            )\n        }\n\n    }\n\n    renderSideBar = () => {\n        const { sidebarOpen } = this.state;\n\n        if (sidebarOpen === \"\") {\n            return null;\n        }\n\n        return (\n            <div ref={this.sidebarRef}>\n                <div  className=\"sidebar\">\n                    { this.renderSideBarOptions() }\n                </div>\n                <Footer>\n                    <Row>\n                        <Col xs={6}>\n                            <Button onClick={this.handleSideBarApply}>CLOSE</Button>\n                        </Col>\n                        <Col xs={6}>\n                            <Button onClick={this.handleSideBarClear}>CLEAR</Button>\n                        </Col>\n                    </Row>\n                </Footer>\n            </div>\n        )\n    }\n\n    handleAppClick = (appId) => {\n        this.props.getAppDetailById(appId);\n        this.props.history.push(`/app-details/${appId}`);\n    }\n\n    deleteSales = (deleteId, id) => {\n        this.setState({\n            deleteId: id,\n            backModal: true\n        })\n    }\n\n    handleBackModalClose = () => {\n        this.setState({ backModal: false });\n    }\n\n    handleBackModalYes = () => {\n        const { deleteId } = this.state;\n        this.setState({ backModal: false });\n        const { changeApplicationStatus, getSalesList, location } = this.props;\n        \n        const paramsQuery = queryString.parse(location.search);\n        const pageStatus = this.props.match.params.status;\n        changeApplicationStatus({\n            deleteDivId: deleteId,\n            getSalesList: getSalesList,\n            pageStatus: pageStatus,\n            id: deleteId,\n            status: 'deleted',\n            email: paramsQuery.salesId && paramsQuery.salesId\n        })\n    }\n\n    render() {\n        const { sortClicked, searchClicked, filterClicked, searchVal } = this.state;\n        const { salesData, match } = this.props;\n        let apps = this.props.apps;\n        if (searchClicked && searchVal !== '') {\n            apps = apps.filter(app => app.name.toLowerCase().includes(searchVal.toLowerCase())) \n        }\n        if (filterClicked) {\n            const { filterStatus, filterPerson, filterCategory } = this.state;\n            if (filterStatus !== \"all\") {\n                apps = apps.filter(app => app.status.toLowerCase() === filterStatus);\n            }\n            if (filterPerson !== \"all\") {\n                apps = apps.filter(app => app.salesperson_email === filterPerson);\n            }\n            if (filterCategory !== \"all\") {\n                apps = apps.filter(app => app.products.find(product => product.type.toLowerCase() === filterCategory.toLowerCase()) !== undefined)\n            }\n        }\n        if (sortClicked) {\n            const { sortBy } = this.state;\n            if (sortBy === \"name-ascending\") {\n                apps = apps.sort((a, b) => a.name > b.name ? 1 : -1)\n            }\n            else if (sortBy === \"date-descending\") {\n                apps = apps.sort((a, b) => a.name < b.name ? 1 : -1)\n            }\n            else if (sortBy === \"date-new\") {\n                apps = apps.sort((a, b) => moment(new Date(b.updated_at)).format(\"X\") - moment(new Date(a.updated_at)).format(\"X\"))\n            }\n            else if (sortBy === \"date-old\") {\n                apps = apps.sort((a, b) => moment(new Date(a.updated_at)).format(\"X\") - moment(new Date(b.updated_at)).format(\"X\"))\n            }\n        }\n\n        // apps = apps.filter(a => a.hello_sign && a.hello_sign.length > 0 && a.hello_sign[0].status_code === \"signed\");\n\n        // if(this.props.match.params.status === \"waiting\") \n        // {\n        //     apps = apps.filter(a => a.status === 'waiting');\n        // } \n        // else if(this.props.match.params.status === \"declined\") \n        // {\n        //     apps = apps.filter(a => a.status === 'declined');\n        // } \n        // else if(this.props.match.params.status === \"approved\") \n        // {\n        //     apps = apps.filter(a => a.status === 'approved');\n        // } \n        // else if(this.props.match.params.status === \"funded\") \n        // {\n        //     apps = apps.filter(a => a.status === 'funded');\n        // } \n        // else if(this.props.match.params.status === \"canceled\") \n        // {\n        //     apps = apps.filter(a => a.status === 'canceled');\n        // }\n\n        return (\n            <div className=\"dealer\">\n                { salesData.getListLoading && <Loader /> }\n                <Modal show={this.state.backModal} onHide={this.handleBackModalClose}>\n                    <Modal.Header closeButton></Modal.Header>\n                    <Modal.Body>\n                        <p>Are you sure you want to delete this item from the system? You will not be able to access this record again.</p>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleBackModalClose}>\n                            No\n                        </Button>\n                        <Button variant=\"primary\" onClick={this.handleBackModalYes}>\n                            Yes\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n                <Header>\n                    <HeaderLeft>\n                        <img src={IconArrowLeft} onClick={this.handleArrowBack} alt=\"\"/>\n                        <img src={sortClicked ? IconSortActive : IconSortInActive} onClick={this.handleSortClick} alt=\"\"/>\n                    </HeaderLeft>\n                    <HeaderCenter>\n                        <span>SALES</span>\n                    </HeaderCenter>\n                    <HeaderRight>\n                        <img src={searchClicked ? IconSearchActive : IconSearchInActive} onClick={this.handleSearchClick} alt=\"\"/>\n                        <img src={filterClicked ? IconFilterActive : IconFilterInActive} onClick={this.handleFilterClick} alt=\"\"/>\n                    </HeaderRight>\n                </Header>\n                <div className=\"sales-main\">\n                        <div className=\"sales-list-search\">\n                            <Form.Control\n                                placeholder=\"Search\"\n                                value={this.state.searchVal}\n                                onChange={(e) => this.setState({ searchVal: e.target.value })}\n                            />\n                        </div>\n                   \n                    <div className=\"sales-list\">\n\n                        { apps.map((app, index) => {\n                            return (\n                            <div key={index} id={`sales${app.id}`}  className={`request-row ${index%2 === 0 && \"dark\"}`}>\n                                <Row>\n                                    <Col xs={6} md={5} className=\"data\" onClick={() => {app.status !== 'waiting1' && this.handleAppDetails(app.id)}}>\n                                        <div className=\"title\">{ app.name }{\n                                            app.co_customer && \n                                            app.co_name &&\n                                            <span>{` and ${app.co_name}`}</span>}</div>\n                                        {/* <div className=\"sub-title\">Product Name</div>\n                                        <div className=\"sub-title\">Employee Name</div> */}\n                                    </Col>\n                                    <Col xs={4} md={4} className=\"data text-left\" onClick={() => {app.status !== 'waiting1' && this.handleAppDetails(app.id)}}>\n                                        {\n                                            app.status === \"approved\" && <div className=\"date-title\">TIER-{app.rating || 0 }</div>\n                                        }\n                                        \n                                        { app.products.map(product => (\n                                            <div key={product.id} className=\"date\">{ setApplianceFlag((product.type).toLowerCase())}: ${product.balance}</div>\n                                        )) }\n                                        <div className=\"date\">{ moment(app.created_at, 'YYYY/MM/DD').format('MM/DD/YYYY')}</div>\n                                    </Col>\n                                   \n                                    <Col xs={2} md={3} className=\"data text-center d-flex\">\n                                        { app.status === \"pending\" && <img src={IconDashboardPending} width=\"39\" height=\"39\" style={{borderRadius: \"50%\"}} alt=\"\"/> }\n                                        { app.status === \"waiting\" && <img src={IconDashboardIncomplete} width=\"39\" height=\"39\" style={{borderRadius: \"50%\"}} alt=\"\"/> }\n                                        { app.status === \"approved\" && <img src={IconStatusConfirmed} width=\"39\" height=\"39\" style={{borderRadius: \"50%\"}} alt=\"\" /> }\n                                        { app.status === \"declined\" && <img src={IconDashboardDeclined} width=\"39\" height=\"39\" style={{borderRadius: \"50%\"}} alt=\"\"/> }\n                                        { app.status === \"cancelled\" && <img src={IconDashboardCanceled} width=\"39\" height=\"39\" style={{borderRadius: \"50%\"}} alt=\"\"/> }\n                                        { app.status === \"funded\" && <img src={IconDashboardFunded} width=\"39\" height=\"39\" style={{borderRadius: \"50%\"}} alt=\"\"/> }\n                                        \n                                            <TrashContainer onClick={() => this.deleteSales(`sales${app.id}`, app.id)}>\n                                                <img src={IconTrash} alt=\"\" />\n                                            </TrashContainer>\n                                        \n                                    </Col>\n                                </Row>\n                            </div>\n                        )})}\n                         {\n                            !salesData.getListLoading && apps && apps.length === 0 &&\n                            <div className=\"request-row dark\">\n                                <Row className=\"d-flex justify-content-center align-items-center\">\n                                    <div>There are no { salesType[match.params.status] || 'List'} Items in the Queue</div>\n                                </Row>\n                            </div>\n                        }\n                    </div>\n                </div>\n\n                { this.renderSideBar() }              \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    apps: state.sales.apps,\n    salesData: state.sales\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        getSalesList,\n        getAppDetailById,\n        changeApplicationStatus\n    }\n)(SalesScreen);"]},"metadata":{},"sourceType":"module"}