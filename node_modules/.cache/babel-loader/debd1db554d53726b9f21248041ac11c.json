{"ast":null,"code":"import { SALES_LIST, GET_APP_DETAIL, GET_APP_DETAIL_SUCCESS, GET_APP_DETAIL_ERROR, SALES_LIST_SUCCESS, SALES_LIST_ERROR, CANCEL_TYPE_COUNT_REQUEST, CANCEL_TYPE_COUNT_SUCCESS, CANCEL_TYPE_COUNT_ERROR, PENDING_TYPE_COUNT_REQUEST, PENDING_TYPE_COUNT_SUCCESS, PENDING_TYPE_COUNT_ERROR, SET_INCOMPLETE_REMINDER_REQUEST, SET_INCOMPLETE_REMINDER_SUCCESS, SET_INCOMPLETE_REMINDER_ERROR } from '../actions/sales';\nconst INIT_STATE = {\n  apps: [],\n  getListLoading: false,\n  selectedApp: {\n    loading: false,\n    data: {}\n  },\n  cancelTypeCount: {\n    declineCount: 0,\n    approvedCount: 0,\n    fundedCount: 0,\n    cancelCount: 0\n  },\n  cancelTypeLoading: false,\n  pendingTypeCont: {\n    pendingCount: 0,\n    incompleteCount: 0\n  },\n  pendingTypeLoading: false,\n  isReminderLoading: false\n};\nexport default function (state = INIT_STATE, action) {\n  switch (action.type) {\n    case SALES_LIST:\n      return { ...state,\n        apps: [],\n        getListLoading: true\n      };\n\n    case SALES_LIST_SUCCESS:\n      return { ...state,\n        apps: action.payload,\n        getListLoading: false\n      };\n\n    case SALES_LIST_ERROR:\n      return { ...state,\n        getListLoading: false\n      };\n\n    case GET_APP_DETAIL:\n      return { ...state,\n        selectedApp: {\n          loading: true,\n          data: {}\n        }\n      };\n\n    case GET_APP_DETAIL_SUCCESS:\n      return { ...state,\n        selectedApp: {\n          loading: false,\n          data: action.payload\n        }\n      };\n\n    case GET_APP_DETAIL_ERROR:\n      return { ...state,\n        selectedApp: {\n          loading: false,\n          data: {}\n        }\n      };\n\n    case CANCEL_TYPE_COUNT_REQUEST:\n      return { ...state,\n        cancelTypeLoading: true\n      };\n\n    case CANCEL_TYPE_COUNT_SUCCESS:\n      return { ...state,\n        cancelTypeCount: {\n          declineCount: action.payload.declineCount,\n          approvedCount: action.payload.approvedCount,\n          fundedCount: action.payload.fundedCount,\n          cancelCount: action.payload.cancelCount\n        },\n        cancelTypeLoading: false\n      };\n\n    case CANCEL_TYPE_COUNT_ERROR:\n      return { ...state,\n        cancelTypeLoading: false\n      };\n\n    case PENDING_TYPE_COUNT_REQUEST:\n      return { ...state,\n        pendingTypeLoading: true\n      };\n\n    case PENDING_TYPE_COUNT_SUCCESS:\n      return { ...state,\n        pendingTypeCont: {\n          pendingCount: action.payload.pendingCount,\n          incompleteCount: action.payload.incompleteCount\n        },\n        pendingTypeLoading: false\n      };\n\n    case PENDING_TYPE_COUNT_ERROR:\n      return { ...state,\n        pendingTypeLoading: false\n      };\n\n    case SET_INCOMPLETE_REMINDER_REQUEST:\n      return { ...state,\n        isReminderLoading: true\n      };\n\n    case SET_INCOMPLETE_REMINDER_SUCCESS:\n      return { ...state,\n        isReminderLoading: false\n      };\n\n    case SET_INCOMPLETE_REMINDER_ERROR:\n      return { ...state,\n        isReminderLoading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/freedom/Music/tcp2.0-frontend/src/redux/reducers/sales.js"],"names":["SALES_LIST","GET_APP_DETAIL","GET_APP_DETAIL_SUCCESS","GET_APP_DETAIL_ERROR","SALES_LIST_SUCCESS","SALES_LIST_ERROR","CANCEL_TYPE_COUNT_REQUEST","CANCEL_TYPE_COUNT_SUCCESS","CANCEL_TYPE_COUNT_ERROR","PENDING_TYPE_COUNT_REQUEST","PENDING_TYPE_COUNT_SUCCESS","PENDING_TYPE_COUNT_ERROR","SET_INCOMPLETE_REMINDER_REQUEST","SET_INCOMPLETE_REMINDER_SUCCESS","SET_INCOMPLETE_REMINDER_ERROR","INIT_STATE","apps","getListLoading","selectedApp","loading","data","cancelTypeCount","declineCount","approvedCount","fundedCount","cancelCount","cancelTypeLoading","pendingTypeCont","pendingCount","incompleteCount","pendingTypeLoading","isReminderLoading","state","action","type","payload"],"mappings":"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","sourcesContent":["import {\n    SALES_LIST,\n    GET_APP_DETAIL,\n    GET_APP_DETAIL_SUCCESS,\n    GET_APP_DETAIL_ERROR,\n    SALES_LIST_SUCCESS,\n    SALES_LIST_ERROR,\n    CANCEL_TYPE_COUNT_REQUEST,\n    CANCEL_TYPE_COUNT_SUCCESS,\n    CANCEL_TYPE_COUNT_ERROR,\n    PENDING_TYPE_COUNT_REQUEST,\n    PENDING_TYPE_COUNT_SUCCESS,\n    PENDING_TYPE_COUNT_ERROR,\n    SET_INCOMPLETE_REMINDER_REQUEST,\n    SET_INCOMPLETE_REMINDER_SUCCESS,\n    SET_INCOMPLETE_REMINDER_ERROR\n} from '../actions/sales';\n\nconst INIT_STATE = {\n    apps: [],\n    getListLoading: false,\n\n    selectedApp: {\n        loading: false,\n        data: {}\n    },\n    cancelTypeCount: {\n        declineCount: 0,\n        approvedCount: 0,\n        fundedCount: 0,\n        cancelCount: 0,\n    },\n    cancelTypeLoading: false,\n    pendingTypeCont: {\n        pendingCount: 0,\n        incompleteCount: 0,\n    },\n    pendingTypeLoading: false,\n    isReminderLoading: false\n};\n\nexport default function(state = INIT_STATE, action){\n    switch (action.type) {\n        case SALES_LIST:\n            return {\n                ...state,\n                apps: [],\n                getListLoading: true\n            }\n        case SALES_LIST_SUCCESS:\n            return {\n                ...state,\n                apps: action.payload,\n                getListLoading: false\n\n            }\n        case SALES_LIST_ERROR:\n            return {\n                ...state,\n                getListLoading: false\n            }\n        case GET_APP_DETAIL:\n            return {\n                ...state,\n                selectedApp: {                    \n                    loading: true,\n                    data: {}\n                }\n            }\n        case GET_APP_DETAIL_SUCCESS:\n            return {\n                ...state,\n                selectedApp: {\n                    loading: false,\n                    data: action.payload\n                }\n            }\n        case GET_APP_DETAIL_ERROR:\n            return {\n                ...state,\n                selectedApp: {\n                    loading: false,\n                    data: {}\n                }\n            }\n        case CANCEL_TYPE_COUNT_REQUEST:\n            return {\n                ...state,\n                cancelTypeLoading: true,\n            }\n        case CANCEL_TYPE_COUNT_SUCCESS:\n            return {\n                ...state,\n                cancelTypeCount: {\n                    declineCount: action.payload.declineCount,\n                    approvedCount: action.payload.approvedCount,\n                    fundedCount: action.payload.fundedCount,\n                    cancelCount: action.payload.cancelCount,\n                },\n                cancelTypeLoading: false,\n            }\n        case CANCEL_TYPE_COUNT_ERROR:\n            return {\n                ...state,\n                cancelTypeLoading: false,\n            }\n        case PENDING_TYPE_COUNT_REQUEST:\n            return {\n                ...state,\n                pendingTypeLoading: true,\n            }\n        case PENDING_TYPE_COUNT_SUCCESS:\n            return {\n                ...state,\n                pendingTypeCont: {\n                    pendingCount: action.payload.pendingCount,\n                    incompleteCount: action.payload.incompleteCount,\n                },\n                pendingTypeLoading: false,\n            }\n        case PENDING_TYPE_COUNT_ERROR:\n            return {\n                ...state,\n                pendingTypeLoading: false,\n            }\n        case SET_INCOMPLETE_REMINDER_REQUEST:\n            return {\n                ...state,\n                isReminderLoading: true,\n            }\n        case SET_INCOMPLETE_REMINDER_SUCCESS:\n            return {\n                ...state,\n                isReminderLoading: false,\n            }\n        case SET_INCOMPLETE_REMINDER_ERROR:\n            return {\n                ...state,\n                isReminderLoading: false,\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}