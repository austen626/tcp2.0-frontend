{"ast":null,"code":"import axios from 'axios';\nimport { pushNotification } from 'utils/notification';\nexport const baseUrl = 'https://dev-apiv2.traviscapitalpartners.com/api/'; // const baseUrl = 'https://api.traviscapitalpartners.com/api/';\n\nconst api = axios.create({\n  baseURL: baseUrl\n});\napi.interceptors.request.use(async function (config) {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n\n  return config;\n}, error => Promise.reject(error));\napi.interceptors.response.use(response => {\n  if (response.data && response.data.error) {\n    return Promise.reject(response);\n  }\n\n  return response;\n}, error => {\n  if (!error.response) {\n    // pushNotification('Network Error.', 'error', 'TOP_RIGHT', 3000);\n    return Promise.reject(error);\n  }\n\n  if (error.response.status === 440 || error.response.status === 401) {\n    pushNotification('Your session has expired please login again.', 'error', 'TOP_RIGHT', 3000);\n  }\n\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"sources":["/home/freedom/Music/tcp2.0-frontend/src/api.js"],"names":["axios","pushNotification","baseUrl","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","response","data","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAO,MAAMC,OAAO,GAAG,kDAAhB,C,CACP;;AACA,MAAMC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAa;AACrBC,EAAAA,OAAO,EAAEH;AADY,CAAb,CAAZ;AAIAC,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CACI,gBAAeC,MAAf,EAAuB;AACnB,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,MAAIF,KAAJ,EAAW;AACPD,IAAAA,MAAM,CAACI,OAAP,CAAe,eAAf,IAAmC,SAAQH,KAAM,EAAjD;AACH;;AACD,SAAOD,MAAP;AACH,CAPL,EAQIK,KAAK,IAAIC,OAAO,CAACC,MAAR,CAAeF,KAAf,CARb;AAWAX,GAAG,CAACG,YAAJ,CAAiBW,QAAjB,CAA0BT,GAA1B,CAA+BS,QAAD,IAAc;AACxC,MAAIA,QAAQ,CAACC,IAAT,IAAiBD,QAAQ,CAACC,IAAT,CAAcJ,KAAnC,EAA0C;AACtC,WAAOC,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAP;AACH;;AACD,SAAOA,QAAP;AACH,CALD,EAKIH,KAAD,IAAW;AACV,MAAI,CAACA,KAAK,CAACG,QAAX,EAAqB;AACjB;AACA,WAAOF,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH;;AACD,MAAIA,KAAK,CAACG,QAAN,CAAeE,MAAf,KAA0B,GAA1B,IAAiCL,KAAK,CAACG,QAAN,CAAeE,MAAf,KAA0B,GAA/D,EAAoE;AAChElB,IAAAA,gBAAgB,CAAC,8CAAD,EAAiD,OAAjD,EAA0D,WAA1D,EAAuE,IAAvE,CAAhB;AACH;;AACD,SAAOc,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAdD;AAgBA,eAAeX,GAAf","sourcesContent":["import axios from 'axios';\nimport { pushNotification } from 'utils/notification';\nexport const baseUrl = 'https://dev-apiv2.traviscapitalpartners.com/api/';\n// const baseUrl = 'https://api.traviscapitalpartners.com/api/';\nconst api = axios.create({\n    baseURL: baseUrl\n});\n\napi.interceptors.request.use(\n    async function(config) {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers['Authorization'] = `Token ${token}`;\n        }\n        return config;\n    },\n    error => Promise.reject(error),\n);\n\napi.interceptors.response.use((response) => {\n    if (response.data && response.data.error) {\n        return Promise.reject(response);\n    }\n    return response;\n}, (error) => {\n    if (!error.response) {\n        // pushNotification('Network Error.', 'error', 'TOP_RIGHT', 3000);\n        return Promise.reject(error);\n    }\n    if (error.response.status === 440 || error.response.status === 401) {\n        pushNotification('Your session has expired please login again.', 'error', 'TOP_RIGHT', 3000);\n    }\n    return Promise.reject(error);\n});\n\nexport default api;"]},"metadata":{},"sourceType":"module"}