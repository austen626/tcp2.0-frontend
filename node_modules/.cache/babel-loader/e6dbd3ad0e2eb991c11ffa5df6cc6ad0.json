{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp-frontend/src/screens/Auth/ForgotPassword.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Row, Col } from 'react-bootstrap';\nimport { forgotPassword } from '../../redux/actions/auth';\nimport AuthContainer from '../../components/AuthContainer';\n\nclass ForgotPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      validated: false,\n      error: ''\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        validated: true\n      });\n      const form = event.currentTarget;\n\n      if (form.checkValidity() === false) {\n        event.stopPropagation();\n      } else {\n        this.onConfirm();\n      }\n    };\n\n    this.onConfirm = async () => {\n      const {\n        email\n      } = this.state;\n      const result = await this.props.forgotPassword({\n        email\n      });\n\n      if (result.ok) {\n        this.props.history.push({\n          pathname: '/2fa',\n          state: { ...result.data,\n            screen: 'forgot'\n          }\n        });\n      } else {\n        this.setState({\n          error: result.error\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      email,\n      validated,\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(AuthContainer, {\n      title: \"FORGOT PASSWORD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: this.handleSubmit,\n      className: \"wrapper forgot-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      pattern: \"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\",\n      className: \"input input-email\",\n      value: email,\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      isInvalid: this.state.invalidEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, error)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"button-action\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, \"CONFIRM\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {\n  forgotPassword\n})(ForgotPassword);","map":{"version":3,"sources":["/home/freedom/Music/tcp-frontend/src/screens/Auth/ForgotPassword.js"],"names":["React","Component","connect","Button","Form","Row","Col","forgotPassword","AuthContainer","ForgotPassword","state","email","validated","error","handleSubmit","event","preventDefault","setState","form","currentTarget","checkValidity","stopPropagation","onConfirm","result","props","ok","history","push","pathname","data","screen","render","e","target","value","invalidEmail","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Row, Col } from 'react-bootstrap';\n\nimport { forgotPassword } from '../../redux/actions/auth';\n\nimport AuthContainer from '../../components/AuthContainer';\n\nclass ForgotPassword extends Component {\n    state = {\n        email: '',\n\n        validated: false,\n        error: ''\n    };\n\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        this.setState({ validated: true });\n\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.stopPropagation();\n        } else {\n            this.onConfirm();\n        }\n    }\n\n    onConfirm = async () => {\n        const { email } = this.state;\n        const result = await this.props.forgotPassword({\n            email\n        });\n\n        if (result.ok) {\n            this.props.history.push({\n                pathname: '/2fa',\n                state: {\n                    ...result.data,\n                    screen: 'forgot'\n                }\n            })\n        } else {\n            this.setState({ error: result.error });\n        }\n    }\n\n    render() {\n        const { email, validated,  error } = this.state;\n        return (\n            <AuthContainer title=\"FORGOT PASSWORD\">\n                <Form noValidate validated={validated} onSubmit={this.handleSubmit} className=\"wrapper forgot-page\">\n                    <div className=\"inputs\">\n                        <Form.Group>\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                required\n                                pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n                                className=\"input input-email\"\n                                value={email}\n                                onChange={e => this.setState({ email: e.target.value }) }\n                                isInvalid={this.state.invalidEmail}\n                            />\n                        </Form.Group>\n\n                        <div className=\"error\">\n                            { error }\n                        </div>\n                    </div>\n                    <div>\n                        <Button className=\"button-action\" type=\"submit\">CONFIRM</Button>\n                    </div>\n                </Form>\n            </AuthContainer>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        forgotPassword\n    }\n)(ForgotPassword);"]},"metadata":{},"sourceType":"module"}