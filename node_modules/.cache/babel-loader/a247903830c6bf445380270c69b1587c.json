{"ast":null,"code":"var _jsxFileName = \"/home/freedom/Music/tcp-frontend/src/screens/User/Profile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form } from 'react-bootstrap';\nimport Header from '../../components/Sales/Header';\nimport Footer from '../../components/Sales/Footer';\nimport { IconHome, IconProfileActive, IconProfileEmptyUser } from '../../assets/images';\n\nclass ProfileScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fullname: '',\n      mobile: ''\n    };\n  }\n\n  render() {\n    const {\n      fullname,\n      mobile\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sales\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      isHome: true,\n      history: this.props.history,\n      avatar: this.props.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: IconHome,\n      alt: \"home\",\n      className: \"icon-home\",\n      onClick: () => this.props.history.replace('/'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"profile-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"profile\",\n      src: IconProfileActive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }), \"Profile\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"avatar-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"avatar\",\n      src: IconProfileEmptyUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }\n    }, \"Full Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: fullname,\n      onChange: e => this.setState({\n        fullname: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, \"Mobile Number\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      value: mobile,\n      onChange: e => this.setState({\n        mobile: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"change-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, \"CHANGE PASSWORD\")))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, \"SAVE\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  avatar: state.auth.avatar\n});\n\nexport default connect(mapStateToProps, {})(ProfileScreen);","map":{"version":3,"sources":["/home/freedom/Music/tcp-frontend/src/screens/User/Profile.js"],"names":["React","Component","connect","Button","Form","Header","Footer","IconHome","IconProfileActive","IconProfileEmptyUser","ProfileScreen","state","fullname","mobile","render","props","history","avatar","replace","e","setState","target","value","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Button, Form } from 'react-bootstrap';\n\nimport Header from '../../components/Sales/Header';\nimport Footer from '../../components/Sales/Footer';\n\nimport { IconHome, IconProfileActive, IconProfileEmptyUser } from '../../assets/images';\n\nclass ProfileScreen extends Component {\n    state = {\n        fullname: '',\n        mobile: '',\n    }\n\n    render() {\n        const { fullname, mobile } = this.state;\n        return (\n            <div className=\"sales\">\n                <Header isHome={true} history={this.props.history} avatar={this.props.avatar}>\n                    <img src={IconHome} alt=\"home\" className=\"icon-home\" onClick={() => this.props.history.replace('/') } />\n                </Header>\n                <div id=\"profile-page\">\n                    <div className=\"header2\">\n                        <img alt=\"profile\" src={IconProfileActive} />\n                        Profile\n                    </div>\n                    <div className=\"container\">\n                        <Form.Group className=\"avatar-group\">                            \n                            <img alt=\"avatar\" src={IconProfileEmptyUser} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Full Name</Form.Label>\n                            <Form.Control\n                                required\n                                value={fullname}\n                                onChange={e => this.setState({fullname: e.target.value}) }\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Mobile Number</Form.Label>\n                            <Form.Control\n                                required\n                                value={mobile}\n                                onChange={e => this.setState({mobile: e.target.value}) }\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Button className=\"change-password\">CHANGE PASSWORD</Button>\n                        </Form.Group>\n                    </div>\n                </div>\n                <Footer>\n                    <Button type=\"submit\" className=\"button\">SAVE</Button>\n                </Footer>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    avatar: state.auth.avatar\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        \n    }\n)(ProfileScreen);"]},"metadata":{},"sourceType":"module"}